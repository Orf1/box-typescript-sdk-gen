"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.newDeserializeClientErrorTypeField = exports.newSerializeClientErrorTypeField = exports.newDeserializeIntegrationMappingSlackCreateRequest = exports.newSerializeIntegrationMappingSlackCreateRequest = exports.newDeserializeIntegrationMappingSlackCreateRequestOptionsField = exports.newSerializeIntegrationMappingSlackCreateRequestOptionsField = exports.newDeserializeIntegrationMappingSlackCreateRequestBoxItemField = exports.newSerializeIntegrationMappingSlackCreateRequestBoxItemField = exports.newDeserializeIntegrationMappingSlackCreateRequestPartnerItemField = exports.newSerializeIntegrationMappingSlackCreateRequestPartnerItemField = exports.newDeserializeFileRequestCopyRequest = exports.newSerializeFileRequestCopyRequest = exports.newDeserializeFileRequestCopyRequestFolderField = exports.newSerializeFileRequestCopyRequestFolderField = exports.newDeserializeFileRequestCopyRequestFolderFieldTypeField = exports.newSerializeFileRequestCopyRequestFolderFieldTypeField = exports.newDeserializeFileRequestUpdateRequest = exports.newSerializeFileRequestUpdateRequest = exports.newDeserializeFileRequestUpdateRequestStatusField = exports.newSerializeFileRequestUpdateRequestStatusField = exports.newDeserializeMetadataQuery = exports.newSerializeMetadataQuery = exports.newDeserializeMetadataQueryOrderByField = exports.newSerializeMetadataQueryOrderByField = exports.newDeserializeMetadataQueryOrderByFieldDirectionField = exports.newSerializeMetadataQueryOrderByFieldDirectionField = exports.newDeserializeMetadataQueryQueryParamsField = exports.newSerializeMetadataQueryQueryParamsField = exports.newDeserializeZipDownloadRequest = exports.newSerializeZipDownloadRequest = exports.newDeserializeZipDownloadRequestItemsField = exports.newSerializeZipDownloadRequestItemsField = exports.newDeserializeZipDownloadRequestItemsFieldTypeField = exports.newSerializeZipDownloadRequestItemsFieldTypeField = exports.newDeserializePostOAuth2Revoke = exports.newSerializePostOAuth2Revoke = exports.newDeserializePostOAuth2TokenRefreshAccessToken = exports.newSerializePostOAuth2TokenRefreshAccessToken = exports.newDeserializePostOAuth2TokenRefreshAccessTokenGrantTypeField = exports.newSerializePostOAuth2TokenRefreshAccessTokenGrantTypeField = exports.newDeserializePostOAuth2Token = exports.newSerializePostOAuth2Token = exports.newDeserializePostOAuth2TokenBoxSubjectTypeField = exports.newSerializePostOAuth2TokenBoxSubjectTypeField = exports.newDeserializePostOAuth2TokenActorTokenTypeField = exports.newSerializePostOAuth2TokenActorTokenTypeField = exports.newDeserializePostOAuth2TokenSubjectTokenTypeField = exports.newSerializePostOAuth2TokenSubjectTokenTypeField = exports.newDeserializePostOAuth2TokenGrantTypeField = exports.newSerializePostOAuth2TokenGrantTypeField = void 0;
exports.newDeserializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField = exports.newSerializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField = exports.newDeserializeCollaborationAllowlistExemptTargetTypeField = exports.newSerializeCollaborationAllowlistExemptTargetTypeField = exports.newDeserializeCollaborationAllowlistEntries = exports.newSerializeCollaborationAllowlistEntries = exports.newDeserializeCollaborationAllowlistEntry = exports.newSerializeCollaborationAllowlistEntry = exports.newDeserializeCollaborationAllowlistEntryEnterpriseField = exports.newSerializeCollaborationAllowlistEntryEnterpriseField = exports.newDeserializeCollaborationAllowlistEntryEnterpriseFieldTypeField = exports.newSerializeCollaborationAllowlistEntryEnterpriseFieldTypeField = exports.newDeserializeCollaborationAllowlistEntryDirectionField = exports.newSerializeCollaborationAllowlistEntryDirectionField = exports.newDeserializeCollaborationAllowlistEntryTypeField = exports.newSerializeCollaborationAllowlistEntryTypeField = exports.newDeserializeClassificationTemplate = exports.newSerializeClassificationTemplate = exports.newDeserializeClassificationTemplateFieldsField = exports.newSerializeClassificationTemplateFieldsField = exports.newDeserializeClassificationTemplateFieldsFieldOptionsField = exports.newSerializeClassificationTemplateFieldsFieldOptionsField = exports.newDeserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField = exports.newSerializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField = exports.newDeserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField = exports.newSerializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField = exports.newDeserializeClassificationTemplateFieldsFieldDisplayNameField = exports.newSerializeClassificationTemplateFieldsFieldDisplayNameField = exports.newDeserializeClassificationTemplateFieldsFieldKeyField = exports.newSerializeClassificationTemplateFieldsFieldKeyField = exports.newDeserializeClassificationTemplateFieldsFieldTypeField = exports.newSerializeClassificationTemplateFieldsFieldTypeField = exports.newDeserializeClassificationTemplateDisplayNameField = exports.newSerializeClassificationTemplateDisplayNameField = exports.newDeserializeClassificationTemplateTemplateKeyField = exports.newSerializeClassificationTemplateTemplateKeyField = exports.newDeserializeClassificationTemplateTypeField = exports.newSerializeClassificationTemplateTypeField = exports.newDeserializeClassification = exports.newSerializeClassification = exports.newDeserializeClassificationTemplateField = exports.newSerializeClassificationTemplateField = exports.newDeserializeOAuth2Error = exports.newSerializeOAuth2Error = exports.newDeserializeClientError = exports.newSerializeClientError = exports.newDeserializeClientErrorContextInfoField = exports.newSerializeClientErrorContextInfoField = exports.newDeserializeClientErrorCodeField = exports.newSerializeClientErrorCodeField = void 0;
exports.newDeserializeFileMini = exports.newSerializeFileMini = exports.newDeserializeFileVersionMini = exports.newSerializeFileVersionMini = exports.newDeserializeFileVersionBase = exports.newSerializeFileVersionBase = exports.newDeserializeFileVersionBaseTypeField = exports.newSerializeFileVersionBaseTypeField = exports.newDeserializeFileBase = exports.newSerializeFileBase = exports.newDeserializeFileBaseTypeField = exports.newSerializeFileBaseTypeField = exports.newDeserializeEnterpriseBase = exports.newSerializeEnterpriseBase = exports.newDeserializeEnterpriseBaseTypeField = exports.newSerializeEnterpriseBaseTypeField = exports.newDeserializeEmailAliases = exports.newSerializeEmailAliases = exports.newDeserializeEmailAlias = exports.newSerializeEmailAlias = exports.newDeserializeEmailAliasTypeField = exports.newSerializeEmailAliasTypeField = exports.newDeserializeCommentBase = exports.newSerializeCommentBase = exports.newDeserializeCommentBaseTypeField = exports.newSerializeCommentBaseTypeField = exports.newDeserializeCollections = exports.newSerializeCollections = exports.newDeserializeCollectionsOrderField = exports.newSerializeCollectionsOrderField = exports.newDeserializeCollectionsOrderFieldDirectionField = exports.newSerializeCollectionsOrderFieldDirectionField = exports.newDeserializeCollection = exports.newSerializeCollection = exports.newDeserializeCollectionCollectionTypeField = exports.newSerializeCollectionCollectionTypeField = exports.newDeserializeCollectionNameField = exports.newSerializeCollectionNameField = exports.newDeserializeCollectionTypeField = exports.newSerializeCollectionTypeField = exports.newDeserializeCollaborationAllowlistExemptTargets = exports.newSerializeCollaborationAllowlistExemptTargets = exports.newDeserializeCollaborationAllowlistExemptTarget = exports.newSerializeCollaborationAllowlistExemptTarget = exports.newDeserializeCollaborationAllowlistExemptTargetUserField = exports.newSerializeCollaborationAllowlistExemptTargetUserField = exports.newDeserializeCollaborationAllowlistExemptTargetUserFieldTypeField = exports.newSerializeCollaborationAllowlistExemptTargetUserFieldTypeField = exports.newDeserializeCollaborationAllowlistExemptTargetEnterpriseField = exports.newSerializeCollaborationAllowlistExemptTargetEnterpriseField = void 0;
exports.newDeserializeGroup = exports.newSerializeGroup = exports.newDeserializeGroups = exports.newSerializeGroups = exports.newDeserializeGroupsOrderField = exports.newSerializeGroupsOrderField = exports.newDeserializeGroupsOrderFieldDirectionField = exports.newSerializeGroupsOrderFieldDirectionField = exports.newDeserializeGroupMini = exports.newSerializeGroupMini = exports.newDeserializeGroupMiniGroupTypeField = exports.newSerializeGroupMiniGroupTypeField = exports.newDeserializeGroupBase = exports.newSerializeGroupBase = exports.newDeserializeGroupBaseTypeField = exports.newSerializeGroupBaseTypeField = exports.newDeserializeIntegrationMappingMini = exports.newSerializeIntegrationMappingMini = exports.newDeserializeIntegrationMappingMiniBoxItemTypeField = exports.newSerializeIntegrationMappingMiniBoxItemTypeField = exports.newDeserializeIntegrationMappingMiniPartnerItemTypeField = exports.newSerializeIntegrationMappingMiniPartnerItemTypeField = exports.newDeserializeIntegrationMappingBase = exports.newSerializeIntegrationMappingBase = exports.newDeserializeIntegrationMappingBaseIntegrationTypeField = exports.newSerializeIntegrationMappingBaseIntegrationTypeField = exports.newDeserializeFolderMini = exports.newSerializeFolderMini = exports.newDeserializeFolderBase = exports.newSerializeFolderBase = exports.newDeserializeFolderBaseTypeField = exports.newSerializeFolderBaseTypeField = exports.newDeserializeConflictError = exports.newSerializeConflictError = exports.newDeserializeConflictErrorContextInfoField = exports.newSerializeConflictErrorContextInfoField = exports.newDeserializeFileConflict = exports.newSerializeFileConflict = exports.newDeserializeFilesUnderRetention = exports.newSerializeFilesUnderRetention = exports.newDeserializeAccessToken = exports.newSerializeAccessToken = exports.newDeserializeAccessTokenIssuedTokenTypeField = exports.newSerializeAccessTokenIssuedTokenTypeField = exports.newDeserializeAccessTokenTokenTypeField = exports.newSerializeAccessTokenTokenTypeField = exports.newDeserializeFileScope = exports.newSerializeFileScope = exports.newDeserializeFileScopeScopeField = exports.newSerializeFileScopeScopeField = void 0;
exports.newDeserializeMetadataQueryIndex = exports.newSerializeMetadataQueryIndex = exports.newDeserializeMetadataQueryIndexFieldsField = exports.newSerializeMetadataQueryIndexFieldsField = exports.newDeserializeMetadataQueryIndexFieldsFieldSortDirectionField = exports.newSerializeMetadataQueryIndexFieldsFieldSortDirectionField = exports.newDeserializeMetadataQueryIndexStatusField = exports.newSerializeMetadataQueryIndexStatusField = exports.newDeserializeMetadataCascadePolicies = exports.newSerializeMetadataCascadePolicies = exports.newDeserializeMetadataCascadePolicy = exports.newSerializeMetadataCascadePolicy = exports.newDeserializeMetadataCascadePolicyScopeField = exports.newSerializeMetadataCascadePolicyScopeField = exports.newDeserializeMetadataCascadePolicyParentField = exports.newSerializeMetadataCascadePolicyParentField = exports.newDeserializeMetadataCascadePolicyParentFieldTypeField = exports.newSerializeMetadataCascadePolicyParentFieldTypeField = exports.newDeserializeMetadataCascadePolicyOwnerEnterpriseField = exports.newSerializeMetadataCascadePolicyOwnerEnterpriseField = exports.newDeserializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField = exports.newSerializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField = exports.newDeserializeMetadataCascadePolicyTypeField = exports.newSerializeMetadataCascadePolicyTypeField = exports.newDeserializeMetadataBase = exports.newSerializeMetadataBase = exports.newDeserializeMetadataFull = exports.newSerializeMetadataFull = exports.newDeserializeMetadatas = exports.newSerializeMetadatas = exports.newDeserializeMetadata = exports.newSerializeMetadata = exports.newDeserializeLegalHoldPolicyAssignments = exports.newSerializeLegalHoldPolicyAssignments = exports.newDeserializeLegalHoldPolicyAssignmentBase = exports.newSerializeLegalHoldPolicyAssignmentBase = exports.newDeserializeLegalHoldPolicyAssignmentBaseTypeField = exports.newSerializeLegalHoldPolicyAssignmentBaseTypeField = exports.newDeserializeLegalHoldPolicyMini = exports.newSerializeLegalHoldPolicyMini = exports.newDeserializeLegalHoldPolicyMiniTypeField = exports.newSerializeLegalHoldPolicyMiniTypeField = exports.newDeserializeGroupFull = exports.newSerializeGroupFull = exports.newDeserializeGroupFullPermissionsField = exports.newSerializeGroupFullPermissionsField = exports.newDeserializeGroupFullMemberViewabilityLevelField = exports.newSerializeGroupFullMemberViewabilityLevelField = exports.newDeserializeGroupFullInvitabilityLevelField = exports.newSerializeGroupFullInvitabilityLevelField = void 0;
exports.newDeserializeShieldInformationBarrierReportBase = exports.newSerializeShieldInformationBarrierReportBase = exports.newDeserializeShieldInformationBarrierReportBaseTypeField = exports.newSerializeShieldInformationBarrierReportBaseTypeField = exports.newDeserializeShieldInformationBarrierReference = exports.newSerializeShieldInformationBarrierReference = exports.newDeserializeShieldInformationBarrierBase = exports.newSerializeShieldInformationBarrierBase = exports.newDeserializeShieldInformationBarrierBaseTypeField = exports.newSerializeShieldInformationBarrierBaseTypeField = exports.newDeserializeRetentionPolicyAssignments = exports.newSerializeRetentionPolicyAssignments = exports.newDeserializeRetentionPolicyAssignmentBase = exports.newSerializeRetentionPolicyAssignmentBase = exports.newDeserializeRetentionPolicyAssignmentBaseTypeField = exports.newSerializeRetentionPolicyAssignmentBaseTypeField = exports.newDeserializeFileVersionRetentions = exports.newSerializeFileVersionRetentions = exports.newDeserializeFileVersionRetention = exports.newSerializeFileVersionRetention = exports.newDeserializeFileVersionRetentionTypeField = exports.newSerializeFileVersionRetentionTypeField = exports.newDeserializeRetentionPolicies = exports.newSerializeRetentionPolicies = exports.newDeserializeRetentionPolicyMini = exports.newSerializeRetentionPolicyMini = exports.newDeserializeRetentionPolicyMiniDispositionActionField = exports.newSerializeRetentionPolicyMiniDispositionActionField = exports.newDeserializeRetentionPolicyBase = exports.newSerializeRetentionPolicyBase = exports.newDeserializeRetentionPolicyBaseTypeField = exports.newSerializeRetentionPolicyBaseTypeField = exports.newDeserializeRealtimeServers = exports.newSerializeRealtimeServers = exports.newDeserializeRealtimeServer = exports.newSerializeRealtimeServer = exports.newDeserializeMetadataTemplates = exports.newSerializeMetadataTemplates = exports.newDeserializeMetadataTemplate = exports.newSerializeMetadataTemplate = exports.newDeserializeMetadataTemplateFieldsField = exports.newSerializeMetadataTemplateFieldsField = exports.newDeserializeMetadataTemplateFieldsFieldOptionsField = exports.newSerializeMetadataTemplateFieldsFieldOptionsField = exports.newDeserializeMetadataTemplateFieldsFieldTypeField = exports.newSerializeMetadataTemplateFieldsFieldTypeField = exports.newDeserializeMetadataTemplateTypeField = exports.newSerializeMetadataTemplateTypeField = exports.newDeserializeMetadataQueryIndices = exports.newSerializeMetadataQueryIndices = void 0;
exports.newDeserializeTermsOfServices = exports.newSerializeTermsOfServices = exports.newDeserializeTermsOfService = exports.newSerializeTermsOfService = exports.newDeserializeTermsOfServiceTosTypeField = exports.newSerializeTermsOfServiceTosTypeField = exports.newDeserializeTermsOfServiceEnterpriseField = exports.newSerializeTermsOfServiceEnterpriseField = exports.newDeserializeTermsOfServiceEnterpriseFieldTypeField = exports.newSerializeTermsOfServiceEnterpriseFieldTypeField = exports.newDeserializeTermsOfServiceStatusField = exports.newSerializeTermsOfServiceStatusField = exports.newDeserializeTermsOfServiceBase = exports.newSerializeTermsOfServiceBase = exports.newDeserializeTermsOfServiceBaseTypeField = exports.newSerializeTermsOfServiceBaseTypeField = exports.newDeserializeStoragePolicies = exports.newSerializeStoragePolicies = exports.newDeserializeStoragePolicy = exports.newSerializeStoragePolicy = exports.newDeserializeStoragePolicyAssignments = exports.newSerializeStoragePolicyAssignments = exports.newDeserializeStoragePolicyAssignment = exports.newSerializeStoragePolicyAssignment = exports.newDeserializeStoragePolicyAssignmentAssignedToField = exports.newSerializeStoragePolicyAssignmentAssignedToField = exports.newDeserializeStoragePolicyMini = exports.newSerializeStoragePolicyMini = exports.newDeserializeStoragePolicyMiniTypeField = exports.newSerializeStoragePolicyMiniTypeField = exports.newDeserializeSessionTerminationMessage = exports.newSerializeSessionTerminationMessage = exports.newDeserializeShieldInformationBarrierSegmentRestrictionMini = exports.newSerializeShieldInformationBarrierSegmentRestrictionMini = exports.newDeserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField = exports.newSerializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField = exports.newDeserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField = exports.newSerializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField = exports.newDeserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField = exports.newSerializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField = exports.newDeserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField = exports.newSerializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField = exports.newDeserializeShieldInformationBarrierSegmentRestrictionBase = exports.newSerializeShieldInformationBarrierSegmentRestrictionBase = exports.newDeserializeShieldInformationBarrierSegmentRestrictionBaseTypeField = exports.newSerializeShieldInformationBarrierSegmentRestrictionBaseTypeField = exports.newDeserializeShieldInformationBarrierSegmentMemberBase = exports.newSerializeShieldInformationBarrierSegmentMemberBase = exports.newDeserializeShieldInformationBarrierSegmentMemberBaseTypeField = exports.newSerializeShieldInformationBarrierSegmentMemberBaseTypeField = void 0;
exports.newDeserializeUsersOrderFieldDirectionField = exports.newSerializeUsersOrderFieldDirectionField = exports.newDeserializeUser = exports.newSerializeUser = exports.newDeserializeUserNotificationEmailField = exports.newSerializeUserNotificationEmailField = exports.newDeserializeUserStatusField = exports.newSerializeUserStatusField = exports.newDeserializeEventSource = exports.newSerializeEventSource = exports.newDeserializeEventSourceClassificationField = exports.newSerializeEventSourceClassificationField = exports.newDeserializeEventSourceItemTypeField = exports.newSerializeEventSourceItemTypeField = exports.newDeserializeUserMini = exports.newSerializeUserMini = exports.newDeserializeUserCollaborations = exports.newSerializeUserCollaborations = exports.newDeserializeUserIntegrationMappings = exports.newSerializeUserIntegrationMappings = exports.newDeserializeUserBase = exports.newSerializeUserBase = exports.newDeserializeUserBaseTypeField = exports.newSerializeUserBaseTypeField = exports.newDeserializeUserAvatar = exports.newSerializeUserAvatar = exports.newDeserializeUserAvatarPicUrlsField = exports.newSerializeUserAvatarPicUrlsField = exports.newDeserializeUploadUrl = exports.newSerializeUploadUrl = exports.newDeserializeUploadSession = exports.newSerializeUploadSession = exports.newDeserializeUploadSessionSessionEndpointsField = exports.newSerializeUploadSessionSessionEndpointsField = exports.newDeserializeUploadSessionTypeField = exports.newSerializeUploadSessionTypeField = exports.newDeserializeUploadedPart = exports.newSerializeUploadedPart = exports.newDeserializeUploadParts = exports.newSerializeUploadParts = exports.newDeserializeUploadPartsOrderField = exports.newSerializeUploadPartsOrderField = exports.newDeserializeUploadPartsOrderFieldDirectionField = exports.newSerializeUploadPartsOrderFieldDirectionField = exports.newDeserializeUploadPart = exports.newSerializeUploadPart = exports.newDeserializeUploadPartMini = exports.newSerializeUploadPartMini = exports.newDeserializeSignTemplates = exports.newSerializeSignTemplates = void 0;
exports.newDeserializeTrashFolderItemStatusField = exports.newSerializeTrashFolderItemStatusField = exports.newDeserializeTrashFolderPathCollectionField = exports.newSerializeTrashFolderPathCollectionField = exports.newDeserializeTrashFolderPathCollectionFieldEntriesField = exports.newSerializeTrashFolderPathCollectionFieldEntriesField = exports.newDeserializeTrashFolderPathCollectionFieldEntriesFieldTypeField = exports.newSerializeTrashFolderPathCollectionFieldEntriesFieldTypeField = exports.newDeserializeTrashFolderTypeField = exports.newSerializeTrashFolderTypeField = exports.newDeserializeTrashWebLink = exports.newSerializeTrashWebLink = exports.newDeserializeTrashWebLinkItemStatusField = exports.newSerializeTrashWebLinkItemStatusField = exports.newDeserializeTrashWebLinkPathCollectionField = exports.newSerializeTrashWebLinkPathCollectionField = exports.newDeserializeTrashWebLinkPathCollectionFieldEntriesField = exports.newSerializeTrashWebLinkPathCollectionFieldEntriesField = exports.newDeserializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField = exports.newSerializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField = exports.newDeserializeTrashWebLinkTypeField = exports.newSerializeTrashWebLinkTypeField = exports.newDeserializeTrashFileRestored = exports.newSerializeTrashFileRestored = exports.newDeserializeTrashFileRestoredItemStatusField = exports.newSerializeTrashFileRestoredItemStatusField = exports.newDeserializeTrashFileRestoredPathCollectionField = exports.newSerializeTrashFileRestoredPathCollectionField = exports.newDeserializeTrashFileRestoredTypeField = exports.newSerializeTrashFileRestoredTypeField = exports.newDeserializeTrashFolderRestored = exports.newSerializeTrashFolderRestored = exports.newDeserializeTrashFolderRestoredItemStatusField = exports.newSerializeTrashFolderRestoredItemStatusField = exports.newDeserializeTrashFolderRestoredPathCollectionField = exports.newSerializeTrashFolderRestoredPathCollectionField = exports.newDeserializeTrashFolderRestoredTypeField = exports.newSerializeTrashFolderRestoredTypeField = exports.newDeserializeTrashWebLinkRestored = exports.newSerializeTrashWebLinkRestored = exports.newDeserializeTrashWebLinkRestoredItemStatusField = exports.newSerializeTrashWebLinkRestoredItemStatusField = exports.newDeserializeTrashWebLinkRestoredPathCollectionField = exports.newSerializeTrashWebLinkRestoredPathCollectionField = exports.newDeserializeTrashWebLinkRestoredTypeField = exports.newSerializeTrashWebLinkRestoredTypeField = exports.newDeserializeUsers = exports.newSerializeUsers = exports.newDeserializeUsersOrderField = exports.newSerializeUsersOrderField = void 0;
exports.newDeserializeRetentionPolicyPolicyTypeField = exports.newSerializeRetentionPolicyPolicyTypeField = exports.newDeserializeRetentionPolicyAssignment = exports.newSerializeRetentionPolicyAssignment = exports.newDeserializeRetentionPolicyAssignmentFilterFieldsField = exports.newSerializeRetentionPolicyAssignmentFilterFieldsField = exports.newDeserializeRetentionPolicyAssignmentAssignedToField = exports.newSerializeRetentionPolicyAssignmentAssignedToField = exports.newDeserializeRetentionPolicyAssignmentAssignedToFieldTypeField = exports.newSerializeRetentionPolicyAssignmentAssignedToFieldTypeField = exports.newDeserializeRetentionPolicyAssignmentTypeField = exports.newSerializeRetentionPolicyAssignmentTypeField = exports.newDeserializeTasks = exports.newSerializeTasks = exports.newDeserializeTask = exports.newSerializeTask = exports.newDeserializeTaskCompletionRuleField = exports.newSerializeTaskCompletionRuleField = exports.newDeserializeTaskActionField = exports.newSerializeTaskActionField = exports.newDeserializeTaskTypeField = exports.newSerializeTaskTypeField = exports.newDeserializeTaskAssignments = exports.newSerializeTaskAssignments = exports.newDeserializeTaskAssignment = exports.newSerializeTaskAssignment = exports.newDeserializeTaskAssignmentResolutionStateField = exports.newSerializeTaskAssignmentResolutionStateField = exports.newDeserializeTaskAssignmentTypeField = exports.newSerializeTaskAssignmentTypeField = exports.newDeserializeTermsOfServiceUserStatuses = exports.newSerializeTermsOfServiceUserStatuses = exports.newDeserializeTermsOfServiceUserStatus = exports.newSerializeTermsOfServiceUserStatus = exports.newDeserializeTermsOfServiceUserStatusTypeField = exports.newSerializeTermsOfServiceUserStatusTypeField = exports.newDeserializeTrashFile = exports.newSerializeTrashFile = exports.newDeserializeTrashFileItemStatusField = exports.newSerializeTrashFileItemStatusField = exports.newDeserializeTrashFilePathCollectionField = exports.newSerializeTrashFilePathCollectionField = exports.newDeserializeTrashFilePathCollectionFieldEntriesField = exports.newSerializeTrashFilePathCollectionFieldEntriesField = exports.newDeserializeTrashFilePathCollectionFieldEntriesFieldTypeField = exports.newSerializeTrashFilePathCollectionFieldEntriesFieldTypeField = exports.newDeserializeTrashFileTypeField = exports.newSerializeTrashFileTypeField = exports.newDeserializeTrashFolder = exports.newSerializeTrashFolder = void 0;
exports.newDeserializeFileRequestStatusField = exports.newSerializeFileRequestStatusField = exports.newDeserializeFileRequestTypeField = exports.newSerializeFileRequestTypeField = exports.newDeserializeFileVersionFull = exports.newSerializeFileVersionFull = exports.newDeserializeFileVersions = exports.newSerializeFileVersions = exports.newDeserializeFileVersionsOrderField = exports.newSerializeFileVersionsOrderField = exports.newDeserializeFileVersionsOrderFieldDirectionField = exports.newSerializeFileVersionsOrderFieldDirectionField = exports.newDeserializeFileVersion = exports.newSerializeFileVersion = exports.newDeserializeGroupMemberships = exports.newSerializeGroupMemberships = exports.newDeserializeGroupMembershipsOrderField = exports.newSerializeGroupMembershipsOrderField = exports.newDeserializeGroupMembershipsOrderFieldDirectionField = exports.newSerializeGroupMembershipsOrderFieldDirectionField = exports.newDeserializeGroupMembership = exports.newSerializeGroupMembership = exports.newDeserializeGroupMembershipRoleField = exports.newSerializeGroupMembershipRoleField = exports.newDeserializeGroupMembershipTypeField = exports.newSerializeGroupMembershipTypeField = exports.newDeserializeInvite = exports.newSerializeInvite = exports.newDeserializeInviteInvitedToField = exports.newSerializeInviteInvitedToField = exports.newDeserializeInviteInvitedToFieldTypeField = exports.newSerializeInviteInvitedToFieldTypeField = exports.newDeserializeInviteTypeField = exports.newSerializeInviteTypeField = exports.newDeserializeLegalHoldPolicies = exports.newSerializeLegalHoldPolicies = exports.newDeserializeLegalHoldPolicy = exports.newSerializeLegalHoldPolicy = exports.newDeserializeLegalHoldPolicyAssignmentCountsField = exports.newSerializeLegalHoldPolicyAssignmentCountsField = exports.newDeserializeLegalHoldPolicyStatusField = exports.newSerializeLegalHoldPolicyStatusField = exports.newDeserializeRetentionPolicy = exports.newSerializeRetentionPolicy = exports.newDeserializeRetentionPolicyAssignmentCountsField = exports.newSerializeRetentionPolicyAssignmentCountsField = exports.newDeserializeRetentionPolicyStatusField = exports.newSerializeRetentionPolicyStatusField = exports.newDeserializeRetentionPolicyRetentionTypeField = exports.newSerializeRetentionPolicyRetentionTypeField = void 0;
exports.newDeserializeFileFullRepresentationsField = exports.newSerializeFileFullRepresentationsField = exports.newDeserializeFileFullRepresentationsFieldEntriesField = exports.newSerializeFileFullRepresentationsFieldEntriesField = exports.newDeserializeFileFullRepresentationsFieldEntriesFieldStatusField = exports.newSerializeFileFullRepresentationsFieldEntriesFieldStatusField = exports.newDeserializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField = exports.newSerializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField = exports.newDeserializeFileFullRepresentationsFieldEntriesFieldPropertiesField = exports.newSerializeFileFullRepresentationsFieldEntriesFieldPropertiesField = exports.newDeserializeFileFullRepresentationsFieldEntriesFieldInfoField = exports.newSerializeFileFullRepresentationsFieldEntriesFieldInfoField = exports.newDeserializeFileFullRepresentationsFieldEntriesFieldContentField = exports.newSerializeFileFullRepresentationsFieldEntriesFieldContentField = exports.newDeserializeFileFullMetadataField = exports.newSerializeFileFullMetadataField = exports.newDeserializeFileFullAllowedInviteeRolesField = exports.newSerializeFileFullAllowedInviteeRolesField = exports.newDeserializeFileFullWatermarkInfoField = exports.newSerializeFileFullWatermarkInfoField = exports.newDeserializeFileFullExpiringEmbedLinkField = exports.newSerializeFileFullExpiringEmbedLinkField = exports.newDeserializeFileFullExpiringEmbedLinkFieldTokenTypeField = exports.newSerializeFileFullExpiringEmbedLinkFieldTokenTypeField = exports.newDeserializeFileFullLockField = exports.newSerializeFileFullLockField = exports.newDeserializeFileFullLockFieldAppTypeField = exports.newSerializeFileFullLockFieldAppTypeField = exports.newDeserializeFileFullLockFieldTypeField = exports.newSerializeFileFullLockFieldTypeField = exports.newDeserializeFileFullPermissionsField = exports.newSerializeFileFullPermissionsField = exports.newDeserializeFile = exports.newSerializeFile = exports.newDeserializeFileItemStatusField = exports.newSerializeFileItemStatusField = exports.newDeserializeFileSharedLinkField = exports.newSerializeFileSharedLinkField = exports.newDeserializeFileSharedLinkFieldPermissionsField = exports.newSerializeFileSharedLinkFieldPermissionsField = exports.newDeserializeFileSharedLinkFieldEffectivePermissionField = exports.newSerializeFileSharedLinkFieldEffectivePermissionField = exports.newDeserializeFileSharedLinkFieldEffectiveAccessField = exports.newSerializeFileSharedLinkFieldEffectiveAccessField = exports.newDeserializeFileSharedLinkFieldAccessField = exports.newSerializeFileSharedLinkFieldAccessField = exports.newDeserializeFilePathCollectionField = exports.newSerializeFilePathCollectionField = exports.newDeserializeFileRequest = exports.newSerializeFileRequest = void 0;
exports.newDeserializeShieldInformationBarrierReportStatusField = exports.newSerializeShieldInformationBarrierReportStatusField = exports.newDeserializeShieldInformationBarrierReportShieldInformationBarrierField = exports.newSerializeShieldInformationBarrierReportShieldInformationBarrierField = exports.newDeserializeShieldInformationBarrierSegment = exports.newSerializeShieldInformationBarrierSegment = exports.newDeserializeShieldInformationBarrierSegmentTypeField = exports.newSerializeShieldInformationBarrierSegmentTypeField = exports.newDeserializeShieldInformationBarrierSegmentMember = exports.newSerializeShieldInformationBarrierSegmentMember = exports.newDeserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField = exports.newSerializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField = exports.newDeserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField = exports.newSerializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField = exports.newDeserializeShieldInformationBarrierSegmentMemberMini = exports.newSerializeShieldInformationBarrierSegmentMemberMini = exports.newDeserializeShieldInformationBarrierSegmentRestriction = exports.newSerializeShieldInformationBarrierSegmentRestriction = exports.newDeserializeComments = exports.newSerializeComments = exports.newDeserializeCommentsOrderField = exports.newSerializeCommentsOrderField = exports.newDeserializeCommentsOrderFieldDirectionField = exports.newSerializeCommentsOrderFieldDirectionField = exports.newDeserializeCommentFull = exports.newSerializeCommentFull = exports.newDeserializeComment = exports.newSerializeComment = exports.newDeserializeCommentItemField = exports.newSerializeCommentItemField = exports.newDeserializeDevicePinners = exports.newSerializeDevicePinners = exports.newDeserializeDevicePinnersOrderField = exports.newSerializeDevicePinnersOrderField = exports.newDeserializeDevicePinnersOrderFieldDirectionField = exports.newSerializeDevicePinnersOrderFieldDirectionField = exports.newDeserializeDevicePinnersOrderFieldByField = exports.newSerializeDevicePinnersOrderFieldByField = exports.newDeserializeDevicePinner = exports.newSerializeDevicePinner = exports.newDeserializeDevicePinnerTypeField = exports.newSerializeDevicePinnerTypeField = exports.newDeserializeFiles = exports.newSerializeFiles = exports.newDeserializeFileFull = exports.newSerializeFileFull = exports.newDeserializeFileFullSharedLinkPermissionOptionsField = exports.newSerializeFileFullSharedLinkPermissionOptionsField = exports.newDeserializeFileFullClassificationField = exports.newSerializeFileFullClassificationField = void 0;
exports.newDeserializeFolderPathCollectionField = exports.newSerializeFolderPathCollectionField = exports.newDeserializeItems = exports.newSerializeItems = exports.newDeserializeItemsOrderField = exports.newSerializeItemsOrderField = exports.newDeserializeItemsOrderFieldDirectionField = exports.newSerializeItemsOrderFieldDirectionField = exports.newDeserializeFileMiniOrFolderMiniOrWebLinkMini = exports.newSerializeFileMiniOrFolderMiniOrWebLinkMini = exports.newDeserializeWebLinkMini = exports.newSerializeWebLinkMini = exports.newDeserializeWebLinkBase = exports.newSerializeWebLinkBase = exports.newDeserializeWebLinkBaseTypeField = exports.newSerializeWebLinkBaseTypeField = exports.newDeserializeWebhook = exports.newSerializeWebhook = exports.newDeserializeWebhookTriggersField = exports.newSerializeWebhookTriggersField = exports.newDeserializeWebhooks = exports.newSerializeWebhooks = exports.newDeserializeWebhookMini = exports.newSerializeWebhookMini = exports.newDeserializeWebhookMiniTargetField = exports.newSerializeWebhookMiniTargetField = exports.newDeserializeWebhookMiniTargetFieldTypeField = exports.newSerializeWebhookMiniTargetFieldTypeField = exports.newDeserializeWebhookMiniTypeField = exports.newSerializeWebhookMiniTypeField = exports.newDeserializeWatermark = exports.newSerializeWatermark = exports.newDeserializeWatermarkWatermarkField = exports.newSerializeWatermarkWatermarkField = exports.newDeserializeFolderLocks = exports.newSerializeFolderLocks = exports.newDeserializeFolderLock = exports.newSerializeFolderLock = exports.newDeserializeFolderLockLockedOperationsField = exports.newSerializeFolderLockLockedOperationsField = exports.newDeserializeShieldInformationBarrier = exports.newSerializeShieldInformationBarrier = exports.newDeserializeShieldInformationBarrierStatusField = exports.newSerializeShieldInformationBarrierStatusField = exports.newDeserializeShieldInformationBarrierTypeField = exports.newSerializeShieldInformationBarrierTypeField = exports.newDeserializeShieldInformationBarrierReport = exports.newSerializeShieldInformationBarrierReport = exports.newDeserializeShieldInformationBarrierReportDetailsField = exports.newSerializeShieldInformationBarrierReportDetailsField = void 0;
exports.newDeserializeSkillInvocationTokenFieldWriteFieldTokenTypeField = exports.newSerializeSkillInvocationTokenFieldWriteFieldTokenTypeField = exports.newDeserializeSkillInvocationTokenFieldReadField = exports.newSerializeSkillInvocationTokenFieldReadField = exports.newDeserializeSkillInvocationTokenFieldReadFieldTokenTypeField = exports.newSerializeSkillInvocationTokenFieldReadFieldTokenTypeField = exports.newDeserializeSkillInvocationSkillField = exports.newSerializeSkillInvocationSkillField = exports.newDeserializeSkillInvocationSkillFieldTypeField = exports.newSerializeSkillInvocationSkillFieldTypeField = exports.newDeserializeSkillInvocationTypeField = exports.newSerializeSkillInvocationTypeField = exports.newDeserializeWebhookInvocation = exports.newSerializeWebhookInvocation = exports.newDeserializeWebhookInvocationTriggerField = exports.newSerializeWebhookInvocationTriggerField = exports.newDeserializeWebhookInvocationTypeField = exports.newSerializeWebhookInvocationTypeField = exports.newDeserializeMetadataQueryResults = exports.newSerializeMetadataQueryResults = exports.newDeserializeFileOrFolder = exports.newSerializeFileOrFolder = exports.newDeserializeEvents = exports.newSerializeEvents = exports.newDeserializeEvent = exports.newSerializeEvent = exports.newDeserializeEventAdditionalDetailsField = exports.newSerializeEventAdditionalDetailsField = exports.newDeserializeEventEventTypeField = exports.newSerializeEventEventTypeField = exports.newDeserializeEventSourceOrFileOrFolderOrUser = exports.newSerializeEventSourceOrFileOrFolderOrUser = exports.newDeserializeFolder = exports.newSerializeFolder = exports.newDeserializeFolderItemStatusField = exports.newSerializeFolderItemStatusField = exports.newDeserializeFolderFolderUploadEmailField = exports.newSerializeFolderFolderUploadEmailField = exports.newDeserializeFolderFolderUploadEmailFieldAccessField = exports.newSerializeFolderFolderUploadEmailFieldAccessField = exports.newDeserializeFolderSharedLinkField = exports.newSerializeFolderSharedLinkField = exports.newDeserializeFolderSharedLinkFieldPermissionsField = exports.newSerializeFolderSharedLinkFieldPermissionsField = exports.newDeserializeFolderSharedLinkFieldEffectivePermissionField = exports.newSerializeFolderSharedLinkFieldEffectivePermissionField = exports.newDeserializeFolderSharedLinkFieldEffectiveAccessField = exports.newSerializeFolderSharedLinkFieldEffectiveAccessField = exports.newDeserializeFolderSharedLinkFieldAccessField = exports.newSerializeFolderSharedLinkFieldAccessField = void 0;
exports.newDeserializeSearchResultWithSharedLink = exports.newSerializeSearchResultWithSharedLink = exports.newDeserializeFileOrFolderOrWebLink = exports.newSerializeFileOrFolderOrWebLink = exports.newDeserializeWebLink = exports.newSerializeWebLink = exports.newDeserializeWebLinkItemStatusField = exports.newSerializeWebLinkItemStatusField = exports.newDeserializeWebLinkSharedLinkField = exports.newSerializeWebLinkSharedLinkField = exports.newDeserializeWebLinkSharedLinkFieldPermissionsField = exports.newSerializeWebLinkSharedLinkFieldPermissionsField = exports.newDeserializeWebLinkSharedLinkFieldEffectivePermissionField = exports.newSerializeWebLinkSharedLinkFieldEffectivePermissionField = exports.newDeserializeWebLinkSharedLinkFieldEffectiveAccessField = exports.newSerializeWebLinkSharedLinkFieldEffectiveAccessField = exports.newDeserializeWebLinkSharedLinkFieldAccessField = exports.newSerializeWebLinkSharedLinkFieldAccessField = exports.newDeserializeWebLinkPathCollectionField = exports.newSerializeWebLinkPathCollectionField = exports.newDeserializeFolderFull = exports.newSerializeFolderFull = exports.newDeserializeFolderFullClassificationField = exports.newSerializeFolderFullClassificationField = exports.newDeserializeFolderFullWatermarkInfoField = exports.newSerializeFolderFullWatermarkInfoField = exports.newDeserializeFolderFullAllowedInviteeRolesField = exports.newSerializeFolderFullAllowedInviteeRolesField = exports.newDeserializeFolderFullAllowedSharedLinkAccessLevelsField = exports.newSerializeFolderFullAllowedSharedLinkAccessLevelsField = exports.newDeserializeFolderFullMetadataField = exports.newSerializeFolderFullMetadataField = exports.newDeserializeFolderFullPermissionsField = exports.newSerializeFolderFullPermissionsField = exports.newDeserializeFolderFullSyncStateField = exports.newSerializeFolderFullSyncStateField = exports.newDeserializeSkillInvocation = exports.newSerializeSkillInvocation = exports.newDeserializeSkillInvocationEnterpriseField = exports.newSerializeSkillInvocationEnterpriseField = exports.newDeserializeSkillInvocationEnterpriseFieldTypeField = exports.newSerializeSkillInvocationEnterpriseFieldTypeField = exports.newDeserializeSkillInvocationStatusField = exports.newSerializeSkillInvocationStatusField = exports.newDeserializeSkillInvocationStatusFieldStateField = exports.newSerializeSkillInvocationStatusFieldStateField = exports.newDeserializeSkillInvocationTokenField = exports.newSerializeSkillInvocationTokenField = exports.newDeserializeSkillInvocationTokenFieldWriteField = exports.newSerializeSkillInvocationTokenFieldWriteField = void 0;
exports.newDeserializeWorkflowFlowsFieldTriggerFieldTypeField = exports.newSerializeWorkflowFlowsFieldTriggerFieldTypeField = exports.newDeserializeWorkflowFlowsFieldTypeField = exports.newSerializeWorkflowFlowsFieldTypeField = exports.newDeserializeWorkflowMini = exports.newSerializeWorkflowMini = exports.newDeserializeWorkflowMiniTypeField = exports.newSerializeWorkflowMiniTypeField = exports.newDeserializeCollaborations = exports.newSerializeCollaborations = exports.newDeserializeCollaborationsOrderField = exports.newSerializeCollaborationsOrderField = exports.newDeserializeCollaborationsOrderFieldDirectionField = exports.newSerializeCollaborationsOrderFieldDirectionField = exports.newDeserializeCollaboration = exports.newSerializeCollaboration = exports.newDeserializeCollaborationAcceptanceRequirementsStatusField = exports.newSerializeCollaborationAcceptanceRequirementsStatusField = exports.newDeserializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField = exports.newSerializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField = exports.newDeserializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField = exports.newSerializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField = exports.newDeserializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField = exports.newSerializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField = exports.newDeserializeCollaborationStatusField = exports.newSerializeCollaborationStatusField = exports.newDeserializeCollaborationRoleField = exports.newSerializeCollaborationRoleField = exports.newDeserializeCollaborationTypeField = exports.newSerializeCollaborationTypeField = exports.newDeserializeFileVersionLegalHolds = exports.newSerializeFileVersionLegalHolds = exports.newDeserializeFileVersionLegalHold = exports.newSerializeFileVersionLegalHold = exports.newDeserializeFileVersionLegalHoldTypeField = exports.newSerializeFileVersionLegalHoldTypeField = exports.newDeserializeLegalHoldPolicyAssignment = exports.newSerializeLegalHoldPolicyAssignment = exports.newDeserializeRecentItems = exports.newSerializeRecentItems = exports.newDeserializeRecentItem = exports.newSerializeRecentItem = exports.newDeserializeRecentItemInteractionTypeField = exports.newSerializeRecentItemInteractionTypeField = exports.newDeserializeSearchResultsOrSearchResultsWithSharedLinks = exports.newSerializeSearchResultsOrSearchResultsWithSharedLinks = exports.newDeserializeSearchResults = exports.newSerializeSearchResults = exports.newDeserializeSearchResultsWithSharedLinks = exports.newSerializeSearchResultsWithSharedLinks = void 0;
exports.newDeserializeKeywordSkillCardSkillFieldTypeField = exports.newSerializeKeywordSkillCardSkillFieldTypeField = exports.newDeserializeKeywordSkillCardSkillCardTitleField = exports.newSerializeKeywordSkillCardSkillCardTitleField = exports.newDeserializeKeywordSkillCardSkillCardTypeField = exports.newSerializeKeywordSkillCardSkillCardTypeField = exports.newDeserializeKeywordSkillCardTypeField = exports.newSerializeKeywordSkillCardTypeField = exports.newDeserializeZipDownloadStatus = exports.newSerializeZipDownloadStatus = exports.newDeserializeZipDownloadStatusStateField = exports.newSerializeZipDownloadStatusStateField = exports.newDeserializeZipDownload = exports.newSerializeZipDownload = exports.newDeserializeZipDownloadNameConflictsField = exports.newSerializeZipDownloadNameConflictsField = exports.newDeserializeZipDownloadNameConflictsFieldTypeField = exports.newSerializeZipDownloadNameConflictsFieldTypeField = exports.newDeserializeWorkflowFull = exports.newSerializeWorkflowFull = exports.newDeserializeWorkflows = exports.newSerializeWorkflows = exports.newDeserializeWorkflow = exports.newSerializeWorkflow = exports.newDeserializeWorkflowFlowsField = exports.newSerializeWorkflowFlowsField = exports.newDeserializeWorkflowFlowsFieldOutcomesField = exports.newSerializeWorkflowFlowsFieldOutcomesField = exports.newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedField = exports.newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedField = exports.newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField = exports.newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField = exports.newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField = exports.newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField = exports.newDeserializeWorkflowFlowsFieldOutcomesFieldActionTypeField = exports.newSerializeWorkflowFlowsFieldOutcomesFieldActionTypeField = exports.newDeserializeWorkflowFlowsFieldOutcomesFieldTypeField = exports.newSerializeWorkflowFlowsFieldOutcomesFieldTypeField = exports.newDeserializeWorkflowFlowsFieldTriggerField = exports.newSerializeWorkflowFlowsFieldTriggerField = exports.newDeserializeWorkflowFlowsFieldTriggerFieldScopeField = exports.newSerializeWorkflowFlowsFieldTriggerFieldScopeField = exports.newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField = exports.newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField = exports.newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField = exports.newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField = exports.newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField = exports.newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField = exports.newDeserializeWorkflowFlowsFieldTriggerFieldTriggerTypeField = exports.newSerializeWorkflowFlowsFieldTriggerFieldTriggerTypeField = void 0;
exports.newDeserializeTimelineSkillCardEntriesFieldAppearsField = exports.newSerializeTimelineSkillCardEntriesFieldAppearsField = exports.newDeserializeTimelineSkillCardInvocationField = exports.newSerializeTimelineSkillCardInvocationField = exports.newDeserializeTimelineSkillCardInvocationFieldTypeField = exports.newSerializeTimelineSkillCardInvocationFieldTypeField = exports.newDeserializeTimelineSkillCardSkillField = exports.newSerializeTimelineSkillCardSkillField = exports.newDeserializeTimelineSkillCardSkillFieldTypeField = exports.newSerializeTimelineSkillCardSkillFieldTypeField = exports.newDeserializeTimelineSkillCardSkillCardTitleField = exports.newSerializeTimelineSkillCardSkillCardTitleField = exports.newDeserializeTimelineSkillCardSkillCardTypeField = exports.newSerializeTimelineSkillCardSkillCardTypeField = exports.newDeserializeTimelineSkillCardTypeField = exports.newSerializeTimelineSkillCardTypeField = exports.newDeserializeIntegrationMappingBoxItemSlack = exports.newSerializeIntegrationMappingBoxItemSlack = exports.newDeserializeIntegrationMappingBoxItemSlackTypeField = exports.newSerializeIntegrationMappingBoxItemSlackTypeField = exports.newDeserializeIntegrationMappings = exports.newSerializeIntegrationMappings = exports.newDeserializeIntegrationMapping = exports.newSerializeIntegrationMapping = exports.newDeserializeIntegrationMappingModifiedByField = exports.newSerializeIntegrationMappingModifiedByField = exports.newDeserializeIntegrationMappingCreatedByField = exports.newSerializeIntegrationMappingCreatedByField = exports.newDeserializeIntegrationMappingOptionsField = exports.newSerializeIntegrationMappingOptionsField = exports.newDeserializeIntegrationMappingBoxItemField = exports.newSerializeIntegrationMappingBoxItemField = exports.newDeserializeIntegrationMappingTypeField = exports.newSerializeIntegrationMappingTypeField = exports.newDeserializeIntegrationMappingPartnerItemSlack = exports.newSerializeIntegrationMappingPartnerItemSlack = exports.newDeserializeIntegrationMappingPartnerItemSlackTypeField = exports.newSerializeIntegrationMappingPartnerItemSlackTypeField = exports.newDeserializeIntegrationMappingSlackOptions = exports.newSerializeIntegrationMappingSlackOptions = exports.newDeserializeKeywordSkillCard = exports.newSerializeKeywordSkillCard = exports.newDeserializeKeywordSkillCardEntriesField = exports.newSerializeKeywordSkillCardEntriesField = exports.newDeserializeKeywordSkillCardInvocationField = exports.newSerializeKeywordSkillCardInvocationField = exports.newDeserializeKeywordSkillCardInvocationFieldTypeField = exports.newSerializeKeywordSkillCardInvocationFieldTypeField = exports.newDeserializeKeywordSkillCardSkillField = exports.newSerializeKeywordSkillCardSkillField = void 0;
exports.newDeserializeSignRequestCreateSignerRoleField = exports.newSerializeSignRequestCreateSignerRoleField = exports.newDeserializeSkillCardsMetadata = exports.newSerializeSkillCardsMetadata = exports.newDeserializeKeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard = exports.newSerializeKeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard = exports.newDeserializeStatusSkillCard = exports.newSerializeStatusSkillCard = exports.newDeserializeStatusSkillCardInvocationField = exports.newSerializeStatusSkillCardInvocationField = exports.newDeserializeStatusSkillCardInvocationFieldTypeField = exports.newSerializeStatusSkillCardInvocationFieldTypeField = exports.newDeserializeStatusSkillCardSkillField = exports.newSerializeStatusSkillCardSkillField = exports.newDeserializeStatusSkillCardSkillFieldTypeField = exports.newSerializeStatusSkillCardSkillFieldTypeField = exports.newDeserializeStatusSkillCardStatusField = exports.newSerializeStatusSkillCardStatusField = exports.newDeserializeStatusSkillCardStatusFieldCodeField = exports.newSerializeStatusSkillCardStatusFieldCodeField = exports.newDeserializeStatusSkillCardSkillCardTitleField = exports.newSerializeStatusSkillCardSkillCardTitleField = exports.newDeserializeStatusSkillCardSkillCardTypeField = exports.newSerializeStatusSkillCardSkillCardTypeField = exports.newDeserializeStatusSkillCardTypeField = exports.newSerializeStatusSkillCardTypeField = exports.newDeserializeTranscriptSkillCard = exports.newSerializeTranscriptSkillCard = exports.newDeserializeTranscriptSkillCardEntriesField = exports.newSerializeTranscriptSkillCardEntriesField = exports.newDeserializeTranscriptSkillCardEntriesFieldAppearsField = exports.newSerializeTranscriptSkillCardEntriesFieldAppearsField = exports.newDeserializeTranscriptSkillCardInvocationField = exports.newSerializeTranscriptSkillCardInvocationField = exports.newDeserializeTranscriptSkillCardInvocationFieldTypeField = exports.newSerializeTranscriptSkillCardInvocationFieldTypeField = exports.newDeserializeTranscriptSkillCardSkillField = exports.newSerializeTranscriptSkillCardSkillField = exports.newDeserializeTranscriptSkillCardSkillFieldTypeField = exports.newSerializeTranscriptSkillCardSkillFieldTypeField = exports.newDeserializeTranscriptSkillCardSkillCardTitleField = exports.newSerializeTranscriptSkillCardSkillCardTitleField = exports.newDeserializeTranscriptSkillCardSkillCardTypeField = exports.newSerializeTranscriptSkillCardSkillCardTypeField = exports.newDeserializeTranscriptSkillCardTypeField = exports.newSerializeTranscriptSkillCardTypeField = exports.newDeserializeTimelineSkillCard = exports.newSerializeTimelineSkillCard = exports.newDeserializeTimelineSkillCardEntriesField = exports.newSerializeTimelineSkillCardEntriesField = void 0;
exports.newDeserializeSignTemplateAdditionalInfoFieldRequiredField = exports.newSerializeSignTemplateAdditionalInfoFieldRequiredField = exports.newDeserializeSignTemplateAdditionalInfoFieldRequiredFieldSignersField = exports.newSerializeSignTemplateAdditionalInfoFieldRequiredFieldSignersField = exports.newDeserializeSignTemplateAdditionalInfoFieldNonEditableField = exports.newSerializeSignTemplateAdditionalInfoFieldNonEditableField = exports.newDeserializeTemplateSigner = exports.newSerializeTemplateSigner = exports.newDeserializeTemplateSignerRoleField = exports.newSerializeTemplateSignerRoleField = exports.newDeserializeTemplateSignerInput = exports.newSerializeTemplateSignerInput = exports.newDeserializeTemplateSignerInputDimensionsField = exports.newSerializeTemplateSignerInputDimensionsField = exports.newDeserializeTemplateSignerInputCoordinatesField = exports.newSerializeTemplateSignerInputCoordinatesField = exports.newDeserializeTemplateSignerInputContentTypeField = exports.newSerializeTemplateSignerInputContentTypeField = exports.newDeserializeTemplateSignerInputTypeField = exports.newSerializeTemplateSignerInputTypeField = exports.newDeserializeSignRequestCreateRequest = exports.newSerializeSignRequestCreateRequest = exports.newDeserializeSignRequests = exports.newSerializeSignRequests = exports.newDeserializeSignRequest = exports.newSerializeSignRequest = exports.newDeserializeSignRequestSignFilesField = exports.newSerializeSignRequestSignFilesField = exports.newDeserializeSignRequestStatusField = exports.newSerializeSignRequestStatusField = exports.newDeserializeSignRequestTypeField = exports.newSerializeSignRequestTypeField = exports.newDeserializeSignRequestBase = exports.newSerializeSignRequestBase = exports.newDeserializeSignRequestSigner = exports.newSerializeSignRequestSigner = exports.newDeserializeSignRequestSignerSignerDecisionField = exports.newSerializeSignRequestSignerSignerDecisionField = exports.newDeserializeSignRequestSignerSignerDecisionFieldTypeField = exports.newSerializeSignRequestSignerSignerDecisionFieldTypeField = exports.newDeserializeSignRequestSignerInput = exports.newSerializeSignRequestSignerInput = exports.newDeserializeSignRequestSignerInputContentTypeField = exports.newSerializeSignRequestSignerInputContentTypeField = exports.newDeserializeSignRequestSignerInputTypeField = exports.newSerializeSignRequestSignerInputTypeField = exports.newDeserializeSignRequestPrefillTag = exports.newSerializeSignRequestPrefillTag = exports.newDeserializeSignRequestCreateSigner = exports.newSerializeSignRequestCreateSigner = void 0;
exports.newDeserializeMetadataFieldFilterDateRange = exports.newSerializeMetadataFieldFilterDateRange = exports.newDeserializeMetadataFieldFilterFloatRange = exports.newSerializeMetadataFieldFilterFloatRange = exports.newDeserializeMetadataFieldFilterMultiSelect = exports.newSerializeMetadataFieldFilterMultiSelect = exports.newDeserializeMetadataFieldFilterFloat = exports.newSerializeMetadataFieldFilterFloat = exports.newDeserializeMetadataFieldFilterString = exports.newSerializeMetadataFieldFilterString = exports.newDeserializeMetadataFilter = exports.newSerializeMetadataFilter = exports.newDeserializeMetadataFilterFiltersField = exports.newSerializeMetadataFilterFiltersField = exports.newDeserializeMetadataFilterScopeField = exports.newSerializeMetadataFilterScopeField = exports.newDeserializeUserFull = exports.newSerializeUserFull = exports.newDeserializeUserFullEnterpriseField = exports.newSerializeUserFullEnterpriseField = exports.newDeserializeUserFullEnterpriseFieldTypeField = exports.newSerializeUserFullEnterpriseFieldTypeField = exports.newDeserializeUserFullRoleField = exports.newSerializeUserFullRoleField = exports.newDeserializeTrackingCode = exports.newSerializeTrackingCode = exports.newDeserializeTrackingCodeTypeField = exports.newSerializeTrackingCodeTypeField = exports.newDeserializeShieldInformationBarrierReportDetails = exports.newSerializeShieldInformationBarrierReportDetails = exports.newDeserializeShieldInformationBarrierReportDetailsDetailsField = exports.newSerializeShieldInformationBarrierReportDetailsDetailsField = exports.newDeserializeSignTemplate = exports.newSerializeSignTemplate = exports.newDeserializeSignTemplateCustomBrandingField = exports.newSerializeSignTemplateCustomBrandingField = exports.newDeserializeSignTemplateReadySignLinkField = exports.newSerializeSignTemplateReadySignLinkField = exports.newDeserializeSignTemplateAdditionalInfoField = exports.newSerializeSignTemplateAdditionalInfoField = void 0;
const json_js_1 = require("./json.js");
function newSerializePostOAuth2TokenGrantTypeField(val) {
    return val;
}
exports.newSerializePostOAuth2TokenGrantTypeField = newSerializePostOAuth2TokenGrantTypeField;
function newDeserializePostOAuth2TokenGrantTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"PostOAuth2TokenGrantTypeField\"";
    }
    if (val == "authorization_code") {
        return "authorization_code";
    }
    if (val == "refresh_token") {
        return "refresh_token";
    }
    if (val == "client_credentials") {
        return "client_credentials";
    }
    if (val == "urn:ietf:params:oauth:grant-type:jwt-bearer") {
        return "urn:ietf:params:oauth:grant-type:jwt-bearer";
    }
    if (val == "urn:ietf:params:oauth:grant-type:token-exchange") {
        return "urn:ietf:params:oauth:grant-type:token-exchange";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializePostOAuth2TokenGrantTypeField = newDeserializePostOAuth2TokenGrantTypeField;
function newSerializePostOAuth2TokenSubjectTokenTypeField(val) {
    return val;
}
exports.newSerializePostOAuth2TokenSubjectTokenTypeField = newSerializePostOAuth2TokenSubjectTokenTypeField;
function newDeserializePostOAuth2TokenSubjectTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"PostOAuth2TokenSubjectTokenTypeField\"";
    }
    if (val == "urn:ietf:params:oauth:token-type:access_token") {
        return "urn:ietf:params:oauth:token-type:access_token";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializePostOAuth2TokenSubjectTokenTypeField = newDeserializePostOAuth2TokenSubjectTokenTypeField;
function newSerializePostOAuth2TokenActorTokenTypeField(val) {
    return val;
}
exports.newSerializePostOAuth2TokenActorTokenTypeField = newSerializePostOAuth2TokenActorTokenTypeField;
function newDeserializePostOAuth2TokenActorTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"PostOAuth2TokenActorTokenTypeField\"";
    }
    if (val == "urn:ietf:params:oauth:token-type:id_token") {
        return "urn:ietf:params:oauth:token-type:id_token";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializePostOAuth2TokenActorTokenTypeField = newDeserializePostOAuth2TokenActorTokenTypeField;
function newSerializePostOAuth2TokenBoxSubjectTypeField(val) {
    return val;
}
exports.newSerializePostOAuth2TokenBoxSubjectTypeField = newSerializePostOAuth2TokenBoxSubjectTypeField;
function newDeserializePostOAuth2TokenBoxSubjectTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"PostOAuth2TokenBoxSubjectTypeField\"";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    if (val == "user") {
        return "user";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializePostOAuth2TokenBoxSubjectTypeField = newDeserializePostOAuth2TokenBoxSubjectTypeField;
function newSerializePostOAuth2Token(val) {
    return { ["grant_type"]: newSerializePostOAuth2TokenGrantTypeField(val.grantType), ["client_id"]: val.clientId, ["client_secret"]: val.clientSecret, ["code"]: val.code, ["refresh_token"]: val.refreshToken, ["assertion"]: val.assertion, ["subject_token"]: val.subjectToken, ["subject_token_type"]: val.subjectTokenType == void 0 ? void 0 : newSerializePostOAuth2TokenSubjectTokenTypeField(val.subjectTokenType), ["actor_token"]: val.actorToken, ["actor_token_type"]: val.actorTokenType == void 0 ? void 0 : newSerializePostOAuth2TokenActorTokenTypeField(val.actorTokenType), ["scope"]: val.scope, ["resource"]: val.resource, ["box_subject_type"]: val.boxSubjectType == void 0 ? void 0 : newSerializePostOAuth2TokenBoxSubjectTypeField(val.boxSubjectType), ["box_subject_id"]: val.boxSubjectId, ["box_shared_link"]: val.boxSharedLink };
}
exports.newSerializePostOAuth2Token = newSerializePostOAuth2Token;
function newDeserializePostOAuth2Token(val) {
    const grantType = newDeserializePostOAuth2TokenGrantTypeField(val.grant_type);
    const clientId = (0, json_js_1.isJson)(val.client_id, "string") ? val.client_id : void 0;
    const clientSecret = (0, json_js_1.isJson)(val.client_secret, "string") ? val.client_secret : void 0;
    const code = (0, json_js_1.isJson)(val.code, "string") ? val.code : void 0;
    const refreshToken = (0, json_js_1.isJson)(val.refresh_token, "string") ? val.refresh_token : void 0;
    const assertion = (0, json_js_1.isJson)(val.assertion, "string") ? val.assertion : void 0;
    const subjectToken = (0, json_js_1.isJson)(val.subject_token, "string") ? val.subject_token : void 0;
    const subjectTokenType = val.subject_token_type == void 0 ? void 0 : newDeserializePostOAuth2TokenSubjectTokenTypeField(val.subject_token_type);
    const actorToken = (0, json_js_1.isJson)(val.actor_token, "string") ? val.actor_token : void 0;
    const actorTokenType = val.actor_token_type == void 0 ? void 0 : newDeserializePostOAuth2TokenActorTokenTypeField(val.actor_token_type);
    const scope = (0, json_js_1.isJson)(val.scope, "string") ? val.scope : void 0;
    const resource = (0, json_js_1.isJson)(val.resource, "string") ? val.resource : void 0;
    const boxSubjectType = val.box_subject_type == void 0 ? void 0 : newDeserializePostOAuth2TokenBoxSubjectTypeField(val.box_subject_type);
    const boxSubjectId = (0, json_js_1.isJson)(val.box_subject_id, "string") ? val.box_subject_id : void 0;
    const boxSharedLink = (0, json_js_1.isJson)(val.box_shared_link, "string") ? val.box_shared_link : void 0;
    return { grantType: grantType, clientId: clientId, clientSecret: clientSecret, code: code, refreshToken: refreshToken, assertion: assertion, subjectToken: subjectToken, subjectTokenType: subjectTokenType, actorToken: actorToken, actorTokenType: actorTokenType, scope: scope, resource: resource, boxSubjectType: boxSubjectType, boxSubjectId: boxSubjectId, boxSharedLink: boxSharedLink };
}
exports.newDeserializePostOAuth2Token = newDeserializePostOAuth2Token;
function newSerializePostOAuth2TokenRefreshAccessTokenGrantTypeField(val) {
    return val;
}
exports.newSerializePostOAuth2TokenRefreshAccessTokenGrantTypeField = newSerializePostOAuth2TokenRefreshAccessTokenGrantTypeField;
function newDeserializePostOAuth2TokenRefreshAccessTokenGrantTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"PostOAuth2TokenRefreshAccessTokenGrantTypeField\"";
    }
    if (val == "refresh_token") {
        return "refresh_token";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializePostOAuth2TokenRefreshAccessTokenGrantTypeField = newDeserializePostOAuth2TokenRefreshAccessTokenGrantTypeField;
function newSerializePostOAuth2TokenRefreshAccessToken(val) {
    return { ["grant_type"]: newSerializePostOAuth2TokenRefreshAccessTokenGrantTypeField(val.grantType), ["client_id"]: val.clientId, ["client_secret"]: val.clientSecret, ["refresh_token"]: val.refreshToken };
}
exports.newSerializePostOAuth2TokenRefreshAccessToken = newSerializePostOAuth2TokenRefreshAccessToken;
function newDeserializePostOAuth2TokenRefreshAccessToken(val) {
    const grantType = newDeserializePostOAuth2TokenRefreshAccessTokenGrantTypeField(val.grant_type);
    const clientId = val.client_id;
    const clientSecret = val.client_secret;
    const refreshToken = val.refresh_token;
    return { grantType: grantType, clientId: clientId, clientSecret: clientSecret, refreshToken: refreshToken };
}
exports.newDeserializePostOAuth2TokenRefreshAccessToken = newDeserializePostOAuth2TokenRefreshAccessToken;
function newSerializePostOAuth2Revoke(val) {
    return { ["client_id"]: val.clientId, ["client_secret"]: val.clientSecret, ["token"]: val.token };
}
exports.newSerializePostOAuth2Revoke = newSerializePostOAuth2Revoke;
function newDeserializePostOAuth2Revoke(val) {
    const clientId = (0, json_js_1.isJson)(val.client_id, "string") ? val.client_id : void 0;
    const clientSecret = (0, json_js_1.isJson)(val.client_secret, "string") ? val.client_secret : void 0;
    const token = (0, json_js_1.isJson)(val.token, "string") ? val.token : void 0;
    return { clientId: clientId, clientSecret: clientSecret, token: token };
}
exports.newDeserializePostOAuth2Revoke = newDeserializePostOAuth2Revoke;
function newSerializeZipDownloadRequestItemsFieldTypeField(val) {
    return val;
}
exports.newSerializeZipDownloadRequestItemsFieldTypeField = newSerializeZipDownloadRequestItemsFieldTypeField;
function newDeserializeZipDownloadRequestItemsFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ZipDownloadRequestItemsFieldTypeField\"";
    }
    if (val == "file") {
        return "file";
    }
    if (val == "folder.") {
        return "folder.";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeZipDownloadRequestItemsFieldTypeField = newDeserializeZipDownloadRequestItemsFieldTypeField;
function newSerializeZipDownloadRequestItemsField(val) {
    return { ["type"]: newSerializeZipDownloadRequestItemsFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeZipDownloadRequestItemsField = newSerializeZipDownloadRequestItemsField;
function newDeserializeZipDownloadRequestItemsField(val) {
    const type = newDeserializeZipDownloadRequestItemsFieldTypeField(val.type);
    const id = val.id;
    return { type: type, id: id };
}
exports.newDeserializeZipDownloadRequestItemsField = newDeserializeZipDownloadRequestItemsField;
function newSerializeZipDownloadRequest(val) {
    return { ["items"]: val.items.map(function (item) {
            return newSerializeZipDownloadRequestItemsField(item);
        }), ["download_file_name"]: val.downloadFileName };
}
exports.newSerializeZipDownloadRequest = newSerializeZipDownloadRequest;
function newDeserializeZipDownloadRequest(val) {
    const items = val.items.map(function (itm) {
        return newDeserializeZipDownloadRequestItemsField(itm);
    });
    const downloadFileName = (0, json_js_1.isJson)(val.download_file_name, "string") ? val.download_file_name : void 0;
    return { items: items, downloadFileName: downloadFileName };
}
exports.newDeserializeZipDownloadRequest = newDeserializeZipDownloadRequest;
function newSerializeMetadataQueryQueryParamsField(val) {
    return {};
}
exports.newSerializeMetadataQueryQueryParamsField = newSerializeMetadataQueryQueryParamsField;
function newDeserializeMetadataQueryQueryParamsField(val) {
    return {};
}
exports.newDeserializeMetadataQueryQueryParamsField = newDeserializeMetadataQueryQueryParamsField;
function newSerializeMetadataQueryOrderByFieldDirectionField(val) {
    return val;
}
exports.newSerializeMetadataQueryOrderByFieldDirectionField = newSerializeMetadataQueryOrderByFieldDirectionField;
function newDeserializeMetadataQueryOrderByFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataQueryOrderByFieldDirectionField\"";
    }
    if (val == "ASC") {
        return "ASC";
    }
    if (val == "DESC") {
        return "DESC";
    }
    if (val == "asc") {
        return "asc";
    }
    if (val == "desc") {
        return "desc";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeMetadataQueryOrderByFieldDirectionField = newDeserializeMetadataQueryOrderByFieldDirectionField;
function newSerializeMetadataQueryOrderByField(val) {
    return { ["field_key"]: val.fieldKey, ["direction"]: val.direction == void 0 ? void 0 : newSerializeMetadataQueryOrderByFieldDirectionField(val.direction) };
}
exports.newSerializeMetadataQueryOrderByField = newSerializeMetadataQueryOrderByField;
function newDeserializeMetadataQueryOrderByField(val) {
    const fieldKey = (0, json_js_1.isJson)(val.field_key, "string") ? val.field_key : void 0;
    const direction = val.direction == void 0 ? void 0 : newDeserializeMetadataQueryOrderByFieldDirectionField(val.direction);
    return { fieldKey: fieldKey, direction: direction };
}
exports.newDeserializeMetadataQueryOrderByField = newDeserializeMetadataQueryOrderByField;
function newSerializeMetadataQuery(val) {
    return { ["from"]: val.from, ["query"]: val.query, ["query_params"]: val.queryParams == void 0 ? void 0 : newSerializeMetadataQueryQueryParamsField(val.queryParams), ["ancestor_folder_id"]: val.ancestorFolderId, ["order_by"]: val.orderBy == void 0 ? void 0 : val.orderBy.map(function (item) {
            return newSerializeMetadataQueryOrderByField(item);
        }), ["limit"]: val.limit, ["marker"]: val.marker, ["fields"]: val.fields == void 0 ? void 0 : val.fields.map(function (item) {
            return void 0;
        }) };
}
exports.newSerializeMetadataQuery = newSerializeMetadataQuery;
function newDeserializeMetadataQuery(val) {
    const from = val.from;
    const query = (0, json_js_1.isJson)(val.query, "string") ? val.query : void 0;
    const queryParams = val.query_params == void 0 ? void 0 : newDeserializeMetadataQueryQueryParamsField(val.query_params);
    const ancestorFolderId = val.ancestor_folder_id;
    const orderBy = (0, json_js_1.isJson)(val.order_by, "array") ? val.order_by.map(function (itm) {
        return newDeserializeMetadataQueryOrderByField(itm);
    }) : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const marker = (0, json_js_1.isJson)(val.marker, "string") ? val.marker : void 0;
    const fields = (0, json_js_1.isJson)(val.fields, "array") ? val.fields.map(function (itm) {
        return void 0;
    }) : void 0;
    return { from: from, query: query, queryParams: queryParams, ancestorFolderId: ancestorFolderId, orderBy: orderBy, limit: limit, marker: marker, fields: fields };
}
exports.newDeserializeMetadataQuery = newDeserializeMetadataQuery;
function newSerializeFileRequestUpdateRequestStatusField(val) {
    return val;
}
exports.newSerializeFileRequestUpdateRequestStatusField = newSerializeFileRequestUpdateRequestStatusField;
function newDeserializeFileRequestUpdateRequestStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileRequestUpdateRequestStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "inactive") {
        return "inactive";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileRequestUpdateRequestStatusField = newDeserializeFileRequestUpdateRequestStatusField;
function newSerializeFileRequestUpdateRequest(val) {
    return { ["title"]: val.title, ["description"]: val.description, ["status"]: val.status == void 0 ? void 0 : newSerializeFileRequestUpdateRequestStatusField(val.status), ["is_email_required"]: val.isEmailRequired, ["is_description_required"]: val.isDescriptionRequired, ["expires_at"]: val.expiresAt };
}
exports.newSerializeFileRequestUpdateRequest = newSerializeFileRequestUpdateRequest;
function newDeserializeFileRequestUpdateRequest(val) {
    const title = (0, json_js_1.isJson)(val.title, "string") ? val.title : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const status = val.status == void 0 ? void 0 : newDeserializeFileRequestUpdateRequestStatusField(val.status);
    const isEmailRequired = (0, json_js_1.isJson)(val.is_email_required, "boolean") ? val.is_email_required : void 0;
    const isDescriptionRequired = (0, json_js_1.isJson)(val.is_description_required, "boolean") ? val.is_description_required : void 0;
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    return { title: title, description: description, status: status, isEmailRequired: isEmailRequired, isDescriptionRequired: isDescriptionRequired, expiresAt: expiresAt };
}
exports.newDeserializeFileRequestUpdateRequest = newDeserializeFileRequestUpdateRequest;
function newSerializeFileRequestCopyRequestFolderFieldTypeField(val) {
    return val;
}
exports.newSerializeFileRequestCopyRequestFolderFieldTypeField = newSerializeFileRequestCopyRequestFolderFieldTypeField;
function newDeserializeFileRequestCopyRequestFolderFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileRequestCopyRequestFolderFieldTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileRequestCopyRequestFolderFieldTypeField = newDeserializeFileRequestCopyRequestFolderFieldTypeField;
function newSerializeFileRequestCopyRequestFolderField(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeFileRequestCopyRequestFolderFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeFileRequestCopyRequestFolderField = newSerializeFileRequestCopyRequestFolderField;
function newDeserializeFileRequestCopyRequestFolderField(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeFileRequestCopyRequestFolderFieldTypeField(val.type);
    const id = val.id;
    return { type: type, id: id };
}
exports.newDeserializeFileRequestCopyRequestFolderField = newDeserializeFileRequestCopyRequestFolderField;
function newSerializeFileRequestCopyRequest(val) {
    const base = newSerializeFileRequestUpdateRequest(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileRequestCopyRequest\"";
    }
    return Object.assign(Object.assign({}, base), { ["folder"]: newSerializeFileRequestCopyRequestFolderField(val.folder) });
}
exports.newSerializeFileRequestCopyRequest = newSerializeFileRequestCopyRequest;
function newDeserializeFileRequestCopyRequest(val) {
    const folder = newDeserializeFileRequestCopyRequestFolderField(val.folder);
    const title = (0, json_js_1.isJson)(val.title, "string") ? val.title : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const status = val.status == void 0 ? void 0 : newDeserializeFileRequestUpdateRequestStatusField(val.status);
    const isEmailRequired = (0, json_js_1.isJson)(val.is_email_required, "boolean") ? val.is_email_required : void 0;
    const isDescriptionRequired = (0, json_js_1.isJson)(val.is_description_required, "boolean") ? val.is_description_required : void 0;
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    return { folder: folder, title: title, description: description, status: status, isEmailRequired: isEmailRequired, isDescriptionRequired: isDescriptionRequired, expiresAt: expiresAt };
}
exports.newDeserializeFileRequestCopyRequest = newDeserializeFileRequestCopyRequest;
function newSerializeIntegrationMappingSlackCreateRequestPartnerItemField(val) {
    return {};
}
exports.newSerializeIntegrationMappingSlackCreateRequestPartnerItemField = newSerializeIntegrationMappingSlackCreateRequestPartnerItemField;
function newDeserializeIntegrationMappingSlackCreateRequestPartnerItemField(val) {
    return {};
}
exports.newDeserializeIntegrationMappingSlackCreateRequestPartnerItemField = newDeserializeIntegrationMappingSlackCreateRequestPartnerItemField;
function newSerializeIntegrationMappingSlackCreateRequestBoxItemField(val) {
    return {};
}
exports.newSerializeIntegrationMappingSlackCreateRequestBoxItemField = newSerializeIntegrationMappingSlackCreateRequestBoxItemField;
function newDeserializeIntegrationMappingSlackCreateRequestBoxItemField(val) {
    return {};
}
exports.newDeserializeIntegrationMappingSlackCreateRequestBoxItemField = newDeserializeIntegrationMappingSlackCreateRequestBoxItemField;
function newSerializeIntegrationMappingSlackCreateRequestOptionsField(val) {
    return {};
}
exports.newSerializeIntegrationMappingSlackCreateRequestOptionsField = newSerializeIntegrationMappingSlackCreateRequestOptionsField;
function newDeserializeIntegrationMappingSlackCreateRequestOptionsField(val) {
    return {};
}
exports.newDeserializeIntegrationMappingSlackCreateRequestOptionsField = newDeserializeIntegrationMappingSlackCreateRequestOptionsField;
function newSerializeIntegrationMappingSlackCreateRequest(val) {
    return { ["partner_item"]: newSerializeIntegrationMappingSlackCreateRequestPartnerItemField(val.partnerItem), ["box_item"]: newSerializeIntegrationMappingSlackCreateRequestBoxItemField(val.boxItem), ["options"]: val.options == void 0 ? void 0 : newSerializeIntegrationMappingSlackCreateRequestOptionsField(val.options) };
}
exports.newSerializeIntegrationMappingSlackCreateRequest = newSerializeIntegrationMappingSlackCreateRequest;
function newDeserializeIntegrationMappingSlackCreateRequest(val) {
    const partnerItem = newDeserializeIntegrationMappingSlackCreateRequestPartnerItemField(val.partner_item);
    const boxItem = newDeserializeIntegrationMappingSlackCreateRequestBoxItemField(val.box_item);
    const options = val.options == void 0 ? void 0 : newDeserializeIntegrationMappingSlackCreateRequestOptionsField(val.options);
    return { partnerItem: partnerItem, boxItem: boxItem, options: options };
}
exports.newDeserializeIntegrationMappingSlackCreateRequest = newDeserializeIntegrationMappingSlackCreateRequest;
function newSerializeClientErrorTypeField(val) {
    return val;
}
exports.newSerializeClientErrorTypeField = newSerializeClientErrorTypeField;
function newDeserializeClientErrorTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClientErrorTypeField\"";
    }
    if (val == "error") {
        return "error";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeClientErrorTypeField = newDeserializeClientErrorTypeField;
function newSerializeClientErrorCodeField(val) {
    return val;
}
exports.newSerializeClientErrorCodeField = newSerializeClientErrorCodeField;
function newDeserializeClientErrorCodeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClientErrorCodeField\"";
    }
    if (val == "created") {
        return "created";
    }
    if (val == "accepted") {
        return "accepted";
    }
    if (val == "no_content") {
        return "no_content";
    }
    if (val == "redirect") {
        return "redirect";
    }
    if (val == "not_modified") {
        return "not_modified";
    }
    if (val == "bad_request") {
        return "bad_request";
    }
    if (val == "unauthorized") {
        return "unauthorized";
    }
    if (val == "forbidden") {
        return "forbidden";
    }
    if (val == "not_found") {
        return "not_found";
    }
    if (val == "method_not_allowed") {
        return "method_not_allowed";
    }
    if (val == "conflict") {
        return "conflict";
    }
    if (val == "precondition_failed") {
        return "precondition_failed";
    }
    if (val == "too_many_requests") {
        return "too_many_requests";
    }
    if (val == "internal_server_error") {
        return "internal_server_error";
    }
    if (val == "unavailable") {
        return "unavailable";
    }
    if (val == "item_name_invalid") {
        return "item_name_invalid";
    }
    if (val == "insufficient_scope") {
        return "insufficient_scope";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeClientErrorCodeField = newDeserializeClientErrorCodeField;
function newSerializeClientErrorContextInfoField(val) {
    return { ["message"]: val.message };
}
exports.newSerializeClientErrorContextInfoField = newSerializeClientErrorContextInfoField;
function newDeserializeClientErrorContextInfoField(val) {
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    return { message: message };
}
exports.newDeserializeClientErrorContextInfoField = newDeserializeClientErrorContextInfoField;
function newSerializeClientError(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeClientErrorTypeField(val.type), ["status"]: val.status, ["code"]: val.code == void 0 ? void 0 : newSerializeClientErrorCodeField(val.code), ["message"]: val.message, ["context_info"]: val.contextInfo == void 0 ? void 0 : newSerializeClientErrorContextInfoField(val.contextInfo), ["help_url"]: val.helpUrl, ["request_id"]: val.requestId };
}
exports.newSerializeClientError = newSerializeClientError;
function newDeserializeClientError(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeClientErrorTypeField(val.type);
    const status = (0, json_js_1.isJson)(val.status, "number") ? val.status : void 0;
    const code = val.code == void 0 ? void 0 : newDeserializeClientErrorCodeField(val.code);
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    const contextInfo = val.context_info == void 0 ? void 0 : newDeserializeClientErrorContextInfoField(val.context_info);
    const helpUrl = (0, json_js_1.isJson)(val.help_url, "string") ? val.help_url : void 0;
    const requestId = (0, json_js_1.isJson)(val.request_id, "string") ? val.request_id : void 0;
    return { type: type, status: status, code: code, message: message, contextInfo: contextInfo, helpUrl: helpUrl, requestId: requestId };
}
exports.newDeserializeClientError = newDeserializeClientError;
function newSerializeOAuth2Error(val) {
    return { ["error"]: val.error, ["error_description"]: val.errorDescription };
}
exports.newSerializeOAuth2Error = newSerializeOAuth2Error;
function newDeserializeOAuth2Error(val) {
    const error = (0, json_js_1.isJson)(val.error, "string") ? val.error : void 0;
    const errorDescription = (0, json_js_1.isJson)(val.error_description, "string") ? val.error_description : void 0;
    return { error: error, errorDescription: errorDescription };
}
exports.newDeserializeOAuth2Error = newDeserializeOAuth2Error;
function newSerializeClassificationTemplateField(val) {
    return val;
}
exports.newSerializeClassificationTemplateField = newSerializeClassificationTemplateField;
function newDeserializeClassificationTemplateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateField\"";
    }
    if (val == "securityClassification-6VMVochwUWo") {
        return "securityClassification-6VMVochwUWo";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeClassificationTemplateField = newDeserializeClassificationTemplateField;
function newSerializeClassification(val) {
    return { ["Box__Security__Classification__Key"]: val.boxSecurityClassificationKey, ["$parent"]: val.parent, ["$template"]: val.template == void 0 ? void 0 : newSerializeClassificationTemplateField(val.template), ["$scope"]: val.scope, ["$version"]: val.version, ["$type"]: val.type, ["$typeVersion"]: val.typeVersion, ["$canEdit"]: val.canEdit };
}
exports.newSerializeClassification = newSerializeClassification;
function newDeserializeClassification(val) {
    const boxSecurityClassificationKey = (0, json_js_1.isJson)(val.Box__Security__Classification__Key, "string") ? val.Box__Security__Classification__Key : void 0;
    const parent = (0, json_js_1.isJson)(val.$parent, "string") ? val.$parent : void 0;
    const template = val.$template == void 0 ? void 0 : newDeserializeClassificationTemplateField(val.$template);
    const scope = (0, json_js_1.isJson)(val.$scope, "string") ? val.$scope : void 0;
    const version = (0, json_js_1.isJson)(val.$version, "number") ? val.$version : void 0;
    const type = (0, json_js_1.isJson)(val.$type, "string") ? val.$type : void 0;
    const typeVersion = (0, json_js_1.isJson)(val.$typeVersion, "number") ? val.$typeVersion : void 0;
    const canEdit = (0, json_js_1.isJson)(val.$canEdit, "boolean") ? val.$canEdit : void 0;
    return { boxSecurityClassificationKey: boxSecurityClassificationKey, parent: parent, template: template, scope: scope, version: version, type: type, typeVersion: typeVersion, canEdit: canEdit };
}
exports.newDeserializeClassification = newDeserializeClassification;
function newSerializeClassificationTemplateTypeField(val) {
    return val;
}
exports.newSerializeClassificationTemplateTypeField = newSerializeClassificationTemplateTypeField;
function newDeserializeClassificationTemplateTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateTypeField\"";
    }
    if (val == "metadata_template") {
        return "metadata_template";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeClassificationTemplateTypeField = newDeserializeClassificationTemplateTypeField;
function newSerializeClassificationTemplateTemplateKeyField(val) {
    return val;
}
exports.newSerializeClassificationTemplateTemplateKeyField = newSerializeClassificationTemplateTemplateKeyField;
function newDeserializeClassificationTemplateTemplateKeyField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateTemplateKeyField\"";
    }
    if (val == "securityClassification-6VMVochwUWo") {
        return "securityClassification-6VMVochwUWo";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeClassificationTemplateTemplateKeyField = newDeserializeClassificationTemplateTemplateKeyField;
function newSerializeClassificationTemplateDisplayNameField(val) {
    return val;
}
exports.newSerializeClassificationTemplateDisplayNameField = newSerializeClassificationTemplateDisplayNameField;
function newDeserializeClassificationTemplateDisplayNameField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateDisplayNameField\"";
    }
    if (val == "Classification") {
        return "Classification";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeClassificationTemplateDisplayNameField = newDeserializeClassificationTemplateDisplayNameField;
function newSerializeClassificationTemplateFieldsFieldTypeField(val) {
    return val;
}
exports.newSerializeClassificationTemplateFieldsFieldTypeField = newSerializeClassificationTemplateFieldsFieldTypeField;
function newDeserializeClassificationTemplateFieldsFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateFieldsFieldTypeField\"";
    }
    if (val == "enum") {
        return "enum";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeClassificationTemplateFieldsFieldTypeField = newDeserializeClassificationTemplateFieldsFieldTypeField;
function newSerializeClassificationTemplateFieldsFieldKeyField(val) {
    return val;
}
exports.newSerializeClassificationTemplateFieldsFieldKeyField = newSerializeClassificationTemplateFieldsFieldKeyField;
function newDeserializeClassificationTemplateFieldsFieldKeyField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateFieldsFieldKeyField\"";
    }
    if (val == "Box__Security__Classification__Key") {
        return "Box__Security__Classification__Key";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeClassificationTemplateFieldsFieldKeyField = newDeserializeClassificationTemplateFieldsFieldKeyField;
function newSerializeClassificationTemplateFieldsFieldDisplayNameField(val) {
    return val;
}
exports.newSerializeClassificationTemplateFieldsFieldDisplayNameField = newSerializeClassificationTemplateFieldsFieldDisplayNameField;
function newDeserializeClassificationTemplateFieldsFieldDisplayNameField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateFieldsFieldDisplayNameField\"";
    }
    if (val == "Classification") {
        return "Classification";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeClassificationTemplateFieldsFieldDisplayNameField = newDeserializeClassificationTemplateFieldsFieldDisplayNameField;
function newSerializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField(val) {
    return { ["classificationDefinition"]: val.classificationDefinition, ["colorID"]: val.colorId };
}
exports.newSerializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField = newSerializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField;
function newDeserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField(val) {
    const classificationDefinition = (0, json_js_1.isJson)(val.classificationDefinition, "string") ? val.classificationDefinition : void 0;
    const colorId = (0, json_js_1.isJson)(val.colorID, "number") ? val.colorID : void 0;
    return { classificationDefinition: classificationDefinition, colorId: colorId };
}
exports.newDeserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField = newDeserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField;
function newSerializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField(val) {
    return { ["classification"]: val.classification == void 0 ? void 0 : newSerializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField(val.classification) };
}
exports.newSerializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField = newSerializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField;
function newDeserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField(val) {
    const classification = val.classification == void 0 ? void 0 : newDeserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField(val.classification);
    return { classification: classification };
}
exports.newDeserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField = newDeserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField;
function newSerializeClassificationTemplateFieldsFieldOptionsField(val) {
    return { ["id"]: val.id, ["key"]: val.key, ["staticConfig"]: val.staticConfig == void 0 ? void 0 : newSerializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField(val.staticConfig) };
}
exports.newSerializeClassificationTemplateFieldsFieldOptionsField = newSerializeClassificationTemplateFieldsFieldOptionsField;
function newDeserializeClassificationTemplateFieldsFieldOptionsField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const key = (0, json_js_1.isJson)(val.key, "string") ? val.key : void 0;
    const staticConfig = val.staticConfig == void 0 ? void 0 : newDeserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField(val.staticConfig);
    return { id: id, key: key, staticConfig: staticConfig };
}
exports.newDeserializeClassificationTemplateFieldsFieldOptionsField = newDeserializeClassificationTemplateFieldsFieldOptionsField;
function newSerializeClassificationTemplateFieldsField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeClassificationTemplateFieldsFieldTypeField(val.type), ["key"]: val.key == void 0 ? void 0 : newSerializeClassificationTemplateFieldsFieldKeyField(val.key), ["displayName"]: val.displayName == void 0 ? void 0 : newSerializeClassificationTemplateFieldsFieldDisplayNameField(val.displayName), ["hidden"]: val.hidden, ["options"]: val.options == void 0 ? void 0 : val.options.map(function (item) {
            return newSerializeClassificationTemplateFieldsFieldOptionsField(item);
        }) };
}
exports.newSerializeClassificationTemplateFieldsField = newSerializeClassificationTemplateFieldsField;
function newDeserializeClassificationTemplateFieldsField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeClassificationTemplateFieldsFieldTypeField(val.type);
    const key = val.key == void 0 ? void 0 : newDeserializeClassificationTemplateFieldsFieldKeyField(val.key);
    const displayName = val.displayName == void 0 ? void 0 : newDeserializeClassificationTemplateFieldsFieldDisplayNameField(val.displayName);
    const hidden = (0, json_js_1.isJson)(val.hidden, "boolean") ? val.hidden : void 0;
    const options = (0, json_js_1.isJson)(val.options, "array") ? val.options.map(function (itm) {
        return newDeserializeClassificationTemplateFieldsFieldOptionsField(itm);
    }) : void 0;
    return { id: id, type: type, key: key, displayName: displayName, hidden: hidden, options: options };
}
exports.newDeserializeClassificationTemplateFieldsField = newDeserializeClassificationTemplateFieldsField;
function newSerializeClassificationTemplate(val) {
    return { ["id"]: val.id, ["type"]: newSerializeClassificationTemplateTypeField(val.type), ["scope"]: val.scope, ["templateKey"]: val.templateKey == void 0 ? void 0 : newSerializeClassificationTemplateTemplateKeyField(val.templateKey), ["displayName"]: val.displayName == void 0 ? void 0 : newSerializeClassificationTemplateDisplayNameField(val.displayName), ["hidden"]: val.hidden, ["copyInstanceOnItemCopy"]: val.copyInstanceOnItemCopy, ["fields"]: val.fields == void 0 ? void 0 : val.fields.map(function (item) {
            return newSerializeClassificationTemplateFieldsField(item);
        }) };
}
exports.newSerializeClassificationTemplate = newSerializeClassificationTemplate;
function newDeserializeClassificationTemplate(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = newDeserializeClassificationTemplateTypeField(val.type);
    const scope = (0, json_js_1.isJson)(val.scope, "string") ? val.scope : void 0;
    const templateKey = val.templateKey == void 0 ? void 0 : newDeserializeClassificationTemplateTemplateKeyField(val.templateKey);
    const displayName = val.displayName == void 0 ? void 0 : newDeserializeClassificationTemplateDisplayNameField(val.displayName);
    const hidden = (0, json_js_1.isJson)(val.hidden, "boolean") ? val.hidden : void 0;
    const copyInstanceOnItemCopy = (0, json_js_1.isJson)(val.copyInstanceOnItemCopy, "boolean") ? val.copyInstanceOnItemCopy : void 0;
    const fields = (0, json_js_1.isJson)(val.fields, "array") ? val.fields.map(function (itm) {
        return newDeserializeClassificationTemplateFieldsField(itm);
    }) : void 0;
    return { id: id, type: type, scope: scope, templateKey: templateKey, displayName: displayName, hidden: hidden, copyInstanceOnItemCopy: copyInstanceOnItemCopy, fields: fields };
}
exports.newDeserializeClassificationTemplate = newDeserializeClassificationTemplate;
function newSerializeCollaborationAllowlistEntryTypeField(val) {
    return val;
}
exports.newSerializeCollaborationAllowlistEntryTypeField = newSerializeCollaborationAllowlistEntryTypeField;
function newDeserializeCollaborationAllowlistEntryTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistEntryTypeField\"";
    }
    if (val == "collaboration_whitelist_entry") {
        return "collaboration_whitelist_entry";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollaborationAllowlistEntryTypeField = newDeserializeCollaborationAllowlistEntryTypeField;
function newSerializeCollaborationAllowlistEntryDirectionField(val) {
    return val;
}
exports.newSerializeCollaborationAllowlistEntryDirectionField = newSerializeCollaborationAllowlistEntryDirectionField;
function newDeserializeCollaborationAllowlistEntryDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistEntryDirectionField\"";
    }
    if (val == "inbound") {
        return "inbound";
    }
    if (val == "outbound") {
        return "outbound";
    }
    if (val == "both") {
        return "both";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollaborationAllowlistEntryDirectionField = newDeserializeCollaborationAllowlistEntryDirectionField;
function newSerializeCollaborationAllowlistEntryEnterpriseFieldTypeField(val) {
    return val;
}
exports.newSerializeCollaborationAllowlistEntryEnterpriseFieldTypeField = newSerializeCollaborationAllowlistEntryEnterpriseFieldTypeField;
function newDeserializeCollaborationAllowlistEntryEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistEntryEnterpriseFieldTypeField\"";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollaborationAllowlistEntryEnterpriseFieldTypeField = newDeserializeCollaborationAllowlistEntryEnterpriseFieldTypeField;
function newSerializeCollaborationAllowlistEntryEnterpriseField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeCollaborationAllowlistEntryEnterpriseFieldTypeField(val.type), ["name"]: val.name };
}
exports.newSerializeCollaborationAllowlistEntryEnterpriseField = newSerializeCollaborationAllowlistEntryEnterpriseField;
function newDeserializeCollaborationAllowlistEntryEnterpriseField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeCollaborationAllowlistEntryEnterpriseFieldTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.newDeserializeCollaborationAllowlistEntryEnterpriseField = newDeserializeCollaborationAllowlistEntryEnterpriseField;
function newSerializeCollaborationAllowlistEntry(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeCollaborationAllowlistEntryTypeField(val.type), ["domain"]: val.domain, ["direction"]: val.direction == void 0 ? void 0 : newSerializeCollaborationAllowlistEntryDirectionField(val.direction), ["enterprise"]: val.enterprise == void 0 ? void 0 : newSerializeCollaborationAllowlistEntryEnterpriseField(val.enterprise), ["created_at"]: val.createdAt };
}
exports.newSerializeCollaborationAllowlistEntry = newSerializeCollaborationAllowlistEntry;
function newDeserializeCollaborationAllowlistEntry(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeCollaborationAllowlistEntryTypeField(val.type);
    const domain = (0, json_js_1.isJson)(val.domain, "string") ? val.domain : void 0;
    const direction = val.direction == void 0 ? void 0 : newDeserializeCollaborationAllowlistEntryDirectionField(val.direction);
    const enterprise = val.enterprise == void 0 ? void 0 : newDeserializeCollaborationAllowlistEntryEnterpriseField(val.enterprise);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    return { id: id, type: type, domain: domain, direction: direction, enterprise: enterprise, createdAt: createdAt };
}
exports.newDeserializeCollaborationAllowlistEntry = newDeserializeCollaborationAllowlistEntry;
function newSerializeCollaborationAllowlistEntries(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeCollaborationAllowlistEntry(item);
        }) };
}
exports.newSerializeCollaborationAllowlistEntries = newSerializeCollaborationAllowlistEntries;
function newDeserializeCollaborationAllowlistEntries(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeCollaborationAllowlistEntry(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeCollaborationAllowlistEntries = newDeserializeCollaborationAllowlistEntries;
function newSerializeCollaborationAllowlistExemptTargetTypeField(val) {
    return val;
}
exports.newSerializeCollaborationAllowlistExemptTargetTypeField = newSerializeCollaborationAllowlistExemptTargetTypeField;
function newDeserializeCollaborationAllowlistExemptTargetTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistExemptTargetTypeField\"";
    }
    if (val == "collaboration_whitelist") {
        return "collaboration_whitelist";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollaborationAllowlistExemptTargetTypeField = newDeserializeCollaborationAllowlistExemptTargetTypeField;
function newSerializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField(val) {
    return val;
}
exports.newSerializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField = newSerializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField;
function newDeserializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistExemptTargetEnterpriseFieldTypeField\"";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField = newDeserializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField;
function newSerializeCollaborationAllowlistExemptTargetEnterpriseField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField(val.type), ["name"]: val.name };
}
exports.newSerializeCollaborationAllowlistExemptTargetEnterpriseField = newSerializeCollaborationAllowlistExemptTargetEnterpriseField;
function newDeserializeCollaborationAllowlistExemptTargetEnterpriseField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.newDeserializeCollaborationAllowlistExemptTargetEnterpriseField = newDeserializeCollaborationAllowlistExemptTargetEnterpriseField;
function newSerializeCollaborationAllowlistExemptTargetUserFieldTypeField(val) {
    return val;
}
exports.newSerializeCollaborationAllowlistExemptTargetUserFieldTypeField = newSerializeCollaborationAllowlistExemptTargetUserFieldTypeField;
function newDeserializeCollaborationAllowlistExemptTargetUserFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistExemptTargetUserFieldTypeField\"";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollaborationAllowlistExemptTargetUserFieldTypeField = newDeserializeCollaborationAllowlistExemptTargetUserFieldTypeField;
function newSerializeCollaborationAllowlistExemptTargetUserField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeCollaborationAllowlistExemptTargetUserFieldTypeField(val.type), ["name"]: val.name };
}
exports.newSerializeCollaborationAllowlistExemptTargetUserField = newSerializeCollaborationAllowlistExemptTargetUserField;
function newDeserializeCollaborationAllowlistExemptTargetUserField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeCollaborationAllowlistExemptTargetUserFieldTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.newDeserializeCollaborationAllowlistExemptTargetUserField = newDeserializeCollaborationAllowlistExemptTargetUserField;
function newSerializeCollaborationAllowlistExemptTarget(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeCollaborationAllowlistExemptTargetTypeField(val.type), ["enterprise"]: val.enterprise == void 0 ? void 0 : newSerializeCollaborationAllowlistExemptTargetEnterpriseField(val.enterprise), ["user"]: val.user == void 0 ? void 0 : newSerializeCollaborationAllowlistExemptTargetUserField(val.user), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt };
}
exports.newSerializeCollaborationAllowlistExemptTarget = newSerializeCollaborationAllowlistExemptTarget;
function newDeserializeCollaborationAllowlistExemptTarget(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeCollaborationAllowlistExemptTargetTypeField(val.type);
    const enterprise = val.enterprise == void 0 ? void 0 : newDeserializeCollaborationAllowlistExemptTargetEnterpriseField(val.enterprise);
    const user = val.user == void 0 ? void 0 : newDeserializeCollaborationAllowlistExemptTargetUserField(val.user);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    return { id: id, type: type, enterprise: enterprise, user: user, createdAt: createdAt, modifiedAt: modifiedAt };
}
exports.newDeserializeCollaborationAllowlistExemptTarget = newDeserializeCollaborationAllowlistExemptTarget;
function newSerializeCollaborationAllowlistExemptTargets(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeCollaborationAllowlistExemptTarget(item);
        }) };
}
exports.newSerializeCollaborationAllowlistExemptTargets = newSerializeCollaborationAllowlistExemptTargets;
function newDeserializeCollaborationAllowlistExemptTargets(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeCollaborationAllowlistExemptTarget(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeCollaborationAllowlistExemptTargets = newDeserializeCollaborationAllowlistExemptTargets;
function newSerializeCollectionTypeField(val) {
    return val;
}
exports.newSerializeCollectionTypeField = newSerializeCollectionTypeField;
function newDeserializeCollectionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollectionTypeField\"";
    }
    if (val == "collection") {
        return "collection";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollectionTypeField = newDeserializeCollectionTypeField;
function newSerializeCollectionNameField(val) {
    return val;
}
exports.newSerializeCollectionNameField = newSerializeCollectionNameField;
function newDeserializeCollectionNameField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollectionNameField\"";
    }
    if (val == "Favorites") {
        return "Favorites";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollectionNameField = newDeserializeCollectionNameField;
function newSerializeCollectionCollectionTypeField(val) {
    return val;
}
exports.newSerializeCollectionCollectionTypeField = newSerializeCollectionCollectionTypeField;
function newDeserializeCollectionCollectionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollectionCollectionTypeField\"";
    }
    if (val == "favorites") {
        return "favorites";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollectionCollectionTypeField = newDeserializeCollectionCollectionTypeField;
function newSerializeCollection(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeCollectionTypeField(val.type), ["name"]: val.name == void 0 ? void 0 : newSerializeCollectionNameField(val.name), ["collection_type"]: val.collectionType == void 0 ? void 0 : newSerializeCollectionCollectionTypeField(val.collectionType) };
}
exports.newSerializeCollection = newSerializeCollection;
function newDeserializeCollection(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeCollectionTypeField(val.type);
    const name = val.name == void 0 ? void 0 : newDeserializeCollectionNameField(val.name);
    const collectionType = val.collection_type == void 0 ? void 0 : newDeserializeCollectionCollectionTypeField(val.collection_type);
    return { id: id, type: type, name: name, collectionType: collectionType };
}
exports.newDeserializeCollection = newDeserializeCollection;
function newSerializeCollectionsOrderFieldDirectionField(val) {
    return val;
}
exports.newSerializeCollectionsOrderFieldDirectionField = newSerializeCollectionsOrderFieldDirectionField;
function newDeserializeCollectionsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollectionsOrderFieldDirectionField\"";
    }
    if (val == "ASC") {
        return "ASC";
    }
    if (val == "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollectionsOrderFieldDirectionField = newDeserializeCollectionsOrderFieldDirectionField;
function newSerializeCollectionsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction == void 0 ? void 0 : newSerializeCollectionsOrderFieldDirectionField(val.direction) };
}
exports.newSerializeCollectionsOrderField = newSerializeCollectionsOrderField;
function newDeserializeCollectionsOrderField(val) {
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction == void 0 ? void 0 : newDeserializeCollectionsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.newDeserializeCollectionsOrderField = newDeserializeCollectionsOrderField;
function newSerializeCollections(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order == void 0 ? void 0 : val.order.map(function (item) {
            return newSerializeCollectionsOrderField(item);
        }), ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeCollection(item);
        }) };
}
exports.newSerializeCollections = newSerializeCollections;
function newDeserializeCollections(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return newDeserializeCollectionsOrderField(itm);
    }) : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeCollection(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.newDeserializeCollections = newDeserializeCollections;
function newSerializeCommentBaseTypeField(val) {
    return val;
}
exports.newSerializeCommentBaseTypeField = newSerializeCommentBaseTypeField;
function newDeserializeCommentBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CommentBaseTypeField\"";
    }
    if (val == "comment") {
        return "comment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCommentBaseTypeField = newDeserializeCommentBaseTypeField;
function newSerializeCommentBase(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeCommentBaseTypeField(val.type) };
}
exports.newSerializeCommentBase = newSerializeCommentBase;
function newDeserializeCommentBase(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeCommentBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeCommentBase = newDeserializeCommentBase;
function newSerializeEmailAliasTypeField(val) {
    return val;
}
exports.newSerializeEmailAliasTypeField = newSerializeEmailAliasTypeField;
function newDeserializeEmailAliasTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"EmailAliasTypeField\"";
    }
    if (val == "email_alias") {
        return "email_alias";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeEmailAliasTypeField = newDeserializeEmailAliasTypeField;
function newSerializeEmailAlias(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeEmailAliasTypeField(val.type), ["email"]: val.email, ["is_confirmed"]: val.isConfirmed };
}
exports.newSerializeEmailAlias = newSerializeEmailAlias;
function newDeserializeEmailAlias(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeEmailAliasTypeField(val.type);
    const email = (0, json_js_1.isJson)(val.email, "string") ? val.email : void 0;
    const isConfirmed = (0, json_js_1.isJson)(val.is_confirmed, "boolean") ? val.is_confirmed : void 0;
    return { id: id, type: type, email: email, isConfirmed: isConfirmed };
}
exports.newDeserializeEmailAlias = newDeserializeEmailAlias;
function newSerializeEmailAliases(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeEmailAlias(item);
        }) };
}
exports.newSerializeEmailAliases = newSerializeEmailAliases;
function newDeserializeEmailAliases(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeEmailAlias(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeEmailAliases = newDeserializeEmailAliases;
function newSerializeEnterpriseBaseTypeField(val) {
    return val;
}
exports.newSerializeEnterpriseBaseTypeField = newSerializeEnterpriseBaseTypeField;
function newDeserializeEnterpriseBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"EnterpriseBaseTypeField\"";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeEnterpriseBaseTypeField = newDeserializeEnterpriseBaseTypeField;
function newSerializeEnterpriseBase(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeEnterpriseBaseTypeField(val.type) };
}
exports.newSerializeEnterpriseBase = newSerializeEnterpriseBase;
function newDeserializeEnterpriseBase(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeEnterpriseBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeEnterpriseBase = newDeserializeEnterpriseBase;
function newSerializeFileBaseTypeField(val) {
    return val;
}
exports.newSerializeFileBaseTypeField = newSerializeFileBaseTypeField;
function newDeserializeFileBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileBaseTypeField\"";
    }
    if (val == "file") {
        return "file";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileBaseTypeField = newDeserializeFileBaseTypeField;
function newSerializeFileBase(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: newSerializeFileBaseTypeField(val.type) };
}
exports.newSerializeFileBase = newSerializeFileBase;
function newDeserializeFileBase(val) {
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeFileBaseTypeField(val.type);
    return { id: id, etag: etag, type: type };
}
exports.newDeserializeFileBase = newDeserializeFileBase;
function newSerializeFileVersionBaseTypeField(val) {
    return val;
}
exports.newSerializeFileVersionBaseTypeField = newSerializeFileVersionBaseTypeField;
function newDeserializeFileVersionBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileVersionBaseTypeField\"";
    }
    if (val == "file_version") {
        return "file_version";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileVersionBaseTypeField = newDeserializeFileVersionBaseTypeField;
function newSerializeFileVersionBase(val) {
    return { ["id"]: val.id, ["type"]: newSerializeFileVersionBaseTypeField(val.type) };
}
exports.newSerializeFileVersionBase = newSerializeFileVersionBase;
function newDeserializeFileVersionBase(val) {
    const id = val.id;
    const type = newDeserializeFileVersionBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeFileVersionBase = newDeserializeFileVersionBase;
function newSerializeFileVersionMini(val) {
    const base = newSerializeFileVersionBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileVersionMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["sha1"]: val.sha1 });
}
exports.newSerializeFileVersionMini = newSerializeFileVersionMini;
function newDeserializeFileVersionMini(val) {
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    const id = val.id;
    const type = newDeserializeFileVersionBaseTypeField(val.type);
    return { sha1: sha1, id: id, type: type };
}
exports.newDeserializeFileVersionMini = newDeserializeFileVersionMini;
function newSerializeFileMini(val) {
    const base = newSerializeFileBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["sequence_id"]: val.sequenceId, ["name"]: val.name, ["sha1"]: val.sha1, ["file_version"]: val.fileVersion == void 0 ? void 0 : newSerializeFileVersionMini(val.fileVersion) });
}
exports.newSerializeFileMini = newSerializeFileMini;
function newDeserializeFileMini(val) {
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    const fileVersion = val.file_version == void 0 ? void 0 : newDeserializeFileVersionMini(val.file_version);
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeFileBaseTypeField(val.type);
    return { sequenceId: sequenceId, name: name, sha1: sha1, fileVersion: fileVersion, id: id, etag: etag, type: type };
}
exports.newDeserializeFileMini = newDeserializeFileMini;
function newSerializeFileScopeScopeField(val) {
    return val;
}
exports.newSerializeFileScopeScopeField = newSerializeFileScopeScopeField;
function newDeserializeFileScopeScopeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileScopeScopeField\"";
    }
    if (val == "annotation_edit") {
        return "annotation_edit";
    }
    if (val == "annotation_view_all") {
        return "annotation_view_all";
    }
    if (val == "annotation_view_self") {
        return "annotation_view_self";
    }
    if (val == "base_explorer") {
        return "base_explorer";
    }
    if (val == "base_picker") {
        return "base_picker";
    }
    if (val == "base_preview") {
        return "base_preview";
    }
    if (val == "base_upload") {
        return "base_upload";
    }
    if (val == "item_delete") {
        return "item_delete";
    }
    if (val == "item_download") {
        return "item_download";
    }
    if (val == "item_preview") {
        return "item_preview";
    }
    if (val == "item_rename") {
        return "item_rename";
    }
    if (val == "item_share") {
        return "item_share";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileScopeScopeField = newDeserializeFileScopeScopeField;
function newSerializeFileScope(val) {
    return { ["scope"]: val.scope == void 0 ? void 0 : newSerializeFileScopeScopeField(val.scope), ["object"]: val.object == void 0 ? void 0 : newSerializeFileMini(val.object) };
}
exports.newSerializeFileScope = newSerializeFileScope;
function newDeserializeFileScope(val) {
    const scope = val.scope == void 0 ? void 0 : newDeserializeFileScopeScopeField(val.scope);
    const object = val.object == void 0 ? void 0 : newDeserializeFileMini(val.object);
    return { scope: scope, object: object };
}
exports.newDeserializeFileScope = newDeserializeFileScope;
function newSerializeAccessTokenTokenTypeField(val) {
    return val;
}
exports.newSerializeAccessTokenTokenTypeField = newSerializeAccessTokenTokenTypeField;
function newDeserializeAccessTokenTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"AccessTokenTokenTypeField\"";
    }
    if (val == "bearer") {
        return "bearer";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeAccessTokenTokenTypeField = newDeserializeAccessTokenTokenTypeField;
function newSerializeAccessTokenIssuedTokenTypeField(val) {
    return val;
}
exports.newSerializeAccessTokenIssuedTokenTypeField = newSerializeAccessTokenIssuedTokenTypeField;
function newDeserializeAccessTokenIssuedTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"AccessTokenIssuedTokenTypeField\"";
    }
    if (val == "urn:ietf:params:oauth:token-type:access_token") {
        return "urn:ietf:params:oauth:token-type:access_token";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeAccessTokenIssuedTokenTypeField = newDeserializeAccessTokenIssuedTokenTypeField;
function newSerializeAccessToken(val) {
    return { ["access_token"]: val.accessToken, ["expires_in"]: val.expiresIn, ["token_type"]: val.tokenType == void 0 ? void 0 : newSerializeAccessTokenTokenTypeField(val.tokenType), ["restricted_to"]: val.restrictedTo == void 0 ? void 0 : val.restrictedTo.map(function (item) {
            return newSerializeFileScope(item);
        }), ["refresh_token"]: val.refreshToken, ["issued_token_type"]: val.issuedTokenType == void 0 ? void 0 : newSerializeAccessTokenIssuedTokenTypeField(val.issuedTokenType) };
}
exports.newSerializeAccessToken = newSerializeAccessToken;
function newDeserializeAccessToken(val) {
    const accessToken = (0, json_js_1.isJson)(val.access_token, "string") ? val.access_token : void 0;
    const expiresIn = (0, json_js_1.isJson)(val.expires_in, "number") ? val.expires_in : void 0;
    const tokenType = val.token_type == void 0 ? void 0 : newDeserializeAccessTokenTokenTypeField(val.token_type);
    const restrictedTo = (0, json_js_1.isJson)(val.restricted_to, "array") ? val.restricted_to.map(function (itm) {
        return newDeserializeFileScope(itm);
    }) : void 0;
    const refreshToken = (0, json_js_1.isJson)(val.refresh_token, "string") ? val.refresh_token : void 0;
    const issuedTokenType = val.issued_token_type == void 0 ? void 0 : newDeserializeAccessTokenIssuedTokenTypeField(val.issued_token_type);
    return { accessToken: accessToken, expiresIn: expiresIn, tokenType: tokenType, restrictedTo: restrictedTo, refreshToken: refreshToken, issuedTokenType: issuedTokenType };
}
exports.newDeserializeAccessToken = newDeserializeAccessToken;
function newSerializeFilesUnderRetention(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeFileMini(item);
        }) };
}
exports.newSerializeFilesUnderRetention = newSerializeFilesUnderRetention;
function newDeserializeFilesUnderRetention(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeFileMini(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeFilesUnderRetention = newDeserializeFilesUnderRetention;
function newSerializeFileConflict(val) {
    const base = newSerializeFileMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileConflict\"";
    }
    return Object.assign(Object.assign({}, base), { ["sha1"]: val.sha1, ["file_version"]: val.fileVersion == void 0 ? void 0 : newSerializeFileVersionMini(val.fileVersion) });
}
exports.newSerializeFileConflict = newSerializeFileConflict;
function newDeserializeFileConflict(val) {
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    const fileVersion = val.file_version == void 0 ? void 0 : newDeserializeFileVersionMini(val.file_version);
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeFileBaseTypeField(val.type);
    return { sha1: sha1, fileVersion: fileVersion, sequenceId: sequenceId, name: name, id: id, etag: etag, type: type };
}
exports.newDeserializeFileConflict = newDeserializeFileConflict;
function newSerializeConflictErrorContextInfoField(val) {
    return { ["conflicts"]: val.conflicts == void 0 ? void 0 : val.conflicts.map(function (item) {
            return newSerializeFileConflict(item);
        }) };
}
exports.newSerializeConflictErrorContextInfoField = newSerializeConflictErrorContextInfoField;
function newDeserializeConflictErrorContextInfoField(val) {
    const conflicts = (0, json_js_1.isJson)(val.conflicts, "array") ? val.conflicts.map(function (itm) {
        return newDeserializeFileConflict(itm);
    }) : void 0;
    return { conflicts: conflicts };
}
exports.newDeserializeConflictErrorContextInfoField = newDeserializeConflictErrorContextInfoField;
function newSerializeConflictError(val) {
    const base = newSerializeClientError(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ConflictError\"";
    }
    return Object.assign(Object.assign({}, base), { ["context_info"]: val.contextInfo == void 0 ? void 0 : newSerializeConflictErrorContextInfoField(val.contextInfo) });
}
exports.newSerializeConflictError = newSerializeConflictError;
function newDeserializeConflictError(val) {
    const contextInfo = val.context_info == void 0 ? void 0 : newDeserializeClientErrorContextInfoField(val.context_info);
    const type = val.type == void 0 ? void 0 : newDeserializeClientErrorTypeField(val.type);
    const status = (0, json_js_1.isJson)(val.status, "number") ? val.status : void 0;
    const code = val.code == void 0 ? void 0 : newDeserializeClientErrorCodeField(val.code);
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    const helpUrl = (0, json_js_1.isJson)(val.help_url, "string") ? val.help_url : void 0;
    const requestId = (0, json_js_1.isJson)(val.request_id, "string") ? val.request_id : void 0;
    return { contextInfo: contextInfo, type: type, status: status, code: code, message: message, helpUrl: helpUrl, requestId: requestId };
}
exports.newDeserializeConflictError = newDeserializeConflictError;
function newSerializeFolderBaseTypeField(val) {
    return val;
}
exports.newSerializeFolderBaseTypeField = newSerializeFolderBaseTypeField;
function newDeserializeFolderBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderBaseTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFolderBaseTypeField = newDeserializeFolderBaseTypeField;
function newSerializeFolderBase(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: newSerializeFolderBaseTypeField(val.type) };
}
exports.newSerializeFolderBase = newSerializeFolderBase;
function newDeserializeFolderBase(val) {
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeFolderBaseTypeField(val.type);
    return { id: id, etag: etag, type: type };
}
exports.newDeserializeFolderBase = newDeserializeFolderBase;
function newSerializeFolderMini(val) {
    const base = newSerializeFolderBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FolderMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name, ["sequence_id"]: val.sequenceId });
}
exports.newSerializeFolderMini = newSerializeFolderMini;
function newDeserializeFolderMini(val) {
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeFolderBaseTypeField(val.type);
    return { name: name, sequenceId: sequenceId, id: id, etag: etag, type: type };
}
exports.newDeserializeFolderMini = newDeserializeFolderMini;
function newSerializeIntegrationMappingBaseIntegrationTypeField(val) {
    return val;
}
exports.newSerializeIntegrationMappingBaseIntegrationTypeField = newSerializeIntegrationMappingBaseIntegrationTypeField;
function newDeserializeIntegrationMappingBaseIntegrationTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"IntegrationMappingBaseIntegrationTypeField\"";
    }
    if (val == "slack") {
        return "slack";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeIntegrationMappingBaseIntegrationTypeField = newDeserializeIntegrationMappingBaseIntegrationTypeField;
function newSerializeIntegrationMappingBase(val) {
    return { ["id"]: val.id, ["integration_type"]: val.integrationType == void 0 ? void 0 : newSerializeIntegrationMappingBaseIntegrationTypeField(val.integrationType) };
}
exports.newSerializeIntegrationMappingBase = newSerializeIntegrationMappingBase;
function newDeserializeIntegrationMappingBase(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const integrationType = val.integration_type == void 0 ? void 0 : newDeserializeIntegrationMappingBaseIntegrationTypeField(val.integration_type);
    return { id: id, integrationType: integrationType };
}
exports.newDeserializeIntegrationMappingBase = newDeserializeIntegrationMappingBase;
function newSerializeIntegrationMappingMiniPartnerItemTypeField(val) {
    return val;
}
exports.newSerializeIntegrationMappingMiniPartnerItemTypeField = newSerializeIntegrationMappingMiniPartnerItemTypeField;
function newDeserializeIntegrationMappingMiniPartnerItemTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"IntegrationMappingMiniPartnerItemTypeField\"";
    }
    if (val == "channel") {
        return "channel";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeIntegrationMappingMiniPartnerItemTypeField = newDeserializeIntegrationMappingMiniPartnerItemTypeField;
function newSerializeIntegrationMappingMiniBoxItemTypeField(val) {
    return val;
}
exports.newSerializeIntegrationMappingMiniBoxItemTypeField = newSerializeIntegrationMappingMiniBoxItemTypeField;
function newDeserializeIntegrationMappingMiniBoxItemTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"IntegrationMappingMiniBoxItemTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeIntegrationMappingMiniBoxItemTypeField = newDeserializeIntegrationMappingMiniBoxItemTypeField;
function newSerializeIntegrationMappingMini(val) {
    const base = newSerializeIntegrationMappingBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"IntegrationMappingMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["partner_item_id"]: val.partnerItemId, ["partner_item_type"]: val.partnerItemType == void 0 ? void 0 : newSerializeIntegrationMappingMiniPartnerItemTypeField(val.partnerItemType), ["box_item_id"]: val.boxItemId, ["box_item_type"]: val.boxItemType == void 0 ? void 0 : newSerializeIntegrationMappingMiniBoxItemTypeField(val.boxItemType) });
}
exports.newSerializeIntegrationMappingMini = newSerializeIntegrationMappingMini;
function newDeserializeIntegrationMappingMini(val) {
    const partnerItemId = (0, json_js_1.isJson)(val.partner_item_id, "string") ? val.partner_item_id : void 0;
    const partnerItemType = val.partner_item_type == void 0 ? void 0 : newDeserializeIntegrationMappingMiniPartnerItemTypeField(val.partner_item_type);
    const boxItemId = (0, json_js_1.isJson)(val.box_item_id, "string") ? val.box_item_id : void 0;
    const boxItemType = val.box_item_type == void 0 ? void 0 : newDeserializeIntegrationMappingMiniBoxItemTypeField(val.box_item_type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const integrationType = val.integration_type == void 0 ? void 0 : newDeserializeIntegrationMappingBaseIntegrationTypeField(val.integration_type);
    return { partnerItemId: partnerItemId, partnerItemType: partnerItemType, boxItemId: boxItemId, boxItemType: boxItemType, id: id, integrationType: integrationType };
}
exports.newDeserializeIntegrationMappingMini = newDeserializeIntegrationMappingMini;
function newSerializeGroupBaseTypeField(val) {
    return val;
}
exports.newSerializeGroupBaseTypeField = newSerializeGroupBaseTypeField;
function newDeserializeGroupBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupBaseTypeField\"";
    }
    if (val == "group") {
        return "group";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeGroupBaseTypeField = newDeserializeGroupBaseTypeField;
function newSerializeGroupBase(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeGroupBaseTypeField(val.type) };
}
exports.newSerializeGroupBase = newSerializeGroupBase;
function newDeserializeGroupBase(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeGroupBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeGroupBase = newDeserializeGroupBase;
function newSerializeGroupMiniGroupTypeField(val) {
    return val;
}
exports.newSerializeGroupMiniGroupTypeField = newSerializeGroupMiniGroupTypeField;
function newDeserializeGroupMiniGroupTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupMiniGroupTypeField\"";
    }
    if (val == "managed_group") {
        return "managed_group";
    }
    if (val == "all_users_group") {
        return "all_users_group";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeGroupMiniGroupTypeField = newDeserializeGroupMiniGroupTypeField;
function newSerializeGroupMini(val) {
    const base = newSerializeGroupBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"GroupMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name, ["group_type"]: val.groupType == void 0 ? void 0 : newSerializeGroupMiniGroupTypeField(val.groupType) });
}
exports.newSerializeGroupMini = newSerializeGroupMini;
function newDeserializeGroupMini(val) {
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const groupType = val.group_type == void 0 ? void 0 : newDeserializeGroupMiniGroupTypeField(val.group_type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeGroupBaseTypeField(val.type);
    return { name: name, groupType: groupType, id: id, type: type };
}
exports.newDeserializeGroupMini = newDeserializeGroupMini;
function newSerializeGroupsOrderFieldDirectionField(val) {
    return val;
}
exports.newSerializeGroupsOrderFieldDirectionField = newSerializeGroupsOrderFieldDirectionField;
function newDeserializeGroupsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupsOrderFieldDirectionField\"";
    }
    if (val == "ASC") {
        return "ASC";
    }
    if (val == "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeGroupsOrderFieldDirectionField = newDeserializeGroupsOrderFieldDirectionField;
function newSerializeGroupsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction == void 0 ? void 0 : newSerializeGroupsOrderFieldDirectionField(val.direction) };
}
exports.newSerializeGroupsOrderField = newSerializeGroupsOrderField;
function newDeserializeGroupsOrderField(val) {
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction == void 0 ? void 0 : newDeserializeGroupsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.newDeserializeGroupsOrderField = newDeserializeGroupsOrderField;
function newSerializeGroups(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order == void 0 ? void 0 : val.order.map(function (item) {
            return newSerializeGroupsOrderField(item);
        }), ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeGroupMini(item);
        }) };
}
exports.newSerializeGroups = newSerializeGroups;
function newDeserializeGroups(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return newDeserializeGroupsOrderField(itm);
    }) : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeGroupMini(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.newDeserializeGroups = newDeserializeGroups;
function newSerializeGroup(val) {
    const base = newSerializeGroupMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"Group\"";
    }
    return Object.assign(Object.assign({}, base), { ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt });
}
exports.newSerializeGroup = newSerializeGroup;
function newDeserializeGroup(val) {
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const groupType = val.group_type == void 0 ? void 0 : newDeserializeGroupMiniGroupTypeField(val.group_type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeGroupBaseTypeField(val.type);
    return { createdAt: createdAt, modifiedAt: modifiedAt, name: name, groupType: groupType, id: id, type: type };
}
exports.newDeserializeGroup = newDeserializeGroup;
function newSerializeGroupFullInvitabilityLevelField(val) {
    return val;
}
exports.newSerializeGroupFullInvitabilityLevelField = newSerializeGroupFullInvitabilityLevelField;
function newDeserializeGroupFullInvitabilityLevelField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupFullInvitabilityLevelField\"";
    }
    if (val == "admins_only") {
        return "admins_only";
    }
    if (val == "admins_and_members") {
        return "admins_and_members";
    }
    if (val == "all_managed_users") {
        return "all_managed_users";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeGroupFullInvitabilityLevelField = newDeserializeGroupFullInvitabilityLevelField;
function newSerializeGroupFullMemberViewabilityLevelField(val) {
    return val;
}
exports.newSerializeGroupFullMemberViewabilityLevelField = newSerializeGroupFullMemberViewabilityLevelField;
function newDeserializeGroupFullMemberViewabilityLevelField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupFullMemberViewabilityLevelField\"";
    }
    if (val == "admins_only") {
        return "admins_only";
    }
    if (val == "admins_and_members") {
        return "admins_and_members";
    }
    if (val == "all_managed_users") {
        return "all_managed_users";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeGroupFullMemberViewabilityLevelField = newDeserializeGroupFullMemberViewabilityLevelField;
function newSerializeGroupFullPermissionsField(val) {
    return { ["can_invite_as_collaborator"]: val.canInviteAsCollaborator };
}
exports.newSerializeGroupFullPermissionsField = newSerializeGroupFullPermissionsField;
function newDeserializeGroupFullPermissionsField(val) {
    const canInviteAsCollaborator = (0, json_js_1.isJson)(val.can_invite_as_collaborator, "boolean") ? val.can_invite_as_collaborator : void 0;
    return { canInviteAsCollaborator: canInviteAsCollaborator };
}
exports.newDeserializeGroupFullPermissionsField = newDeserializeGroupFullPermissionsField;
function newSerializeGroupFull(val) {
    const base = newSerializeGroup(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"GroupFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["provenance"]: val.provenance, ["external_sync_identifier"]: val.externalSyncIdentifier, ["description"]: val.description, ["invitability_level"]: val.invitabilityLevel == void 0 ? void 0 : newSerializeGroupFullInvitabilityLevelField(val.invitabilityLevel), ["member_viewability_level"]: val.memberViewabilityLevel == void 0 ? void 0 : newSerializeGroupFullMemberViewabilityLevelField(val.memberViewabilityLevel), ["permissions"]: val.permissions == void 0 ? void 0 : newSerializeGroupFullPermissionsField(val.permissions) });
}
exports.newSerializeGroupFull = newSerializeGroupFull;
function newDeserializeGroupFull(val) {
    const provenance = (0, json_js_1.isJson)(val.provenance, "string") ? val.provenance : void 0;
    const externalSyncIdentifier = (0, json_js_1.isJson)(val.external_sync_identifier, "string") ? val.external_sync_identifier : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const invitabilityLevel = val.invitability_level == void 0 ? void 0 : newDeserializeGroupFullInvitabilityLevelField(val.invitability_level);
    const memberViewabilityLevel = val.member_viewability_level == void 0 ? void 0 : newDeserializeGroupFullMemberViewabilityLevelField(val.member_viewability_level);
    const permissions = val.permissions == void 0 ? void 0 : newDeserializeGroupFullPermissionsField(val.permissions);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const groupType = val.group_type == void 0 ? void 0 : newDeserializeGroupMiniGroupTypeField(val.group_type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeGroupBaseTypeField(val.type);
    return { provenance: provenance, externalSyncIdentifier: externalSyncIdentifier, description: description, invitabilityLevel: invitabilityLevel, memberViewabilityLevel: memberViewabilityLevel, permissions: permissions, createdAt: createdAt, modifiedAt: modifiedAt, name: name, groupType: groupType, id: id, type: type };
}
exports.newDeserializeGroupFull = newDeserializeGroupFull;
function newSerializeLegalHoldPolicyMiniTypeField(val) {
    return val;
}
exports.newSerializeLegalHoldPolicyMiniTypeField = newSerializeLegalHoldPolicyMiniTypeField;
function newDeserializeLegalHoldPolicyMiniTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"LegalHoldPolicyMiniTypeField\"";
    }
    if (val == "legal_hold_policy") {
        return "legal_hold_policy";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeLegalHoldPolicyMiniTypeField = newDeserializeLegalHoldPolicyMiniTypeField;
function newSerializeLegalHoldPolicyMini(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeLegalHoldPolicyMiniTypeField(val.type) };
}
exports.newSerializeLegalHoldPolicyMini = newSerializeLegalHoldPolicyMini;
function newDeserializeLegalHoldPolicyMini(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeLegalHoldPolicyMiniTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeLegalHoldPolicyMini = newDeserializeLegalHoldPolicyMini;
function newSerializeLegalHoldPolicyAssignmentBaseTypeField(val) {
    return val;
}
exports.newSerializeLegalHoldPolicyAssignmentBaseTypeField = newSerializeLegalHoldPolicyAssignmentBaseTypeField;
function newDeserializeLegalHoldPolicyAssignmentBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"LegalHoldPolicyAssignmentBaseTypeField\"";
    }
    if (val == "legal_hold_policy_assignment") {
        return "legal_hold_policy_assignment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeLegalHoldPolicyAssignmentBaseTypeField = newDeserializeLegalHoldPolicyAssignmentBaseTypeField;
function newSerializeLegalHoldPolicyAssignmentBase(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeLegalHoldPolicyAssignmentBaseTypeField(val.type) };
}
exports.newSerializeLegalHoldPolicyAssignmentBase = newSerializeLegalHoldPolicyAssignmentBase;
function newDeserializeLegalHoldPolicyAssignmentBase(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeLegalHoldPolicyAssignmentBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeLegalHoldPolicyAssignmentBase = newDeserializeLegalHoldPolicyAssignmentBase;
function newSerializeLegalHoldPolicyAssignments(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeLegalHoldPolicyAssignmentBase(item);
        }) };
}
exports.newSerializeLegalHoldPolicyAssignments = newSerializeLegalHoldPolicyAssignments;
function newDeserializeLegalHoldPolicyAssignments(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeLegalHoldPolicyAssignmentBase(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeLegalHoldPolicyAssignments = newDeserializeLegalHoldPolicyAssignments;
function newSerializeMetadata(val) {
    return {};
}
exports.newSerializeMetadata = newSerializeMetadata;
function newDeserializeMetadata(val) {
    return {};
}
exports.newDeserializeMetadata = newDeserializeMetadata;
function newSerializeMetadatas(val) {
    return { ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeMetadata(item);
        }), ["limit"]: val.limit };
}
exports.newSerializeMetadatas = newSerializeMetadatas;
function newDeserializeMetadatas(val) {
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeMetadata(itm);
    }) : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    return { entries: entries, limit: limit };
}
exports.newDeserializeMetadatas = newDeserializeMetadatas;
function newSerializeMetadataFull(val) {
    const base = newSerializeMetadata(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"MetadataFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["$canEdit"]: val.canEdit, ["$id"]: val.id, ["$type"]: val.type, ["$typeVersion"]: val.typeVersion });
}
exports.newSerializeMetadataFull = newSerializeMetadataFull;
function newDeserializeMetadataFull(val) {
    const canEdit = (0, json_js_1.isJson)(val.$canEdit, "boolean") ? val.$canEdit : void 0;
    const id = (0, json_js_1.isJson)(val.$id, "string") ? val.$id : void 0;
    const type = (0, json_js_1.isJson)(val.$type, "string") ? val.$type : void 0;
    const typeVersion = (0, json_js_1.isJson)(val.$typeVersion, "number") ? val.$typeVersion : void 0;
    return { canEdit: canEdit, id: id, type: type, typeVersion: typeVersion };
}
exports.newDeserializeMetadataFull = newDeserializeMetadataFull;
function newSerializeMetadataBase(val) {
    return { ["$parent"]: val.parent, ["$template"]: val.template, ["$scope"]: val.scope, ["$version"]: val.version };
}
exports.newSerializeMetadataBase = newSerializeMetadataBase;
function newDeserializeMetadataBase(val) {
    const parent = (0, json_js_1.isJson)(val.$parent, "string") ? val.$parent : void 0;
    const template = (0, json_js_1.isJson)(val.$template, "string") ? val.$template : void 0;
    const scope = (0, json_js_1.isJson)(val.$scope, "string") ? val.$scope : void 0;
    const version = (0, json_js_1.isJson)(val.$version, "number") ? val.$version : void 0;
    return { parent: parent, template: template, scope: scope, version: version };
}
exports.newDeserializeMetadataBase = newDeserializeMetadataBase;
function newSerializeMetadataCascadePolicyTypeField(val) {
    return val;
}
exports.newSerializeMetadataCascadePolicyTypeField = newSerializeMetadataCascadePolicyTypeField;
function newDeserializeMetadataCascadePolicyTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataCascadePolicyTypeField\"";
    }
    if (val == "metadata_cascade_policy") {
        return "metadata_cascade_policy";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeMetadataCascadePolicyTypeField = newDeserializeMetadataCascadePolicyTypeField;
function newSerializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField(val) {
    return val;
}
exports.newSerializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField = newSerializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField;
function newDeserializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataCascadePolicyOwnerEnterpriseFieldTypeField\"";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField = newDeserializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField;
function newSerializeMetadataCascadePolicyOwnerEnterpriseField(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeMetadataCascadePolicyOwnerEnterpriseField = newSerializeMetadataCascadePolicyOwnerEnterpriseField;
function newDeserializeMetadataCascadePolicyOwnerEnterpriseField(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { type: type, id: id };
}
exports.newDeserializeMetadataCascadePolicyOwnerEnterpriseField = newDeserializeMetadataCascadePolicyOwnerEnterpriseField;
function newSerializeMetadataCascadePolicyParentFieldTypeField(val) {
    return val;
}
exports.newSerializeMetadataCascadePolicyParentFieldTypeField = newSerializeMetadataCascadePolicyParentFieldTypeField;
function newDeserializeMetadataCascadePolicyParentFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataCascadePolicyParentFieldTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeMetadataCascadePolicyParentFieldTypeField = newDeserializeMetadataCascadePolicyParentFieldTypeField;
function newSerializeMetadataCascadePolicyParentField(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeMetadataCascadePolicyParentFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeMetadataCascadePolicyParentField = newSerializeMetadataCascadePolicyParentField;
function newDeserializeMetadataCascadePolicyParentField(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeMetadataCascadePolicyParentFieldTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { type: type, id: id };
}
exports.newDeserializeMetadataCascadePolicyParentField = newDeserializeMetadataCascadePolicyParentField;
function newSerializeMetadataCascadePolicyScopeField(val) {
    return val;
}
exports.newSerializeMetadataCascadePolicyScopeField = newSerializeMetadataCascadePolicyScopeField;
function newDeserializeMetadataCascadePolicyScopeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataCascadePolicyScopeField\"";
    }
    if (val == "global") {
        return "global";
    }
    if (val == "enterprise_*") {
        return "enterprise_*";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeMetadataCascadePolicyScopeField = newDeserializeMetadataCascadePolicyScopeField;
function newSerializeMetadataCascadePolicy(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeMetadataCascadePolicyTypeField(val.type), ["owner_enterprise"]: val.ownerEnterprise == void 0 ? void 0 : newSerializeMetadataCascadePolicyOwnerEnterpriseField(val.ownerEnterprise), ["parent"]: val.parent == void 0 ? void 0 : newSerializeMetadataCascadePolicyParentField(val.parent), ["scope"]: val.scope == void 0 ? void 0 : newSerializeMetadataCascadePolicyScopeField(val.scope), ["templateKey"]: val.templateKey };
}
exports.newSerializeMetadataCascadePolicy = newSerializeMetadataCascadePolicy;
function newDeserializeMetadataCascadePolicy(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeMetadataCascadePolicyTypeField(val.type);
    const ownerEnterprise = val.owner_enterprise == void 0 ? void 0 : newDeserializeMetadataCascadePolicyOwnerEnterpriseField(val.owner_enterprise);
    const parent = val.parent == void 0 ? void 0 : newDeserializeMetadataCascadePolicyParentField(val.parent);
    const scope = val.scope == void 0 ? void 0 : newDeserializeMetadataCascadePolicyScopeField(val.scope);
    const templateKey = (0, json_js_1.isJson)(val.templateKey, "string") ? val.templateKey : void 0;
    return { id: id, type: type, ownerEnterprise: ownerEnterprise, parent: parent, scope: scope, templateKey: templateKey };
}
exports.newDeserializeMetadataCascadePolicy = newDeserializeMetadataCascadePolicy;
function newSerializeMetadataCascadePolicies(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeMetadataCascadePolicy(item);
        }) };
}
exports.newSerializeMetadataCascadePolicies = newSerializeMetadataCascadePolicies;
function newDeserializeMetadataCascadePolicies(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeMetadataCascadePolicy(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeMetadataCascadePolicies = newDeserializeMetadataCascadePolicies;
function newSerializeMetadataQueryIndexStatusField(val) {
    return val;
}
exports.newSerializeMetadataQueryIndexStatusField = newSerializeMetadataQueryIndexStatusField;
function newDeserializeMetadataQueryIndexStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataQueryIndexStatusField\"";
    }
    if (val == "building") {
        return "building";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "disabled") {
        return "disabled";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeMetadataQueryIndexStatusField = newDeserializeMetadataQueryIndexStatusField;
function newSerializeMetadataQueryIndexFieldsFieldSortDirectionField(val) {
    return val;
}
exports.newSerializeMetadataQueryIndexFieldsFieldSortDirectionField = newSerializeMetadataQueryIndexFieldsFieldSortDirectionField;
function newDeserializeMetadataQueryIndexFieldsFieldSortDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataQueryIndexFieldsFieldSortDirectionField\"";
    }
    if (val == "asc") {
        return "asc";
    }
    if (val == "desc") {
        return "desc";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeMetadataQueryIndexFieldsFieldSortDirectionField = newDeserializeMetadataQueryIndexFieldsFieldSortDirectionField;
function newSerializeMetadataQueryIndexFieldsField(val) {
    return { ["key"]: val.key, ["sort_direction"]: val.sortDirection == void 0 ? void 0 : newSerializeMetadataQueryIndexFieldsFieldSortDirectionField(val.sortDirection) };
}
exports.newSerializeMetadataQueryIndexFieldsField = newSerializeMetadataQueryIndexFieldsField;
function newDeserializeMetadataQueryIndexFieldsField(val) {
    const key = (0, json_js_1.isJson)(val.key, "string") ? val.key : void 0;
    const sortDirection = val.sort_direction == void 0 ? void 0 : newDeserializeMetadataQueryIndexFieldsFieldSortDirectionField(val.sort_direction);
    return { key: key, sortDirection: sortDirection };
}
exports.newDeserializeMetadataQueryIndexFieldsField = newDeserializeMetadataQueryIndexFieldsField;
function newSerializeMetadataQueryIndex(val) {
    return { ["id"]: val.id, ["type"]: val.type, ["status"]: newSerializeMetadataQueryIndexStatusField(val.status), ["fields"]: val.fields == void 0 ? void 0 : val.fields.map(function (item) {
            return newSerializeMetadataQueryIndexFieldsField(item);
        }) };
}
exports.newSerializeMetadataQueryIndex = newSerializeMetadataQueryIndex;
function newDeserializeMetadataQueryIndex(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type;
    const status = newDeserializeMetadataQueryIndexStatusField(val.status);
    const fields = (0, json_js_1.isJson)(val.fields, "array") ? val.fields.map(function (itm) {
        return newDeserializeMetadataQueryIndexFieldsField(itm);
    }) : void 0;
    return { id: id, type: type, status: status, fields: fields };
}
exports.newDeserializeMetadataQueryIndex = newDeserializeMetadataQueryIndex;
function newSerializeMetadataQueryIndices(val) {
    return { ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeMetadataQueryIndex(item);
        }), ["limit"]: val.limit, ["next_marker"]: val.nextMarker };
}
exports.newSerializeMetadataQueryIndices = newSerializeMetadataQueryIndices;
function newDeserializeMetadataQueryIndices(val) {
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeMetadataQueryIndex(itm);
    }) : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "string") ? val.next_marker : void 0;
    return { entries: entries, limit: limit, nextMarker: nextMarker };
}
exports.newDeserializeMetadataQueryIndices = newDeserializeMetadataQueryIndices;
function newSerializeMetadataTemplateTypeField(val) {
    return val;
}
exports.newSerializeMetadataTemplateTypeField = newSerializeMetadataTemplateTypeField;
function newDeserializeMetadataTemplateTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataTemplateTypeField\"";
    }
    if (val == "metadata_template") {
        return "metadata_template";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeMetadataTemplateTypeField = newDeserializeMetadataTemplateTypeField;
function newSerializeMetadataTemplateFieldsFieldTypeField(val) {
    return val;
}
exports.newSerializeMetadataTemplateFieldsFieldTypeField = newSerializeMetadataTemplateFieldsFieldTypeField;
function newDeserializeMetadataTemplateFieldsFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataTemplateFieldsFieldTypeField\"";
    }
    if (val == "string") {
        return "string";
    }
    if (val == "float") {
        return "float";
    }
    if (val == "date") {
        return "date";
    }
    if (val == "enum") {
        return "enum";
    }
    if (val == "multiSelect") {
        return "multiSelect";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeMetadataTemplateFieldsFieldTypeField = newDeserializeMetadataTemplateFieldsFieldTypeField;
function newSerializeMetadataTemplateFieldsFieldOptionsField(val) {
    return { ["key"]: val.key, ["id"]: val.id };
}
exports.newSerializeMetadataTemplateFieldsFieldOptionsField = newSerializeMetadataTemplateFieldsFieldOptionsField;
function newDeserializeMetadataTemplateFieldsFieldOptionsField(val) {
    const key = val.key;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { key: key, id: id };
}
exports.newDeserializeMetadataTemplateFieldsFieldOptionsField = newDeserializeMetadataTemplateFieldsFieldOptionsField;
function newSerializeMetadataTemplateFieldsField(val) {
    return { ["type"]: newSerializeMetadataTemplateFieldsFieldTypeField(val.type), ["key"]: val.key, ["displayName"]: val.displayName, ["description"]: val.description, ["hidden"]: val.hidden, ["options"]: val.options == void 0 ? void 0 : val.options.map(function (item) {
            return newSerializeMetadataTemplateFieldsFieldOptionsField(item);
        }), ["id"]: val.id };
}
exports.newSerializeMetadataTemplateFieldsField = newSerializeMetadataTemplateFieldsField;
function newDeserializeMetadataTemplateFieldsField(val) {
    const type = newDeserializeMetadataTemplateFieldsFieldTypeField(val.type);
    const key = val.key;
    const displayName = val.displayName;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const hidden = (0, json_js_1.isJson)(val.hidden, "boolean") ? val.hidden : void 0;
    const options = (0, json_js_1.isJson)(val.options, "array") ? val.options.map(function (itm) {
        return newDeserializeMetadataTemplateFieldsFieldOptionsField(itm);
    }) : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { type: type, key: key, displayName: displayName, description: description, hidden: hidden, options: options, id: id };
}
exports.newDeserializeMetadataTemplateFieldsField = newDeserializeMetadataTemplateFieldsField;
function newSerializeMetadataTemplate(val) {
    return { ["id"]: val.id, ["type"]: newSerializeMetadataTemplateTypeField(val.type), ["scope"]: val.scope, ["templateKey"]: val.templateKey, ["displayName"]: val.displayName, ["hidden"]: val.hidden, ["fields"]: val.fields == void 0 ? void 0 : val.fields.map(function (item) {
            return newSerializeMetadataTemplateFieldsField(item);
        }), ["copyInstanceOnItemCopy"]: val.copyInstanceOnItemCopy };
}
exports.newSerializeMetadataTemplate = newSerializeMetadataTemplate;
function newDeserializeMetadataTemplate(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = newDeserializeMetadataTemplateTypeField(val.type);
    const scope = (0, json_js_1.isJson)(val.scope, "string") ? val.scope : void 0;
    const templateKey = (0, json_js_1.isJson)(val.templateKey, "string") ? val.templateKey : void 0;
    const displayName = (0, json_js_1.isJson)(val.displayName, "string") ? val.displayName : void 0;
    const hidden = (0, json_js_1.isJson)(val.hidden, "boolean") ? val.hidden : void 0;
    const fields = (0, json_js_1.isJson)(val.fields, "array") ? val.fields.map(function (itm) {
        return newDeserializeMetadataTemplateFieldsField(itm);
    }) : void 0;
    const copyInstanceOnItemCopy = (0, json_js_1.isJson)(val.copyInstanceOnItemCopy, "boolean") ? val.copyInstanceOnItemCopy : void 0;
    return { id: id, type: type, scope: scope, templateKey: templateKey, displayName: displayName, hidden: hidden, fields: fields, copyInstanceOnItemCopy: copyInstanceOnItemCopy };
}
exports.newDeserializeMetadataTemplate = newDeserializeMetadataTemplate;
function newSerializeMetadataTemplates(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeMetadataTemplate(item);
        }) };
}
exports.newSerializeMetadataTemplates = newSerializeMetadataTemplates;
function newDeserializeMetadataTemplates(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeMetadataTemplate(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeMetadataTemplates = newDeserializeMetadataTemplates;
function newSerializeRealtimeServer(val) {
    return { ["type"]: val.type, ["url"]: val.url, ["ttl"]: val.ttl, ["max_retries"]: val.maxRetries, ["retry_timeout"]: val.retryTimeout };
}
exports.newSerializeRealtimeServer = newSerializeRealtimeServer;
function newDeserializeRealtimeServer(val) {
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    const ttl = (0, json_js_1.isJson)(val.ttl, "number") ? val.ttl : void 0;
    const maxRetries = (0, json_js_1.isJson)(val.max_retries, "number") ? val.max_retries : void 0;
    const retryTimeout = (0, json_js_1.isJson)(val.retry_timeout, "number") ? val.retry_timeout : void 0;
    return { type: type, url: url, ttl: ttl, maxRetries: maxRetries, retryTimeout: retryTimeout };
}
exports.newDeserializeRealtimeServer = newDeserializeRealtimeServer;
function newSerializeRealtimeServers(val) {
    return { ["chunk_size"]: val.chunkSize, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeRealtimeServer(item);
        }) };
}
exports.newSerializeRealtimeServers = newSerializeRealtimeServers;
function newDeserializeRealtimeServers(val) {
    const chunkSize = (0, json_js_1.isJson)(val.chunk_size, "number") ? val.chunk_size : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeRealtimeServer(itm);
    }) : void 0;
    return { chunkSize: chunkSize, entries: entries };
}
exports.newDeserializeRealtimeServers = newDeserializeRealtimeServers;
function newSerializeRetentionPolicyBaseTypeField(val) {
    return val;
}
exports.newSerializeRetentionPolicyBaseTypeField = newSerializeRetentionPolicyBaseTypeField;
function newDeserializeRetentionPolicyBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyBaseTypeField\"";
    }
    if (val == "retention_policy") {
        return "retention_policy";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeRetentionPolicyBaseTypeField = newDeserializeRetentionPolicyBaseTypeField;
function newSerializeRetentionPolicyBase(val) {
    return { ["id"]: val.id, ["type"]: newSerializeRetentionPolicyBaseTypeField(val.type) };
}
exports.newSerializeRetentionPolicyBase = newSerializeRetentionPolicyBase;
function newDeserializeRetentionPolicyBase(val) {
    const id = val.id;
    const type = newDeserializeRetentionPolicyBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeRetentionPolicyBase = newDeserializeRetentionPolicyBase;
function newSerializeRetentionPolicyMiniDispositionActionField(val) {
    return val;
}
exports.newSerializeRetentionPolicyMiniDispositionActionField = newSerializeRetentionPolicyMiniDispositionActionField;
function newDeserializeRetentionPolicyMiniDispositionActionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyMiniDispositionActionField\"";
    }
    if (val == "permanently_delete") {
        return "permanently_delete";
    }
    if (val == "remove_retention") {
        return "remove_retention";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeRetentionPolicyMiniDispositionActionField = newDeserializeRetentionPolicyMiniDispositionActionField;
function newSerializeRetentionPolicyMini(val) {
    const base = newSerializeRetentionPolicyBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"RetentionPolicyMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["policy_name"]: val.policyName, ["retention_length"]: val.retentionLength, ["disposition_action"]: val.dispositionAction == void 0 ? void 0 : newSerializeRetentionPolicyMiniDispositionActionField(val.dispositionAction) });
}
exports.newSerializeRetentionPolicyMini = newSerializeRetentionPolicyMini;
function newDeserializeRetentionPolicyMini(val) {
    const policyName = (0, json_js_1.isJson)(val.policy_name, "string") ? val.policy_name : void 0;
    const retentionLength = (0, json_js_1.isJson)(val.retention_length, "string") ? val.retention_length : void 0;
    const dispositionAction = val.disposition_action == void 0 ? void 0 : newDeserializeRetentionPolicyMiniDispositionActionField(val.disposition_action);
    const id = val.id;
    const type = newDeserializeRetentionPolicyBaseTypeField(val.type);
    return { policyName: policyName, retentionLength: retentionLength, dispositionAction: dispositionAction, id: id, type: type };
}
exports.newDeserializeRetentionPolicyMini = newDeserializeRetentionPolicyMini;
function newSerializeRetentionPolicies(val) {
    return { ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeRetentionPolicyMini(item);
        }), ["limit"]: val.limit, ["next_marker"]: val.nextMarker };
}
exports.newSerializeRetentionPolicies = newSerializeRetentionPolicies;
function newDeserializeRetentionPolicies(val) {
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeRetentionPolicyMini(itm);
    }) : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "string") ? val.next_marker : void 0;
    return { entries: entries, limit: limit, nextMarker: nextMarker };
}
exports.newDeserializeRetentionPolicies = newDeserializeRetentionPolicies;
function newSerializeFileVersionRetentionTypeField(val) {
    return val;
}
exports.newSerializeFileVersionRetentionTypeField = newSerializeFileVersionRetentionTypeField;
function newDeserializeFileVersionRetentionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileVersionRetentionTypeField\"";
    }
    if (val == "file_version_retention") {
        return "file_version_retention";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileVersionRetentionTypeField = newDeserializeFileVersionRetentionTypeField;
function newSerializeFileVersionRetention(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeFileVersionRetentionTypeField(val.type), ["file_version"]: val.fileVersion == void 0 ? void 0 : newSerializeFileVersionMini(val.fileVersion), ["file"]: val.file == void 0 ? void 0 : newSerializeFileMini(val.file), ["applied_at"]: val.appliedAt, ["disposition_at"]: val.dispositionAt, ["winning_retention_policy"]: val.winningRetentionPolicy == void 0 ? void 0 : newSerializeRetentionPolicyMini(val.winningRetentionPolicy) };
}
exports.newSerializeFileVersionRetention = newSerializeFileVersionRetention;
function newDeserializeFileVersionRetention(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeFileVersionRetentionTypeField(val.type);
    const fileVersion = val.file_version == void 0 ? void 0 : newDeserializeFileVersionMini(val.file_version);
    const file = val.file == void 0 ? void 0 : newDeserializeFileMini(val.file);
    const appliedAt = (0, json_js_1.isJson)(val.applied_at, "string") ? val.applied_at : void 0;
    const dispositionAt = (0, json_js_1.isJson)(val.disposition_at, "string") ? val.disposition_at : void 0;
    const winningRetentionPolicy = val.winning_retention_policy == void 0 ? void 0 : newDeserializeRetentionPolicyMini(val.winning_retention_policy);
    return { id: id, type: type, fileVersion: fileVersion, file: file, appliedAt: appliedAt, dispositionAt: dispositionAt, winningRetentionPolicy: winningRetentionPolicy };
}
exports.newDeserializeFileVersionRetention = newDeserializeFileVersionRetention;
function newSerializeFileVersionRetentions(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeFileVersionRetention(item);
        }) };
}
exports.newSerializeFileVersionRetentions = newSerializeFileVersionRetentions;
function newDeserializeFileVersionRetentions(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeFileVersionRetention(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeFileVersionRetentions = newDeserializeFileVersionRetentions;
function newSerializeRetentionPolicyAssignmentBaseTypeField(val) {
    return val;
}
exports.newSerializeRetentionPolicyAssignmentBaseTypeField = newSerializeRetentionPolicyAssignmentBaseTypeField;
function newDeserializeRetentionPolicyAssignmentBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyAssignmentBaseTypeField\"";
    }
    if (val == "retention_policy_assignment") {
        return "retention_policy_assignment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeRetentionPolicyAssignmentBaseTypeField = newDeserializeRetentionPolicyAssignmentBaseTypeField;
function newSerializeRetentionPolicyAssignmentBase(val) {
    return { ["id"]: val.id, ["type"]: newSerializeRetentionPolicyAssignmentBaseTypeField(val.type) };
}
exports.newSerializeRetentionPolicyAssignmentBase = newSerializeRetentionPolicyAssignmentBase;
function newDeserializeRetentionPolicyAssignmentBase(val) {
    const id = val.id;
    const type = newDeserializeRetentionPolicyAssignmentBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeRetentionPolicyAssignmentBase = newDeserializeRetentionPolicyAssignmentBase;
function newSerializeRetentionPolicyAssignments(val) {
    return { ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeRetentionPolicyAssignmentBase(item);
        }), ["limit"]: val.limit, ["next_marker"]: val.nextMarker };
}
exports.newSerializeRetentionPolicyAssignments = newSerializeRetentionPolicyAssignments;
function newDeserializeRetentionPolicyAssignments(val) {
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeRetentionPolicyAssignmentBase(itm);
    }) : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "string") ? val.next_marker : void 0;
    return { entries: entries, limit: limit, nextMarker: nextMarker };
}
exports.newDeserializeRetentionPolicyAssignments = newDeserializeRetentionPolicyAssignments;
function newSerializeShieldInformationBarrierBaseTypeField(val) {
    return val;
}
exports.newSerializeShieldInformationBarrierBaseTypeField = newSerializeShieldInformationBarrierBaseTypeField;
function newDeserializeShieldInformationBarrierBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierBaseTypeField\"";
    }
    if (val == "shield_information_barrier") {
        return "shield_information_barrier";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeShieldInformationBarrierBaseTypeField = newDeserializeShieldInformationBarrierBaseTypeField;
function newSerializeShieldInformationBarrierBase(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeShieldInformationBarrierBaseTypeField(val.type) };
}
exports.newSerializeShieldInformationBarrierBase = newSerializeShieldInformationBarrierBase;
function newDeserializeShieldInformationBarrierBase(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeShieldInformationBarrierBase = newDeserializeShieldInformationBarrierBase;
function newSerializeShieldInformationBarrierReference(val) {
    return { ["shield_information_barrier"]: val.shieldInformationBarrier == void 0 ? void 0 : newSerializeShieldInformationBarrierBase(val.shieldInformationBarrier) };
}
exports.newSerializeShieldInformationBarrierReference = newSerializeShieldInformationBarrierReference;
function newDeserializeShieldInformationBarrierReference(val) {
    const shieldInformationBarrier = val.shield_information_barrier == void 0 ? void 0 : newDeserializeShieldInformationBarrierBase(val.shield_information_barrier);
    return { shieldInformationBarrier: shieldInformationBarrier };
}
exports.newDeserializeShieldInformationBarrierReference = newDeserializeShieldInformationBarrierReference;
function newSerializeShieldInformationBarrierReportBaseTypeField(val) {
    return val;
}
exports.newSerializeShieldInformationBarrierReportBaseTypeField = newSerializeShieldInformationBarrierReportBaseTypeField;
function newDeserializeShieldInformationBarrierReportBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierReportBaseTypeField\"";
    }
    if (val == "shield_information_barrier_report") {
        return "shield_information_barrier_report";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeShieldInformationBarrierReportBaseTypeField = newDeserializeShieldInformationBarrierReportBaseTypeField;
function newSerializeShieldInformationBarrierReportBase(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeShieldInformationBarrierReportBaseTypeField(val.type) };
}
exports.newSerializeShieldInformationBarrierReportBase = newSerializeShieldInformationBarrierReportBase;
function newDeserializeShieldInformationBarrierReportBase(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierReportBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeShieldInformationBarrierReportBase = newDeserializeShieldInformationBarrierReportBase;
function newSerializeShieldInformationBarrierSegmentMemberBaseTypeField(val) {
    return val;
}
exports.newSerializeShieldInformationBarrierSegmentMemberBaseTypeField = newSerializeShieldInformationBarrierSegmentMemberBaseTypeField;
function newDeserializeShieldInformationBarrierSegmentMemberBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentMemberBaseTypeField\"";
    }
    if (val == "shield_information_barrier_segment_member") {
        return "shield_information_barrier_segment_member";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeShieldInformationBarrierSegmentMemberBaseTypeField = newDeserializeShieldInformationBarrierSegmentMemberBaseTypeField;
function newSerializeShieldInformationBarrierSegmentMemberBase(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeShieldInformationBarrierSegmentMemberBaseTypeField(val.type) };
}
exports.newSerializeShieldInformationBarrierSegmentMemberBase = newSerializeShieldInformationBarrierSegmentMemberBase;
function newDeserializeShieldInformationBarrierSegmentMemberBase(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierSegmentMemberBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeShieldInformationBarrierSegmentMemberBase = newDeserializeShieldInformationBarrierSegmentMemberBase;
function newSerializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val) {
    return val;
}
exports.newSerializeShieldInformationBarrierSegmentRestrictionBaseTypeField = newSerializeShieldInformationBarrierSegmentRestrictionBaseTypeField;
function newDeserializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentRestrictionBaseTypeField\"";
    }
    if (val == "shield_information_barrier_segment_restriction") {
        return "shield_information_barrier_segment_restriction";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeShieldInformationBarrierSegmentRestrictionBaseTypeField = newDeserializeShieldInformationBarrierSegmentRestrictionBaseTypeField;
function newSerializeShieldInformationBarrierSegmentRestrictionBase(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeShieldInformationBarrierSegmentRestrictionBase = newSerializeShieldInformationBarrierSegmentRestrictionBase;
function newDeserializeShieldInformationBarrierSegmentRestrictionBase(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { type: type, id: id };
}
exports.newDeserializeShieldInformationBarrierSegmentRestrictionBase = newDeserializeShieldInformationBarrierSegmentRestrictionBase;
function newSerializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField(val) {
    return val;
}
exports.newSerializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField = newSerializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField;
function newDeserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField\"";
    }
    if (val == "shield_information_barrier_segment") {
        return "shield_information_barrier_segment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField = newDeserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField;
function newSerializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField(val.type) };
}
exports.newSerializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField = newSerializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField;
function newDeserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField = newDeserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField;
function newSerializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField(val) {
    return val;
}
exports.newSerializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField = newSerializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField;
function newDeserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField\"";
    }
    if (val == "shield_information_barrier_segment") {
        return "shield_information_barrier_segment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField = newDeserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField;
function newSerializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField(val.type) };
}
exports.newSerializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField = newSerializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField;
function newDeserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField = newDeserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField;
function newSerializeShieldInformationBarrierSegmentRestrictionMini(val) {
    const base = newSerializeShieldInformationBarrierSegmentRestrictionBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentRestrictionMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["shield_information_barrier_segment"]: newSerializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField(val.shieldInformationBarrierSegment), ["restricted_segment"]: newSerializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField(val.restrictedSegment) });
}
exports.newSerializeShieldInformationBarrierSegmentRestrictionMini = newSerializeShieldInformationBarrierSegmentRestrictionMini;
function newDeserializeShieldInformationBarrierSegmentRestrictionMini(val) {
    const shieldInformationBarrierSegment = newDeserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField(val.shield_information_barrier_segment);
    const restrictedSegment = newDeserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField(val.restricted_segment);
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { shieldInformationBarrierSegment: shieldInformationBarrierSegment, restrictedSegment: restrictedSegment, type: type, id: id };
}
exports.newDeserializeShieldInformationBarrierSegmentRestrictionMini = newDeserializeShieldInformationBarrierSegmentRestrictionMini;
function newSerializeSessionTerminationMessage(val) {
    return { ["message"]: val.message };
}
exports.newSerializeSessionTerminationMessage = newSerializeSessionTerminationMessage;
function newDeserializeSessionTerminationMessage(val) {
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    return { message: message };
}
exports.newDeserializeSessionTerminationMessage = newDeserializeSessionTerminationMessage;
function newSerializeStoragePolicyMiniTypeField(val) {
    return val;
}
exports.newSerializeStoragePolicyMiniTypeField = newSerializeStoragePolicyMiniTypeField;
function newDeserializeStoragePolicyMiniTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StoragePolicyMiniTypeField\"";
    }
    if (val == "storage_policy") {
        return "storage_policy";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeStoragePolicyMiniTypeField = newDeserializeStoragePolicyMiniTypeField;
function newSerializeStoragePolicyMini(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeStoragePolicyMiniTypeField(val.type) };
}
exports.newSerializeStoragePolicyMini = newSerializeStoragePolicyMini;
function newDeserializeStoragePolicyMini(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeStoragePolicyMiniTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeStoragePolicyMini = newDeserializeStoragePolicyMini;
function newSerializeStoragePolicyAssignmentAssignedToField(val) {
    return { ["id"]: val.id, ["type"]: val.type };
}
exports.newSerializeStoragePolicyAssignmentAssignedToField = newSerializeStoragePolicyAssignmentAssignedToField;
function newDeserializeStoragePolicyAssignmentAssignedToField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    return { id: id, type: type };
}
exports.newDeserializeStoragePolicyAssignmentAssignedToField = newDeserializeStoragePolicyAssignmentAssignedToField;
function newSerializeStoragePolicyAssignment(val) {
    return { ["storage_policy"]: val.storagePolicy == void 0 ? void 0 : newSerializeStoragePolicyMini(val.storagePolicy), ["assigned_to"]: val.assignedTo == void 0 ? void 0 : newSerializeStoragePolicyAssignmentAssignedToField(val.assignedTo) };
}
exports.newSerializeStoragePolicyAssignment = newSerializeStoragePolicyAssignment;
function newDeserializeStoragePolicyAssignment(val) {
    const storagePolicy = val.storage_policy == void 0 ? void 0 : newDeserializeStoragePolicyMini(val.storage_policy);
    const assignedTo = val.assigned_to == void 0 ? void 0 : newDeserializeStoragePolicyAssignmentAssignedToField(val.assigned_to);
    return { storagePolicy: storagePolicy, assignedTo: assignedTo };
}
exports.newDeserializeStoragePolicyAssignment = newDeserializeStoragePolicyAssignment;
function newSerializeStoragePolicyAssignments(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeStoragePolicyAssignment(item);
        }) };
}
exports.newSerializeStoragePolicyAssignments = newSerializeStoragePolicyAssignments;
function newDeserializeStoragePolicyAssignments(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeStoragePolicyAssignment(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeStoragePolicyAssignments = newDeserializeStoragePolicyAssignments;
function newSerializeStoragePolicy(val) {
    const base = newSerializeStoragePolicyMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"StoragePolicy\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name });
}
exports.newSerializeStoragePolicy = newSerializeStoragePolicy;
function newDeserializeStoragePolicy(val) {
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeStoragePolicyMiniTypeField(val.type);
    return { name: name, id: id, type: type };
}
exports.newDeserializeStoragePolicy = newDeserializeStoragePolicy;
function newSerializeStoragePolicies(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeStoragePolicy(item);
        }) };
}
exports.newSerializeStoragePolicies = newSerializeStoragePolicies;
function newDeserializeStoragePolicies(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeStoragePolicy(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeStoragePolicies = newDeserializeStoragePolicies;
function newSerializeTermsOfServiceBaseTypeField(val) {
    return val;
}
exports.newSerializeTermsOfServiceBaseTypeField = newSerializeTermsOfServiceBaseTypeField;
function newDeserializeTermsOfServiceBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TermsOfServiceBaseTypeField\"";
    }
    if (val == "terms_of_service") {
        return "terms_of_service";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTermsOfServiceBaseTypeField = newDeserializeTermsOfServiceBaseTypeField;
function newSerializeTermsOfServiceBase(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeTermsOfServiceBaseTypeField(val.type) };
}
exports.newSerializeTermsOfServiceBase = newSerializeTermsOfServiceBase;
function newDeserializeTermsOfServiceBase(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeTermsOfServiceBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeTermsOfServiceBase = newDeserializeTermsOfServiceBase;
function newSerializeTermsOfServiceStatusField(val) {
    return val;
}
exports.newSerializeTermsOfServiceStatusField = newSerializeTermsOfServiceStatusField;
function newDeserializeTermsOfServiceStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TermsOfServiceStatusField\"";
    }
    if (val == "enabled") {
        return "enabled";
    }
    if (val == "disabled") {
        return "disabled";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTermsOfServiceStatusField = newDeserializeTermsOfServiceStatusField;
function newSerializeTermsOfServiceEnterpriseFieldTypeField(val) {
    return val;
}
exports.newSerializeTermsOfServiceEnterpriseFieldTypeField = newSerializeTermsOfServiceEnterpriseFieldTypeField;
function newDeserializeTermsOfServiceEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TermsOfServiceEnterpriseFieldTypeField\"";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTermsOfServiceEnterpriseFieldTypeField = newDeserializeTermsOfServiceEnterpriseFieldTypeField;
function newSerializeTermsOfServiceEnterpriseField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeTermsOfServiceEnterpriseFieldTypeField(val.type), ["name"]: val.name };
}
exports.newSerializeTermsOfServiceEnterpriseField = newSerializeTermsOfServiceEnterpriseField;
function newDeserializeTermsOfServiceEnterpriseField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeTermsOfServiceEnterpriseFieldTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.newDeserializeTermsOfServiceEnterpriseField = newDeserializeTermsOfServiceEnterpriseField;
function newSerializeTermsOfServiceTosTypeField(val) {
    return val;
}
exports.newSerializeTermsOfServiceTosTypeField = newSerializeTermsOfServiceTosTypeField;
function newDeserializeTermsOfServiceTosTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TermsOfServiceTosTypeField\"";
    }
    if (val == "managed") {
        return "managed";
    }
    if (val == "external") {
        return "external";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTermsOfServiceTosTypeField = newDeserializeTermsOfServiceTosTypeField;
function newSerializeTermsOfService(val) {
    const base = newSerializeTermsOfServiceBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"TermsOfService\"";
    }
    return Object.assign(Object.assign({}, base), { ["status"]: val.status == void 0 ? void 0 : newSerializeTermsOfServiceStatusField(val.status), ["enterprise"]: val.enterprise == void 0 ? void 0 : newSerializeTermsOfServiceEnterpriseField(val.enterprise), ["tos_type"]: val.tosType == void 0 ? void 0 : newSerializeTermsOfServiceTosTypeField(val.tosType), ["text"]: val.text, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt });
}
exports.newSerializeTermsOfService = newSerializeTermsOfService;
function newDeserializeTermsOfService(val) {
    const status = val.status == void 0 ? void 0 : newDeserializeTermsOfServiceStatusField(val.status);
    const enterprise = val.enterprise == void 0 ? void 0 : newDeserializeTermsOfServiceEnterpriseField(val.enterprise);
    const tosType = val.tos_type == void 0 ? void 0 : newDeserializeTermsOfServiceTosTypeField(val.tos_type);
    const text = (0, json_js_1.isJson)(val.text, "string") ? val.text : void 0;
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeTermsOfServiceBaseTypeField(val.type);
    return { status: status, enterprise: enterprise, tosType: tosType, text: text, createdAt: createdAt, modifiedAt: modifiedAt, id: id, type: type };
}
exports.newDeserializeTermsOfService = newDeserializeTermsOfService;
function newSerializeTermsOfServices(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeTermsOfService(item);
        }) };
}
exports.newSerializeTermsOfServices = newSerializeTermsOfServices;
function newDeserializeTermsOfServices(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeTermsOfService(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeTermsOfServices = newDeserializeTermsOfServices;
function newSerializeSignTemplates(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker };
}
exports.newSerializeSignTemplates = newSerializeSignTemplates;
function newDeserializeSignTemplates(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "string") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "string") ? val.prev_marker : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker };
}
exports.newDeserializeSignTemplates = newDeserializeSignTemplates;
function newSerializeUploadPartMini(val) {
    return { ["part_id"]: val.partId, ["offset"]: val.offset, ["size"]: val.size };
}
exports.newSerializeUploadPartMini = newSerializeUploadPartMini;
function newDeserializeUploadPartMini(val) {
    const partId = (0, json_js_1.isJson)(val.part_id, "string") ? val.part_id : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    return { partId: partId, offset: offset, size: size };
}
exports.newDeserializeUploadPartMini = newDeserializeUploadPartMini;
function newSerializeUploadPart(val) {
    const base = newSerializeUploadPartMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"UploadPart\"";
    }
    return Object.assign(Object.assign({}, base), { ["sha1"]: val.sha1 });
}
exports.newSerializeUploadPart = newSerializeUploadPart;
function newDeserializeUploadPart(val) {
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    const partId = (0, json_js_1.isJson)(val.part_id, "string") ? val.part_id : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    return { sha1: sha1, partId: partId, offset: offset, size: size };
}
exports.newDeserializeUploadPart = newDeserializeUploadPart;
function newSerializeUploadPartsOrderFieldDirectionField(val) {
    return val;
}
exports.newSerializeUploadPartsOrderFieldDirectionField = newSerializeUploadPartsOrderFieldDirectionField;
function newDeserializeUploadPartsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UploadPartsOrderFieldDirectionField\"";
    }
    if (val == "ASC") {
        return "ASC";
    }
    if (val == "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeUploadPartsOrderFieldDirectionField = newDeserializeUploadPartsOrderFieldDirectionField;
function newSerializeUploadPartsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction == void 0 ? void 0 : newSerializeUploadPartsOrderFieldDirectionField(val.direction) };
}
exports.newSerializeUploadPartsOrderField = newSerializeUploadPartsOrderField;
function newDeserializeUploadPartsOrderField(val) {
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction == void 0 ? void 0 : newDeserializeUploadPartsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.newDeserializeUploadPartsOrderField = newDeserializeUploadPartsOrderField;
function newSerializeUploadParts(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order == void 0 ? void 0 : val.order.map(function (item) {
            return newSerializeUploadPartsOrderField(item);
        }), ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeUploadPart(item);
        }) };
}
exports.newSerializeUploadParts = newSerializeUploadParts;
function newDeserializeUploadParts(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return newDeserializeUploadPartsOrderField(itm);
    }) : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeUploadPart(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.newDeserializeUploadParts = newDeserializeUploadParts;
function newSerializeUploadedPart(val) {
    return { ["part"]: val.part == void 0 ? void 0 : newSerializeUploadPart(val.part) };
}
exports.newSerializeUploadedPart = newSerializeUploadedPart;
function newDeserializeUploadedPart(val) {
    const part = val.part == void 0 ? void 0 : newDeserializeUploadPart(val.part);
    return { part: part };
}
exports.newDeserializeUploadedPart = newDeserializeUploadedPart;
function newSerializeUploadSessionTypeField(val) {
    return val;
}
exports.newSerializeUploadSessionTypeField = newSerializeUploadSessionTypeField;
function newDeserializeUploadSessionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UploadSessionTypeField\"";
    }
    if (val == "upload_session") {
        return "upload_session";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeUploadSessionTypeField = newDeserializeUploadSessionTypeField;
function newSerializeUploadSessionSessionEndpointsField(val) {
    return { ["upload_part"]: val.uploadPart, ["commit"]: val.commit, ["abort"]: val.abort, ["list_parts"]: val.listParts, ["status"]: val.status, ["log_event"]: val.logEvent };
}
exports.newSerializeUploadSessionSessionEndpointsField = newSerializeUploadSessionSessionEndpointsField;
function newDeserializeUploadSessionSessionEndpointsField(val) {
    const uploadPart = (0, json_js_1.isJson)(val.upload_part, "string") ? val.upload_part : void 0;
    const commit = (0, json_js_1.isJson)(val.commit, "string") ? val.commit : void 0;
    const abort = (0, json_js_1.isJson)(val.abort, "string") ? val.abort : void 0;
    const listParts = (0, json_js_1.isJson)(val.list_parts, "string") ? val.list_parts : void 0;
    const status = (0, json_js_1.isJson)(val.status, "string") ? val.status : void 0;
    const logEvent = (0, json_js_1.isJson)(val.log_event, "string") ? val.log_event : void 0;
    return { uploadPart: uploadPart, commit: commit, abort: abort, listParts: listParts, status: status, logEvent: logEvent };
}
exports.newDeserializeUploadSessionSessionEndpointsField = newDeserializeUploadSessionSessionEndpointsField;
function newSerializeUploadSession(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeUploadSessionTypeField(val.type), ["session_expires_at"]: val.sessionExpiresAt, ["part_size"]: val.partSize, ["total_parts"]: val.totalParts, ["num_parts_processed"]: val.numPartsProcessed, ["session_endpoints"]: val.sessionEndpoints == void 0 ? void 0 : newSerializeUploadSessionSessionEndpointsField(val.sessionEndpoints) };
}
exports.newSerializeUploadSession = newSerializeUploadSession;
function newDeserializeUploadSession(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeUploadSessionTypeField(val.type);
    const sessionExpiresAt = (0, json_js_1.isJson)(val.session_expires_at, "string") ? val.session_expires_at : void 0;
    const partSize = (0, json_js_1.isJson)(val.part_size, "number") ? val.part_size : void 0;
    const totalParts = (0, json_js_1.isJson)(val.total_parts, "number") ? val.total_parts : void 0;
    const numPartsProcessed = (0, json_js_1.isJson)(val.num_parts_processed, "number") ? val.num_parts_processed : void 0;
    const sessionEndpoints = val.session_endpoints == void 0 ? void 0 : newDeserializeUploadSessionSessionEndpointsField(val.session_endpoints);
    return { id: id, type: type, sessionExpiresAt: sessionExpiresAt, partSize: partSize, totalParts: totalParts, numPartsProcessed: numPartsProcessed, sessionEndpoints: sessionEndpoints };
}
exports.newDeserializeUploadSession = newDeserializeUploadSession;
function newSerializeUploadUrl(val) {
    return { ["upload_url"]: val.uploadUrl, ["upload_token"]: val.uploadToken };
}
exports.newSerializeUploadUrl = newSerializeUploadUrl;
function newDeserializeUploadUrl(val) {
    const uploadUrl = (0, json_js_1.isJson)(val.upload_url, "string") ? val.upload_url : void 0;
    const uploadToken = (0, json_js_1.isJson)(val.upload_token, "string") ? val.upload_token : void 0;
    return { uploadUrl: uploadUrl, uploadToken: uploadToken };
}
exports.newDeserializeUploadUrl = newDeserializeUploadUrl;
function newSerializeUserAvatarPicUrlsField(val) {
    return { ["small"]: val.small, ["large"]: val.large, ["preview"]: val.preview };
}
exports.newSerializeUserAvatarPicUrlsField = newSerializeUserAvatarPicUrlsField;
function newDeserializeUserAvatarPicUrlsField(val) {
    const small = (0, json_js_1.isJson)(val.small, "string") ? val.small : void 0;
    const large = (0, json_js_1.isJson)(val.large, "string") ? val.large : void 0;
    const preview = (0, json_js_1.isJson)(val.preview, "string") ? val.preview : void 0;
    return { small: small, large: large, preview: preview };
}
exports.newDeserializeUserAvatarPicUrlsField = newDeserializeUserAvatarPicUrlsField;
function newSerializeUserAvatar(val) {
    return { ["pic_urls"]: val.picUrls == void 0 ? void 0 : newSerializeUserAvatarPicUrlsField(val.picUrls) };
}
exports.newSerializeUserAvatar = newSerializeUserAvatar;
function newDeserializeUserAvatar(val) {
    const picUrls = val.pic_urls == void 0 ? void 0 : newDeserializeUserAvatarPicUrlsField(val.pic_urls);
    return { picUrls: picUrls };
}
exports.newDeserializeUserAvatar = newDeserializeUserAvatar;
function newSerializeUserBaseTypeField(val) {
    return val;
}
exports.newSerializeUserBaseTypeField = newSerializeUserBaseTypeField;
function newDeserializeUserBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UserBaseTypeField\"";
    }
    if (val == "user") {
        return "user";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeUserBaseTypeField = newDeserializeUserBaseTypeField;
function newSerializeUserBase(val) {
    return { ["id"]: val.id, ["type"]: newSerializeUserBaseTypeField(val.type) };
}
exports.newSerializeUserBase = newSerializeUserBase;
function newDeserializeUserBase(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = newDeserializeUserBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeUserBase = newDeserializeUserBase;
function newSerializeUserIntegrationMappings(val) {
    const base = newSerializeUserBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"UserIntegrationMappings\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name, ["login"]: val.login });
}
exports.newSerializeUserIntegrationMappings = newSerializeUserIntegrationMappings;
function newDeserializeUserIntegrationMappings(val) {
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const login = (0, json_js_1.isJson)(val.login, "string") ? val.login : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = newDeserializeUserBaseTypeField(val.type);
    return { name: name, login: login, id: id, type: type };
}
exports.newDeserializeUserIntegrationMappings = newDeserializeUserIntegrationMappings;
function newSerializeUserCollaborations(val) {
    const base = newSerializeUserBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"UserCollaborations\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name, ["login"]: val.login });
}
exports.newSerializeUserCollaborations = newSerializeUserCollaborations;
function newDeserializeUserCollaborations(val) {
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const login = (0, json_js_1.isJson)(val.login, "string") ? val.login : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = newDeserializeUserBaseTypeField(val.type);
    return { name: name, login: login, id: id, type: type };
}
exports.newDeserializeUserCollaborations = newDeserializeUserCollaborations;
function newSerializeUserMini(val) {
    const base = newSerializeUserBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"UserMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name, ["login"]: val.login });
}
exports.newSerializeUserMini = newSerializeUserMini;
function newDeserializeUserMini(val) {
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const login = (0, json_js_1.isJson)(val.login, "string") ? val.login : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = newDeserializeUserBaseTypeField(val.type);
    return { name: name, login: login, id: id, type: type };
}
exports.newDeserializeUserMini = newDeserializeUserMini;
function newSerializeEventSourceItemTypeField(val) {
    return val;
}
exports.newSerializeEventSourceItemTypeField = newSerializeEventSourceItemTypeField;
function newDeserializeEventSourceItemTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"EventSourceItemTypeField\"";
    }
    if (val == "file") {
        return "file";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeEventSourceItemTypeField = newDeserializeEventSourceItemTypeField;
function newSerializeEventSourceClassificationField(val) {
    return { ["name"]: val.name };
}
exports.newSerializeEventSourceClassificationField = newSerializeEventSourceClassificationField;
function newDeserializeEventSourceClassificationField(val) {
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { name: name };
}
exports.newDeserializeEventSourceClassificationField = newDeserializeEventSourceClassificationField;
function newSerializeEventSource(val) {
    return { ["item_type"]: newSerializeEventSourceItemTypeField(val.itemType), ["item_id"]: val.itemId, ["item_name"]: val.itemName, ["classification"]: val.classification == void 0 ? void 0 : newSerializeEventSourceClassificationField(val.classification), ["parent"]: val.parent == void 0 ? void 0 : newSerializeFolderMini(val.parent), ["owned_by"]: val.ownedBy == void 0 ? void 0 : newSerializeUserMini(val.ownedBy) };
}
exports.newSerializeEventSource = newSerializeEventSource;
function newDeserializeEventSource(val) {
    const itemType = newDeserializeEventSourceItemTypeField(val.item_type);
    const itemId = val.item_id;
    const itemName = val.item_name;
    const classification = val.classification == void 0 ? void 0 : newDeserializeEventSourceClassificationField(val.classification);
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const ownedBy = val.owned_by == void 0 ? void 0 : newDeserializeUserMini(val.owned_by);
    return { itemType: itemType, itemId: itemId, itemName: itemName, classification: classification, parent: parent, ownedBy: ownedBy };
}
exports.newDeserializeEventSource = newDeserializeEventSource;
function newSerializeUserStatusField(val) {
    return val;
}
exports.newSerializeUserStatusField = newSerializeUserStatusField;
function newDeserializeUserStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UserStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "inactive") {
        return "inactive";
    }
    if (val == "cannot_delete_edit") {
        return "cannot_delete_edit";
    }
    if (val == "cannot_delete_edit_upload") {
        return "cannot_delete_edit_upload";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeUserStatusField = newDeserializeUserStatusField;
function newSerializeUserNotificationEmailField(val) {
    return { ["email"]: val.email, ["is_confirmed"]: val.isConfirmed };
}
exports.newSerializeUserNotificationEmailField = newSerializeUserNotificationEmailField;
function newDeserializeUserNotificationEmailField(val) {
    const email = (0, json_js_1.isJson)(val.email, "string") ? val.email : void 0;
    const isConfirmed = (0, json_js_1.isJson)(val.is_confirmed, "boolean") ? val.is_confirmed : void 0;
    return { email: email, isConfirmed: isConfirmed };
}
exports.newDeserializeUserNotificationEmailField = newDeserializeUserNotificationEmailField;
function newSerializeUser(val) {
    const base = newSerializeUserMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"User\"";
    }
    return Object.assign(Object.assign({}, base), { ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["language"]: val.language, ["timezone"]: val.timezone, ["space_amount"]: val.spaceAmount, ["space_used"]: val.spaceUsed, ["max_upload_size"]: val.maxUploadSize, ["status"]: val.status == void 0 ? void 0 : newSerializeUserStatusField(val.status), ["job_title"]: val.jobTitle, ["phone"]: val.phone, ["address"]: val.address, ["avatar_url"]: val.avatarUrl, ["notification_email"]: val.notificationEmail == void 0 ? void 0 : newSerializeUserNotificationEmailField(val.notificationEmail) });
}
exports.newSerializeUser = newSerializeUser;
function newDeserializeUser(val) {
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const language = (0, json_js_1.isJson)(val.language, "string") ? val.language : void 0;
    const timezone = (0, json_js_1.isJson)(val.timezone, "string") ? val.timezone : void 0;
    const spaceAmount = (0, json_js_1.isJson)(val.space_amount, "number") ? val.space_amount : void 0;
    const spaceUsed = (0, json_js_1.isJson)(val.space_used, "number") ? val.space_used : void 0;
    const maxUploadSize = (0, json_js_1.isJson)(val.max_upload_size, "number") ? val.max_upload_size : void 0;
    const status = val.status == void 0 ? void 0 : newDeserializeUserStatusField(val.status);
    const jobTitle = (0, json_js_1.isJson)(val.job_title, "string") ? val.job_title : void 0;
    const phone = (0, json_js_1.isJson)(val.phone, "string") ? val.phone : void 0;
    const address = (0, json_js_1.isJson)(val.address, "string") ? val.address : void 0;
    const avatarUrl = (0, json_js_1.isJson)(val.avatar_url, "string") ? val.avatar_url : void 0;
    const notificationEmail = val.notification_email == void 0 ? void 0 : newDeserializeUserNotificationEmailField(val.notification_email);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const login = (0, json_js_1.isJson)(val.login, "string") ? val.login : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = newDeserializeUserBaseTypeField(val.type);
    return { createdAt: createdAt, modifiedAt: modifiedAt, language: language, timezone: timezone, spaceAmount: spaceAmount, spaceUsed: spaceUsed, maxUploadSize: maxUploadSize, status: status, jobTitle: jobTitle, phone: phone, address: address, avatarUrl: avatarUrl, notificationEmail: notificationEmail, name: name, login: login, id: id, type: type };
}
exports.newDeserializeUser = newDeserializeUser;
function newSerializeUsersOrderFieldDirectionField(val) {
    return val;
}
exports.newSerializeUsersOrderFieldDirectionField = newSerializeUsersOrderFieldDirectionField;
function newDeserializeUsersOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UsersOrderFieldDirectionField\"";
    }
    if (val == "ASC") {
        return "ASC";
    }
    if (val == "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeUsersOrderFieldDirectionField = newDeserializeUsersOrderFieldDirectionField;
function newSerializeUsersOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction == void 0 ? void 0 : newSerializeUsersOrderFieldDirectionField(val.direction) };
}
exports.newSerializeUsersOrderField = newSerializeUsersOrderField;
function newDeserializeUsersOrderField(val) {
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction == void 0 ? void 0 : newDeserializeUsersOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.newDeserializeUsersOrderField = newDeserializeUsersOrderField;
function newSerializeUsers(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order == void 0 ? void 0 : val.order.map(function (item) {
            return newSerializeUsersOrderField(item);
        }), ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeUser(item);
        }) };
}
exports.newSerializeUsers = newSerializeUsers;
function newDeserializeUsers(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return newDeserializeUsersOrderField(itm);
    }) : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeUser(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.newDeserializeUsers = newDeserializeUsers;
function newSerializeTrashWebLinkRestoredTypeField(val) {
    return val;
}
exports.newSerializeTrashWebLinkRestoredTypeField = newSerializeTrashWebLinkRestoredTypeField;
function newDeserializeTrashWebLinkRestoredTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashWebLinkRestoredTypeField\"";
    }
    if (val == "web_link") {
        return "web_link";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashWebLinkRestoredTypeField = newDeserializeTrashWebLinkRestoredTypeField;
function newSerializeTrashWebLinkRestoredPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return newSerializeFolderMini(item);
        }) };
}
exports.newSerializeTrashWebLinkRestoredPathCollectionField = newSerializeTrashWebLinkRestoredPathCollectionField;
function newDeserializeTrashWebLinkRestoredPathCollectionField(val) {
    const totalCount = val.total_count;
    const entries = val.entries.map(function (itm) {
        return newDeserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeTrashWebLinkRestoredPathCollectionField = newDeserializeTrashWebLinkRestoredPathCollectionField;
function newSerializeTrashWebLinkRestoredItemStatusField(val) {
    return val;
}
exports.newSerializeTrashWebLinkRestoredItemStatusField = newSerializeTrashWebLinkRestoredItemStatusField;
function newDeserializeTrashWebLinkRestoredItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashWebLinkRestoredItemStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "trashed") {
        return "trashed";
    }
    if (val == "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashWebLinkRestoredItemStatusField = newDeserializeTrashWebLinkRestoredItemStatusField;
function newSerializeTrashWebLinkRestored(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeTrashWebLinkRestoredTypeField(val.type), ["id"]: val.id, ["sequence_id"]: val.sequenceId, ["etag"]: val.etag, ["name"]: val.name, ["url"]: val.url, ["parent"]: val.parent == void 0 ? void 0 : newSerializeFolderMini(val.parent), ["description"]: val.description, ["path_collection"]: newSerializeTrashWebLinkRestoredPathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["modified_by"]: val.modifiedBy == void 0 ? void 0 : newSerializeUserMini(val.modifiedBy), ["owned_by"]: val.ownedBy == void 0 ? void 0 : newSerializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["item_status"]: val.itemStatus == void 0 ? void 0 : newSerializeTrashWebLinkRestoredItemStatusField(val.itemStatus) };
}
exports.newSerializeTrashWebLinkRestored = newSerializeTrashWebLinkRestored;
function newDeserializeTrashWebLinkRestored(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeTrashWebLinkRestoredTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const sequenceId = val.sequence_id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const pathCollection = newDeserializeTrashWebLinkRestoredPathCollectionField(val.path_collection);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeUserMini(val.modified_by);
    const ownedBy = val.owned_by == void 0 ? void 0 : newDeserializeUserMini(val.owned_by);
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    const itemStatus = val.item_status == void 0 ? void 0 : newDeserializeTrashWebLinkRestoredItemStatusField(val.item_status);
    return { type: type, id: id, sequenceId: sequenceId, etag: etag, name: name, url: url, parent: parent, description: description, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, itemStatus: itemStatus };
}
exports.newDeserializeTrashWebLinkRestored = newDeserializeTrashWebLinkRestored;
function newSerializeTrashFolderRestoredTypeField(val) {
    return val;
}
exports.newSerializeTrashFolderRestoredTypeField = newSerializeTrashFolderRestoredTypeField;
function newDeserializeTrashFolderRestoredTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFolderRestoredTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashFolderRestoredTypeField = newDeserializeTrashFolderRestoredTypeField;
function newSerializeTrashFolderRestoredPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return newSerializeFolderMini(item);
        }) };
}
exports.newSerializeTrashFolderRestoredPathCollectionField = newSerializeTrashFolderRestoredPathCollectionField;
function newDeserializeTrashFolderRestoredPathCollectionField(val) {
    const totalCount = val.total_count;
    const entries = val.entries.map(function (itm) {
        return newDeserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeTrashFolderRestoredPathCollectionField = newDeserializeTrashFolderRestoredPathCollectionField;
function newSerializeTrashFolderRestoredItemStatusField(val) {
    return val;
}
exports.newSerializeTrashFolderRestoredItemStatusField = newSerializeTrashFolderRestoredItemStatusField;
function newDeserializeTrashFolderRestoredItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFolderRestoredItemStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "trashed") {
        return "trashed";
    }
    if (val == "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashFolderRestoredItemStatusField = newDeserializeTrashFolderRestoredItemStatusField;
function newSerializeTrashFolderRestored(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: val.type == void 0 ? void 0 : newSerializeTrashFolderRestoredTypeField(val.type), ["sequence_id"]: val.sequenceId, ["name"]: val.name, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["description"]: val.description, ["size"]: val.size, ["path_collection"]: val.pathCollection == void 0 ? void 0 : newSerializeTrashFolderRestoredPathCollectionField(val.pathCollection), ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["modified_by"]: val.modifiedBy == void 0 ? void 0 : newSerializeUserMini(val.modifiedBy), ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["owned_by"]: val.ownedBy == void 0 ? void 0 : newSerializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["folder_upload_email"]: val.folderUploadEmail, ["parent"]: val.parent == void 0 ? void 0 : newSerializeFolderMini(val.parent), ["item_status"]: val.itemStatus == void 0 ? void 0 : newSerializeTrashFolderRestoredItemStatusField(val.itemStatus) };
}
exports.newSerializeTrashFolderRestored = newSerializeTrashFolderRestored;
function newDeserializeTrashFolderRestored(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeTrashFolderRestoredTypeField(val.type);
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    const pathCollection = val.path_collection == void 0 ? void 0 : newDeserializeTrashFolderRestoredPathCollectionField(val.path_collection);
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeUserMini(val.modified_by);
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const ownedBy = val.owned_by == void 0 ? void 0 : newDeserializeUserMini(val.owned_by);
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    const folderUploadEmail = (0, json_js_1.isJson)(val.folder_upload_email, "string") ? val.folder_upload_email : void 0;
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const itemStatus = val.item_status == void 0 ? void 0 : newDeserializeTrashFolderRestoredItemStatusField(val.item_status);
    return { id: id, etag: etag, type: type, sequenceId: sequenceId, name: name, createdAt: createdAt, modifiedAt: modifiedAt, description: description, size: size, pathCollection: pathCollection, createdBy: createdBy, modifiedBy: modifiedBy, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, ownedBy: ownedBy, sharedLink: sharedLink, folderUploadEmail: folderUploadEmail, parent: parent, itemStatus: itemStatus };
}
exports.newDeserializeTrashFolderRestored = newDeserializeTrashFolderRestored;
function newSerializeTrashFileRestoredTypeField(val) {
    return val;
}
exports.newSerializeTrashFileRestoredTypeField = newSerializeTrashFileRestoredTypeField;
function newDeserializeTrashFileRestoredTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFileRestoredTypeField\"";
    }
    if (val == "file") {
        return "file";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashFileRestoredTypeField = newDeserializeTrashFileRestoredTypeField;
function newSerializeTrashFileRestoredPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return newSerializeFolderMini(item);
        }) };
}
exports.newSerializeTrashFileRestoredPathCollectionField = newSerializeTrashFileRestoredPathCollectionField;
function newDeserializeTrashFileRestoredPathCollectionField(val) {
    const totalCount = val.total_count;
    const entries = val.entries.map(function (itm) {
        return newDeserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeTrashFileRestoredPathCollectionField = newDeserializeTrashFileRestoredPathCollectionField;
function newSerializeTrashFileRestoredItemStatusField(val) {
    return val;
}
exports.newSerializeTrashFileRestoredItemStatusField = newSerializeTrashFileRestoredItemStatusField;
function newDeserializeTrashFileRestoredItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFileRestoredItemStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "trashed") {
        return "trashed";
    }
    if (val == "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashFileRestoredItemStatusField = newDeserializeTrashFileRestoredItemStatusField;
function newSerializeTrashFileRestored(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: newSerializeTrashFileRestoredTypeField(val.type), ["sequence_id"]: val.sequenceId, ["name"]: val.name, ["sha1"]: val.sha1, ["file_version"]: val.fileVersion == void 0 ? void 0 : newSerializeFileVersionMini(val.fileVersion), ["description"]: val.description, ["size"]: val.size, ["path_collection"]: newSerializeTrashFileRestoredPathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["modified_by"]: newSerializeUserMini(val.modifiedBy), ["owned_by"]: newSerializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["parent"]: val.parent == void 0 ? void 0 : newSerializeFolderMini(val.parent), ["item_status"]: newSerializeTrashFileRestoredItemStatusField(val.itemStatus) };
}
exports.newSerializeTrashFileRestored = newSerializeTrashFileRestored;
function newDeserializeTrashFileRestored(val) {
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeTrashFileRestoredTypeField(val.type);
    const sequenceId = val.sequence_id;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const sha1 = val.sha1;
    const fileVersion = val.file_version == void 0 ? void 0 : newDeserializeFileVersionMini(val.file_version);
    const description = val.description;
    const size = val.size;
    const pathCollection = newDeserializeTrashFileRestoredPathCollectionField(val.path_collection);
    const createdAt = val.created_at;
    const modifiedAt = val.modified_at;
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const modifiedBy = newDeserializeUserMini(val.modified_by);
    const ownedBy = newDeserializeUserMini(val.owned_by);
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const itemStatus = newDeserializeTrashFileRestoredItemStatusField(val.item_status);
    return { id: id, etag: etag, type: type, sequenceId: sequenceId, name: name, sha1: sha1, fileVersion: fileVersion, description: description, size: size, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, parent: parent, itemStatus: itemStatus };
}
exports.newDeserializeTrashFileRestored = newDeserializeTrashFileRestored;
function newSerializeTrashWebLinkTypeField(val) {
    return val;
}
exports.newSerializeTrashWebLinkTypeField = newSerializeTrashWebLinkTypeField;
function newDeserializeTrashWebLinkTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashWebLinkTypeField\"";
    }
    if (val == "web_link") {
        return "web_link";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashWebLinkTypeField = newDeserializeTrashWebLinkTypeField;
function newSerializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField(val) {
    return val;
}
exports.newSerializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField = newSerializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField;
function newDeserializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashWebLinkPathCollectionFieldEntriesFieldTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField = newDeserializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField;
function newSerializeTrashWebLinkPathCollectionFieldEntriesField(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField(val.type), ["id"]: val.id, ["sequence_id"]: val.sequenceId, ["etag"]: val.etag, ["name"]: val.name };
}
exports.newSerializeTrashWebLinkPathCollectionFieldEntriesField = newSerializeTrashWebLinkPathCollectionFieldEntriesField;
function newDeserializeTrashWebLinkPathCollectionFieldEntriesField(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { type: type, id: id, sequenceId: sequenceId, etag: etag, name: name };
}
exports.newDeserializeTrashWebLinkPathCollectionFieldEntriesField = newDeserializeTrashWebLinkPathCollectionFieldEntriesField;
function newSerializeTrashWebLinkPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return newSerializeTrashWebLinkPathCollectionFieldEntriesField(item);
        }) };
}
exports.newSerializeTrashWebLinkPathCollectionField = newSerializeTrashWebLinkPathCollectionField;
function newDeserializeTrashWebLinkPathCollectionField(val) {
    const totalCount = val.total_count;
    const entries = val.entries.map(function (itm) {
        return newDeserializeTrashWebLinkPathCollectionFieldEntriesField(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeTrashWebLinkPathCollectionField = newDeserializeTrashWebLinkPathCollectionField;
function newSerializeTrashWebLinkItemStatusField(val) {
    return val;
}
exports.newSerializeTrashWebLinkItemStatusField = newSerializeTrashWebLinkItemStatusField;
function newDeserializeTrashWebLinkItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashWebLinkItemStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "trashed") {
        return "trashed";
    }
    if (val == "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashWebLinkItemStatusField = newDeserializeTrashWebLinkItemStatusField;
function newSerializeTrashWebLink(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeTrashWebLinkTypeField(val.type), ["id"]: val.id, ["sequence_id"]: val.sequenceId, ["etag"]: val.etag, ["name"]: val.name, ["url"]: val.url, ["parent"]: val.parent == void 0 ? void 0 : newSerializeFolderMini(val.parent), ["description"]: val.description, ["path_collection"]: val.pathCollection == void 0 ? void 0 : newSerializeTrashWebLinkPathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["modified_by"]: val.modifiedBy == void 0 ? void 0 : newSerializeUserMini(val.modifiedBy), ["owned_by"]: val.ownedBy == void 0 ? void 0 : newSerializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["item_status"]: val.itemStatus == void 0 ? void 0 : newSerializeTrashWebLinkItemStatusField(val.itemStatus) };
}
exports.newSerializeTrashWebLink = newSerializeTrashWebLink;
function newDeserializeTrashWebLink(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeTrashWebLinkTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const pathCollection = val.path_collection == void 0 ? void 0 : newDeserializeTrashWebLinkPathCollectionField(val.path_collection);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeUserMini(val.modified_by);
    const ownedBy = val.owned_by == void 0 ? void 0 : newDeserializeUserMini(val.owned_by);
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    const itemStatus = val.item_status == void 0 ? void 0 : newDeserializeTrashWebLinkItemStatusField(val.item_status);
    return { type: type, id: id, sequenceId: sequenceId, etag: etag, name: name, url: url, parent: parent, description: description, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, itemStatus: itemStatus };
}
exports.newDeserializeTrashWebLink = newDeserializeTrashWebLink;
function newSerializeTrashFolderTypeField(val) {
    return val;
}
exports.newSerializeTrashFolderTypeField = newSerializeTrashFolderTypeField;
function newDeserializeTrashFolderTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFolderTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashFolderTypeField = newDeserializeTrashFolderTypeField;
function newSerializeTrashFolderPathCollectionFieldEntriesFieldTypeField(val) {
    return val;
}
exports.newSerializeTrashFolderPathCollectionFieldEntriesFieldTypeField = newSerializeTrashFolderPathCollectionFieldEntriesFieldTypeField;
function newDeserializeTrashFolderPathCollectionFieldEntriesFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFolderPathCollectionFieldEntriesFieldTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashFolderPathCollectionFieldEntriesFieldTypeField = newDeserializeTrashFolderPathCollectionFieldEntriesFieldTypeField;
function newSerializeTrashFolderPathCollectionFieldEntriesField(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeTrashFolderPathCollectionFieldEntriesFieldTypeField(val.type), ["id"]: val.id, ["sequence_id"]: val.sequenceId, ["etag"]: val.etag, ["name"]: val.name };
}
exports.newSerializeTrashFolderPathCollectionFieldEntriesField = newSerializeTrashFolderPathCollectionFieldEntriesField;
function newDeserializeTrashFolderPathCollectionFieldEntriesField(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeTrashFolderPathCollectionFieldEntriesFieldTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { type: type, id: id, sequenceId: sequenceId, etag: etag, name: name };
}
exports.newDeserializeTrashFolderPathCollectionFieldEntriesField = newDeserializeTrashFolderPathCollectionFieldEntriesField;
function newSerializeTrashFolderPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return newSerializeTrashFolderPathCollectionFieldEntriesField(item);
        }) };
}
exports.newSerializeTrashFolderPathCollectionField = newSerializeTrashFolderPathCollectionField;
function newDeserializeTrashFolderPathCollectionField(val) {
    const totalCount = val.total_count;
    const entries = val.entries.map(function (itm) {
        return newDeserializeTrashFolderPathCollectionFieldEntriesField(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeTrashFolderPathCollectionField = newDeserializeTrashFolderPathCollectionField;
function newSerializeTrashFolderItemStatusField(val) {
    return val;
}
exports.newSerializeTrashFolderItemStatusField = newSerializeTrashFolderItemStatusField;
function newDeserializeTrashFolderItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFolderItemStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "trashed") {
        return "trashed";
    }
    if (val == "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashFolderItemStatusField = newDeserializeTrashFolderItemStatusField;
function newSerializeTrashFolder(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: newSerializeTrashFolderTypeField(val.type), ["sequence_id"]: val.sequenceId, ["name"]: val.name, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["description"]: val.description, ["size"]: val.size, ["path_collection"]: newSerializeTrashFolderPathCollectionField(val.pathCollection), ["created_by"]: newSerializeUserMini(val.createdBy), ["modified_by"]: newSerializeUserMini(val.modifiedBy), ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["owned_by"]: newSerializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["folder_upload_email"]: val.folderUploadEmail, ["parent"]: val.parent == void 0 ? void 0 : newSerializeFolderMini(val.parent), ["item_status"]: newSerializeTrashFolderItemStatusField(val.itemStatus) };
}
exports.newSerializeTrashFolder = newSerializeTrashFolder;
function newDeserializeTrashFolder(val) {
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeTrashFolderTypeField(val.type);
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const name = val.name;
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const description = val.description;
    const size = val.size;
    const pathCollection = newDeserializeTrashFolderPathCollectionField(val.path_collection);
    const createdBy = newDeserializeUserMini(val.created_by);
    const modifiedBy = newDeserializeUserMini(val.modified_by);
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const ownedBy = newDeserializeUserMini(val.owned_by);
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    const folderUploadEmail = (0, json_js_1.isJson)(val.folder_upload_email, "string") ? val.folder_upload_email : void 0;
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const itemStatus = newDeserializeTrashFolderItemStatusField(val.item_status);
    return { id: id, etag: etag, type: type, sequenceId: sequenceId, name: name, createdAt: createdAt, modifiedAt: modifiedAt, description: description, size: size, pathCollection: pathCollection, createdBy: createdBy, modifiedBy: modifiedBy, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, ownedBy: ownedBy, sharedLink: sharedLink, folderUploadEmail: folderUploadEmail, parent: parent, itemStatus: itemStatus };
}
exports.newDeserializeTrashFolder = newDeserializeTrashFolder;
function newSerializeTrashFileTypeField(val) {
    return val;
}
exports.newSerializeTrashFileTypeField = newSerializeTrashFileTypeField;
function newDeserializeTrashFileTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFileTypeField\"";
    }
    if (val == "file") {
        return "file";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashFileTypeField = newDeserializeTrashFileTypeField;
function newSerializeTrashFilePathCollectionFieldEntriesFieldTypeField(val) {
    return val;
}
exports.newSerializeTrashFilePathCollectionFieldEntriesFieldTypeField = newSerializeTrashFilePathCollectionFieldEntriesFieldTypeField;
function newDeserializeTrashFilePathCollectionFieldEntriesFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFilePathCollectionFieldEntriesFieldTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashFilePathCollectionFieldEntriesFieldTypeField = newDeserializeTrashFilePathCollectionFieldEntriesFieldTypeField;
function newSerializeTrashFilePathCollectionFieldEntriesField(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeTrashFilePathCollectionFieldEntriesFieldTypeField(val.type), ["id"]: val.id, ["sequence_id"]: val.sequenceId, ["etag"]: val.etag, ["name"]: val.name };
}
exports.newSerializeTrashFilePathCollectionFieldEntriesField = newSerializeTrashFilePathCollectionFieldEntriesField;
function newDeserializeTrashFilePathCollectionFieldEntriesField(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeTrashFilePathCollectionFieldEntriesFieldTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { type: type, id: id, sequenceId: sequenceId, etag: etag, name: name };
}
exports.newDeserializeTrashFilePathCollectionFieldEntriesField = newDeserializeTrashFilePathCollectionFieldEntriesField;
function newSerializeTrashFilePathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return newSerializeTrashFilePathCollectionFieldEntriesField(item);
        }) };
}
exports.newSerializeTrashFilePathCollectionField = newSerializeTrashFilePathCollectionField;
function newDeserializeTrashFilePathCollectionField(val) {
    const totalCount = val.total_count;
    const entries = val.entries.map(function (itm) {
        return newDeserializeTrashFilePathCollectionFieldEntriesField(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeTrashFilePathCollectionField = newDeserializeTrashFilePathCollectionField;
function newSerializeTrashFileItemStatusField(val) {
    return val;
}
exports.newSerializeTrashFileItemStatusField = newSerializeTrashFileItemStatusField;
function newDeserializeTrashFileItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFileItemStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "trashed") {
        return "trashed";
    }
    if (val == "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrashFileItemStatusField = newDeserializeTrashFileItemStatusField;
function newSerializeTrashFile(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: newSerializeTrashFileTypeField(val.type), ["sequence_id"]: val.sequenceId, ["name"]: val.name, ["sha1"]: val.sha1, ["file_version"]: val.fileVersion == void 0 ? void 0 : newSerializeFileVersionMini(val.fileVersion), ["description"]: val.description, ["size"]: val.size, ["path_collection"]: newSerializeTrashFilePathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["modified_by"]: newSerializeUserMini(val.modifiedBy), ["owned_by"]: newSerializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["parent"]: val.parent == void 0 ? void 0 : newSerializeFolderMini(val.parent), ["item_status"]: newSerializeTrashFileItemStatusField(val.itemStatus) };
}
exports.newSerializeTrashFile = newSerializeTrashFile;
function newDeserializeTrashFile(val) {
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeTrashFileTypeField(val.type);
    const sequenceId = val.sequence_id;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const sha1 = val.sha1;
    const fileVersion = val.file_version == void 0 ? void 0 : newDeserializeFileVersionMini(val.file_version);
    const description = val.description;
    const size = val.size;
    const pathCollection = newDeserializeTrashFilePathCollectionField(val.path_collection);
    const createdAt = val.created_at;
    const modifiedAt = val.modified_at;
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const modifiedBy = newDeserializeUserMini(val.modified_by);
    const ownedBy = newDeserializeUserMini(val.owned_by);
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const itemStatus = newDeserializeTrashFileItemStatusField(val.item_status);
    return { id: id, etag: etag, type: type, sequenceId: sequenceId, name: name, sha1: sha1, fileVersion: fileVersion, description: description, size: size, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, parent: parent, itemStatus: itemStatus };
}
exports.newDeserializeTrashFile = newDeserializeTrashFile;
function newSerializeTermsOfServiceUserStatusTypeField(val) {
    return val;
}
exports.newSerializeTermsOfServiceUserStatusTypeField = newSerializeTermsOfServiceUserStatusTypeField;
function newDeserializeTermsOfServiceUserStatusTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TermsOfServiceUserStatusTypeField\"";
    }
    if (val == "terms_of_service_user_status") {
        return "terms_of_service_user_status";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTermsOfServiceUserStatusTypeField = newDeserializeTermsOfServiceUserStatusTypeField;
function newSerializeTermsOfServiceUserStatus(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeTermsOfServiceUserStatusTypeField(val.type), ["tos"]: val.tos == void 0 ? void 0 : newSerializeTermsOfServiceBase(val.tos), ["user"]: val.user == void 0 ? void 0 : newSerializeUserMini(val.user), ["is_accepted"]: val.isAccepted, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt };
}
exports.newSerializeTermsOfServiceUserStatus = newSerializeTermsOfServiceUserStatus;
function newDeserializeTermsOfServiceUserStatus(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeTermsOfServiceUserStatusTypeField(val.type);
    const tos = val.tos == void 0 ? void 0 : newDeserializeTermsOfServiceBase(val.tos);
    const user = val.user == void 0 ? void 0 : newDeserializeUserMini(val.user);
    const isAccepted = (0, json_js_1.isJson)(val.is_accepted, "boolean") ? val.is_accepted : void 0;
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    return { id: id, type: type, tos: tos, user: user, isAccepted: isAccepted, createdAt: createdAt, modifiedAt: modifiedAt };
}
exports.newDeserializeTermsOfServiceUserStatus = newDeserializeTermsOfServiceUserStatus;
function newSerializeTermsOfServiceUserStatuses(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeTermsOfServiceUserStatus(item);
        }) };
}
exports.newSerializeTermsOfServiceUserStatuses = newSerializeTermsOfServiceUserStatuses;
function newDeserializeTermsOfServiceUserStatuses(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeTermsOfServiceUserStatus(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeTermsOfServiceUserStatuses = newDeserializeTermsOfServiceUserStatuses;
function newSerializeTaskAssignmentTypeField(val) {
    return val;
}
exports.newSerializeTaskAssignmentTypeField = newSerializeTaskAssignmentTypeField;
function newDeserializeTaskAssignmentTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TaskAssignmentTypeField\"";
    }
    if (val == "task_assignment") {
        return "task_assignment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTaskAssignmentTypeField = newDeserializeTaskAssignmentTypeField;
function newSerializeTaskAssignmentResolutionStateField(val) {
    return val;
}
exports.newSerializeTaskAssignmentResolutionStateField = newSerializeTaskAssignmentResolutionStateField;
function newDeserializeTaskAssignmentResolutionStateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TaskAssignmentResolutionStateField\"";
    }
    if (val == "completed") {
        return "completed";
    }
    if (val == "incomplete") {
        return "incomplete";
    }
    if (val == "approved") {
        return "approved";
    }
    if (val == "rejected") {
        return "rejected";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTaskAssignmentResolutionStateField = newDeserializeTaskAssignmentResolutionStateField;
function newSerializeTaskAssignment(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeTaskAssignmentTypeField(val.type), ["item"]: val.item == void 0 ? void 0 : newSerializeFileMini(val.item), ["assigned_to"]: val.assignedTo == void 0 ? void 0 : newSerializeUserMini(val.assignedTo), ["message"]: val.message, ["completed_at"]: val.completedAt, ["assigned_at"]: val.assignedAt, ["reminded_at"]: val.remindedAt, ["resolution_state"]: val.resolutionState == void 0 ? void 0 : newSerializeTaskAssignmentResolutionStateField(val.resolutionState), ["assigned_by"]: val.assignedBy == void 0 ? void 0 : newSerializeUserMini(val.assignedBy) };
}
exports.newSerializeTaskAssignment = newSerializeTaskAssignment;
function newDeserializeTaskAssignment(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeTaskAssignmentTypeField(val.type);
    const item = val.item == void 0 ? void 0 : newDeserializeFileMini(val.item);
    const assignedTo = val.assigned_to == void 0 ? void 0 : newDeserializeUserMini(val.assigned_to);
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    const completedAt = (0, json_js_1.isJson)(val.completed_at, "string") ? val.completed_at : void 0;
    const assignedAt = (0, json_js_1.isJson)(val.assigned_at, "string") ? val.assigned_at : void 0;
    const remindedAt = (0, json_js_1.isJson)(val.reminded_at, "string") ? val.reminded_at : void 0;
    const resolutionState = val.resolution_state == void 0 ? void 0 : newDeserializeTaskAssignmentResolutionStateField(val.resolution_state);
    const assignedBy = val.assigned_by == void 0 ? void 0 : newDeserializeUserMini(val.assigned_by);
    return { id: id, type: type, item: item, assignedTo: assignedTo, message: message, completedAt: completedAt, assignedAt: assignedAt, remindedAt: remindedAt, resolutionState: resolutionState, assignedBy: assignedBy };
}
exports.newDeserializeTaskAssignment = newDeserializeTaskAssignment;
function newSerializeTaskAssignments(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeTaskAssignment(item);
        }) };
}
exports.newSerializeTaskAssignments = newSerializeTaskAssignments;
function newDeserializeTaskAssignments(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeTaskAssignment(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeTaskAssignments = newDeserializeTaskAssignments;
function newSerializeTaskTypeField(val) {
    return val;
}
exports.newSerializeTaskTypeField = newSerializeTaskTypeField;
function newDeserializeTaskTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TaskTypeField\"";
    }
    if (val == "task") {
        return "task";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTaskTypeField = newDeserializeTaskTypeField;
function newSerializeTaskActionField(val) {
    return val;
}
exports.newSerializeTaskActionField = newSerializeTaskActionField;
function newDeserializeTaskActionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TaskActionField\"";
    }
    if (val == "review") {
        return "review";
    }
    if (val == "complete") {
        return "complete";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTaskActionField = newDeserializeTaskActionField;
function newSerializeTaskCompletionRuleField(val) {
    return val;
}
exports.newSerializeTaskCompletionRuleField = newSerializeTaskCompletionRuleField;
function newDeserializeTaskCompletionRuleField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TaskCompletionRuleField\"";
    }
    if (val == "all_assignees") {
        return "all_assignees";
    }
    if (val == "any_assignee") {
        return "any_assignee";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTaskCompletionRuleField = newDeserializeTaskCompletionRuleField;
function newSerializeTask(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeTaskTypeField(val.type), ["item"]: val.item == void 0 ? void 0 : newSerializeFileMini(val.item), ["due_at"]: val.dueAt, ["action"]: val.action == void 0 ? void 0 : newSerializeTaskActionField(val.action), ["message"]: val.message, ["task_assignment_collection"]: val.taskAssignmentCollection == void 0 ? void 0 : newSerializeTaskAssignments(val.taskAssignmentCollection), ["is_completed"]: val.isCompleted, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["completion_rule"]: val.completionRule == void 0 ? void 0 : newSerializeTaskCompletionRuleField(val.completionRule) };
}
exports.newSerializeTask = newSerializeTask;
function newDeserializeTask(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeTaskTypeField(val.type);
    const item = val.item == void 0 ? void 0 : newDeserializeFileMini(val.item);
    const dueAt = (0, json_js_1.isJson)(val.due_at, "string") ? val.due_at : void 0;
    const action = val.action == void 0 ? void 0 : newDeserializeTaskActionField(val.action);
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    const taskAssignmentCollection = val.task_assignment_collection == void 0 ? void 0 : newDeserializeTaskAssignments(val.task_assignment_collection);
    const isCompleted = (0, json_js_1.isJson)(val.is_completed, "boolean") ? val.is_completed : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const completionRule = val.completion_rule == void 0 ? void 0 : newDeserializeTaskCompletionRuleField(val.completion_rule);
    return { id: id, type: type, item: item, dueAt: dueAt, action: action, message: message, taskAssignmentCollection: taskAssignmentCollection, isCompleted: isCompleted, createdBy: createdBy, createdAt: createdAt, completionRule: completionRule };
}
exports.newDeserializeTask = newDeserializeTask;
function newSerializeTasks(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeTask(item);
        }) };
}
exports.newSerializeTasks = newSerializeTasks;
function newDeserializeTasks(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeTask(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeTasks = newDeserializeTasks;
function newSerializeRetentionPolicyAssignmentTypeField(val) {
    return val;
}
exports.newSerializeRetentionPolicyAssignmentTypeField = newSerializeRetentionPolicyAssignmentTypeField;
function newDeserializeRetentionPolicyAssignmentTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyAssignmentTypeField\"";
    }
    if (val == "retention_policy_assignment") {
        return "retention_policy_assignment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeRetentionPolicyAssignmentTypeField = newDeserializeRetentionPolicyAssignmentTypeField;
function newSerializeRetentionPolicyAssignmentAssignedToFieldTypeField(val) {
    return val;
}
exports.newSerializeRetentionPolicyAssignmentAssignedToFieldTypeField = newSerializeRetentionPolicyAssignmentAssignedToFieldTypeField;
function newDeserializeRetentionPolicyAssignmentAssignedToFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyAssignmentAssignedToFieldTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    if (val == "metadata_template") {
        return "metadata_template";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeRetentionPolicyAssignmentAssignedToFieldTypeField = newDeserializeRetentionPolicyAssignmentAssignedToFieldTypeField;
function newSerializeRetentionPolicyAssignmentAssignedToField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeRetentionPolicyAssignmentAssignedToFieldTypeField(val.type) };
}
exports.newSerializeRetentionPolicyAssignmentAssignedToField = newSerializeRetentionPolicyAssignmentAssignedToField;
function newDeserializeRetentionPolicyAssignmentAssignedToField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeRetentionPolicyAssignmentAssignedToFieldTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeRetentionPolicyAssignmentAssignedToField = newDeserializeRetentionPolicyAssignmentAssignedToField;
function newSerializeRetentionPolicyAssignmentFilterFieldsField(val) {
    return { ["field"]: val.field, ["value"]: val.value };
}
exports.newSerializeRetentionPolicyAssignmentFilterFieldsField = newSerializeRetentionPolicyAssignmentFilterFieldsField;
function newDeserializeRetentionPolicyAssignmentFilterFieldsField(val) {
    const field = (0, json_js_1.isJson)(val.field, "string") ? val.field : void 0;
    const value = (0, json_js_1.isJson)(val.value, "string") ? val.value : void 0;
    return { field: field, value: value };
}
exports.newDeserializeRetentionPolicyAssignmentFilterFieldsField = newDeserializeRetentionPolicyAssignmentFilterFieldsField;
function newSerializeRetentionPolicyAssignment(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeRetentionPolicyAssignmentTypeField(val.type), ["retention_policy"]: val.retentionPolicy == void 0 ? void 0 : newSerializeRetentionPolicyMini(val.retentionPolicy), ["assigned_to"]: val.assignedTo == void 0 ? void 0 : newSerializeRetentionPolicyAssignmentAssignedToField(val.assignedTo), ["filter_fields"]: val.filterFields == void 0 ? void 0 : val.filterFields.map(function (item) {
            return newSerializeRetentionPolicyAssignmentFilterFieldsField(item);
        }), ["assigned_by"]: val.assignedBy == void 0 ? void 0 : newSerializeUserMini(val.assignedBy), ["assigned_at"]: val.assignedAt, ["start_date_field"]: val.startDateField };
}
exports.newSerializeRetentionPolicyAssignment = newSerializeRetentionPolicyAssignment;
function newDeserializeRetentionPolicyAssignment(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeRetentionPolicyAssignmentTypeField(val.type);
    const retentionPolicy = val.retention_policy == void 0 ? void 0 : newDeserializeRetentionPolicyMini(val.retention_policy);
    const assignedTo = val.assigned_to == void 0 ? void 0 : newDeserializeRetentionPolicyAssignmentAssignedToField(val.assigned_to);
    const filterFields = (0, json_js_1.isJson)(val.filter_fields, "array") ? val.filter_fields.map(function (itm) {
        return newDeserializeRetentionPolicyAssignmentFilterFieldsField(itm);
    }) : void 0;
    const assignedBy = val.assigned_by == void 0 ? void 0 : newDeserializeUserMini(val.assigned_by);
    const assignedAt = (0, json_js_1.isJson)(val.assigned_at, "string") ? val.assigned_at : void 0;
    const startDateField = (0, json_js_1.isJson)(val.start_date_field, "string") ? val.start_date_field : void 0;
    return { id: id, type: type, retentionPolicy: retentionPolicy, assignedTo: assignedTo, filterFields: filterFields, assignedBy: assignedBy, assignedAt: assignedAt, startDateField: startDateField };
}
exports.newDeserializeRetentionPolicyAssignment = newDeserializeRetentionPolicyAssignment;
function newSerializeRetentionPolicyPolicyTypeField(val) {
    return val;
}
exports.newSerializeRetentionPolicyPolicyTypeField = newSerializeRetentionPolicyPolicyTypeField;
function newDeserializeRetentionPolicyPolicyTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyPolicyTypeField\"";
    }
    if (val == "finite") {
        return "finite";
    }
    if (val == "indefinite") {
        return "indefinite";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeRetentionPolicyPolicyTypeField = newDeserializeRetentionPolicyPolicyTypeField;
function newSerializeRetentionPolicyRetentionTypeField(val) {
    return val;
}
exports.newSerializeRetentionPolicyRetentionTypeField = newSerializeRetentionPolicyRetentionTypeField;
function newDeserializeRetentionPolicyRetentionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyRetentionTypeField\"";
    }
    if (val == "modifiable") {
        return "modifiable";
    }
    if (val == "non-modifiable") {
        return "non-modifiable";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeRetentionPolicyRetentionTypeField = newDeserializeRetentionPolicyRetentionTypeField;
function newSerializeRetentionPolicyStatusField(val) {
    return val;
}
exports.newSerializeRetentionPolicyStatusField = newSerializeRetentionPolicyStatusField;
function newDeserializeRetentionPolicyStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "retired") {
        return "retired";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeRetentionPolicyStatusField = newDeserializeRetentionPolicyStatusField;
function newSerializeRetentionPolicyAssignmentCountsField(val) {
    return { ["enterprise"]: val.enterprise, ["folder"]: val.folder, ["metadata_template"]: val.metadataTemplate };
}
exports.newSerializeRetentionPolicyAssignmentCountsField = newSerializeRetentionPolicyAssignmentCountsField;
function newDeserializeRetentionPolicyAssignmentCountsField(val) {
    const enterprise = (0, json_js_1.isJson)(val.enterprise, "number") ? val.enterprise : void 0;
    const folder = (0, json_js_1.isJson)(val.folder, "number") ? val.folder : void 0;
    const metadataTemplate = (0, json_js_1.isJson)(val.metadata_template, "number") ? val.metadata_template : void 0;
    return { enterprise: enterprise, folder: folder, metadataTemplate: metadataTemplate };
}
exports.newDeserializeRetentionPolicyAssignmentCountsField = newDeserializeRetentionPolicyAssignmentCountsField;
function newSerializeRetentionPolicy(val) {
    const base = newSerializeRetentionPolicyMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"RetentionPolicy\"";
    }
    return Object.assign(Object.assign({}, base), { ["description"]: val.description, ["policy_type"]: val.policyType == void 0 ? void 0 : newSerializeRetentionPolicyPolicyTypeField(val.policyType), ["retention_type"]: val.retentionType == void 0 ? void 0 : newSerializeRetentionPolicyRetentionTypeField(val.retentionType), ["status"]: val.status == void 0 ? void 0 : newSerializeRetentionPolicyStatusField(val.status), ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["can_owner_extend_retention"]: val.canOwnerExtendRetention, ["are_owners_notified"]: val.areOwnersNotified, ["custom_notification_recipients"]: val.customNotificationRecipients == void 0 ? void 0 : val.customNotificationRecipients.map(function (item) {
            return newSerializeUserMini(item);
        }), ["assignment_counts"]: val.assignmentCounts == void 0 ? void 0 : newSerializeRetentionPolicyAssignmentCountsField(val.assignmentCounts) });
}
exports.newSerializeRetentionPolicy = newSerializeRetentionPolicy;
function newDeserializeRetentionPolicy(val) {
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const policyType = val.policy_type == void 0 ? void 0 : newDeserializeRetentionPolicyPolicyTypeField(val.policy_type);
    const retentionType = val.retention_type == void 0 ? void 0 : newDeserializeRetentionPolicyRetentionTypeField(val.retention_type);
    const status = val.status == void 0 ? void 0 : newDeserializeRetentionPolicyStatusField(val.status);
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const canOwnerExtendRetention = (0, json_js_1.isJson)(val.can_owner_extend_retention, "boolean") ? val.can_owner_extend_retention : void 0;
    const areOwnersNotified = (0, json_js_1.isJson)(val.are_owners_notified, "boolean") ? val.are_owners_notified : void 0;
    const customNotificationRecipients = (0, json_js_1.isJson)(val.custom_notification_recipients, "array") ? val.custom_notification_recipients.map(function (itm) {
        return newDeserializeUserMini(itm);
    }) : void 0;
    const assignmentCounts = val.assignment_counts == void 0 ? void 0 : newDeserializeRetentionPolicyAssignmentCountsField(val.assignment_counts);
    const policyName = (0, json_js_1.isJson)(val.policy_name, "string") ? val.policy_name : void 0;
    const retentionLength = (0, json_js_1.isJson)(val.retention_length, "string") ? val.retention_length : void 0;
    const dispositionAction = val.disposition_action == void 0 ? void 0 : newDeserializeRetentionPolicyMiniDispositionActionField(val.disposition_action);
    const id = val.id;
    const type = newDeserializeRetentionPolicyBaseTypeField(val.type);
    return { description: description, policyType: policyType, retentionType: retentionType, status: status, createdBy: createdBy, createdAt: createdAt, modifiedAt: modifiedAt, canOwnerExtendRetention: canOwnerExtendRetention, areOwnersNotified: areOwnersNotified, customNotificationRecipients: customNotificationRecipients, assignmentCounts: assignmentCounts, policyName: policyName, retentionLength: retentionLength, dispositionAction: dispositionAction, id: id, type: type };
}
exports.newDeserializeRetentionPolicy = newDeserializeRetentionPolicy;
function newSerializeLegalHoldPolicyStatusField(val) {
    return val;
}
exports.newSerializeLegalHoldPolicyStatusField = newSerializeLegalHoldPolicyStatusField;
function newDeserializeLegalHoldPolicyStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"LegalHoldPolicyStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "applying") {
        return "applying";
    }
    if (val == "releasing") {
        return "releasing";
    }
    if (val == "released") {
        return "released";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeLegalHoldPolicyStatusField = newDeserializeLegalHoldPolicyStatusField;
function newSerializeLegalHoldPolicyAssignmentCountsField(val) {
    return { ["user"]: val.user, ["folder"]: val.folder, ["file"]: val.file, ["file_version"]: val.fileVersion };
}
exports.newSerializeLegalHoldPolicyAssignmentCountsField = newSerializeLegalHoldPolicyAssignmentCountsField;
function newDeserializeLegalHoldPolicyAssignmentCountsField(val) {
    const user = (0, json_js_1.isJson)(val.user, "number") ? val.user : void 0;
    const folder = (0, json_js_1.isJson)(val.folder, "number") ? val.folder : void 0;
    const file = (0, json_js_1.isJson)(val.file, "number") ? val.file : void 0;
    const fileVersion = (0, json_js_1.isJson)(val.file_version, "number") ? val.file_version : void 0;
    return { user: user, folder: folder, file: file, fileVersion: fileVersion };
}
exports.newDeserializeLegalHoldPolicyAssignmentCountsField = newDeserializeLegalHoldPolicyAssignmentCountsField;
function newSerializeLegalHoldPolicy(val) {
    const base = newSerializeLegalHoldPolicyMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"LegalHoldPolicy\"";
    }
    return Object.assign(Object.assign({}, base), { ["policy_name"]: val.policyName, ["description"]: val.description, ["status"]: val.status == void 0 ? void 0 : newSerializeLegalHoldPolicyStatusField(val.status), ["assignment_counts"]: val.assignmentCounts == void 0 ? void 0 : newSerializeLegalHoldPolicyAssignmentCountsField(val.assignmentCounts), ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["deleted_at"]: val.deletedAt, ["filter_started_at"]: val.filterStartedAt, ["filter_ended_at"]: val.filterEndedAt, ["release_notes"]: val.releaseNotes });
}
exports.newSerializeLegalHoldPolicy = newSerializeLegalHoldPolicy;
function newDeserializeLegalHoldPolicy(val) {
    const policyName = (0, json_js_1.isJson)(val.policy_name, "string") ? val.policy_name : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const status = val.status == void 0 ? void 0 : newDeserializeLegalHoldPolicyStatusField(val.status);
    const assignmentCounts = val.assignment_counts == void 0 ? void 0 : newDeserializeLegalHoldPolicyAssignmentCountsField(val.assignment_counts);
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const deletedAt = (0, json_js_1.isJson)(val.deleted_at, "string") ? val.deleted_at : void 0;
    const filterStartedAt = (0, json_js_1.isJson)(val.filter_started_at, "string") ? val.filter_started_at : void 0;
    const filterEndedAt = (0, json_js_1.isJson)(val.filter_ended_at, "string") ? val.filter_ended_at : void 0;
    const releaseNotes = (0, json_js_1.isJson)(val.release_notes, "string") ? val.release_notes : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeLegalHoldPolicyMiniTypeField(val.type);
    return { policyName: policyName, description: description, status: status, assignmentCounts: assignmentCounts, createdBy: createdBy, createdAt: createdAt, modifiedAt: modifiedAt, deletedAt: deletedAt, filterStartedAt: filterStartedAt, filterEndedAt: filterEndedAt, releaseNotes: releaseNotes, id: id, type: type };
}
exports.newDeserializeLegalHoldPolicy = newDeserializeLegalHoldPolicy;
function newSerializeLegalHoldPolicies(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeLegalHoldPolicy(item);
        }) };
}
exports.newSerializeLegalHoldPolicies = newSerializeLegalHoldPolicies;
function newDeserializeLegalHoldPolicies(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeLegalHoldPolicy(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeLegalHoldPolicies = newDeserializeLegalHoldPolicies;
function newSerializeInviteTypeField(val) {
    return val;
}
exports.newSerializeInviteTypeField = newSerializeInviteTypeField;
function newDeserializeInviteTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"InviteTypeField\"";
    }
    if (val == "invite") {
        return "invite";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeInviteTypeField = newDeserializeInviteTypeField;
function newSerializeInviteInvitedToFieldTypeField(val) {
    return val;
}
exports.newSerializeInviteInvitedToFieldTypeField = newSerializeInviteInvitedToFieldTypeField;
function newDeserializeInviteInvitedToFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"InviteInvitedToFieldTypeField\"";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeInviteInvitedToFieldTypeField = newDeserializeInviteInvitedToFieldTypeField;
function newSerializeInviteInvitedToField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeInviteInvitedToFieldTypeField(val.type), ["name"]: val.name };
}
exports.newSerializeInviteInvitedToField = newSerializeInviteInvitedToField;
function newDeserializeInviteInvitedToField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeInviteInvitedToFieldTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.newDeserializeInviteInvitedToField = newDeserializeInviteInvitedToField;
function newSerializeInvite(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeInviteTypeField(val.type), ["invited_to"]: val.invitedTo == void 0 ? void 0 : newSerializeInviteInvitedToField(val.invitedTo), ["actionable_by"]: val.actionableBy == void 0 ? void 0 : newSerializeUserMini(val.actionableBy), ["invited_by"]: val.invitedBy == void 0 ? void 0 : newSerializeUserMini(val.invitedBy), ["status"]: val.status, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt };
}
exports.newSerializeInvite = newSerializeInvite;
function newDeserializeInvite(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeInviteTypeField(val.type);
    const invitedTo = val.invited_to == void 0 ? void 0 : newDeserializeInviteInvitedToField(val.invited_to);
    const actionableBy = val.actionable_by == void 0 ? void 0 : newDeserializeUserMini(val.actionable_by);
    const invitedBy = val.invited_by == void 0 ? void 0 : newDeserializeUserMini(val.invited_by);
    const status = (0, json_js_1.isJson)(val.status, "string") ? val.status : void 0;
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    return { id: id, type: type, invitedTo: invitedTo, actionableBy: actionableBy, invitedBy: invitedBy, status: status, createdAt: createdAt, modifiedAt: modifiedAt };
}
exports.newDeserializeInvite = newDeserializeInvite;
function newSerializeGroupMembershipTypeField(val) {
    return val;
}
exports.newSerializeGroupMembershipTypeField = newSerializeGroupMembershipTypeField;
function newDeserializeGroupMembershipTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupMembershipTypeField\"";
    }
    if (val == "group_membership") {
        return "group_membership";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeGroupMembershipTypeField = newDeserializeGroupMembershipTypeField;
function newSerializeGroupMembershipRoleField(val) {
    return val;
}
exports.newSerializeGroupMembershipRoleField = newSerializeGroupMembershipRoleField;
function newDeserializeGroupMembershipRoleField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupMembershipRoleField\"";
    }
    if (val == "member") {
        return "member";
    }
    if (val == "admin") {
        return "admin";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeGroupMembershipRoleField = newDeserializeGroupMembershipRoleField;
function newSerializeGroupMembership(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeGroupMembershipTypeField(val.type), ["user"]: val.user == void 0 ? void 0 : newSerializeUserMini(val.user), ["group"]: val.group == void 0 ? void 0 : newSerializeGroupMini(val.group), ["role"]: val.role == void 0 ? void 0 : newSerializeGroupMembershipRoleField(val.role), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt };
}
exports.newSerializeGroupMembership = newSerializeGroupMembership;
function newDeserializeGroupMembership(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeGroupMembershipTypeField(val.type);
    const user = val.user == void 0 ? void 0 : newDeserializeUserMini(val.user);
    const group = val.group == void 0 ? void 0 : newDeserializeGroupMini(val.group);
    const role = val.role == void 0 ? void 0 : newDeserializeGroupMembershipRoleField(val.role);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    return { id: id, type: type, user: user, group: group, role: role, createdAt: createdAt, modifiedAt: modifiedAt };
}
exports.newDeserializeGroupMembership = newDeserializeGroupMembership;
function newSerializeGroupMembershipsOrderFieldDirectionField(val) {
    return val;
}
exports.newSerializeGroupMembershipsOrderFieldDirectionField = newSerializeGroupMembershipsOrderFieldDirectionField;
function newDeserializeGroupMembershipsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupMembershipsOrderFieldDirectionField\"";
    }
    if (val == "ASC") {
        return "ASC";
    }
    if (val == "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeGroupMembershipsOrderFieldDirectionField = newDeserializeGroupMembershipsOrderFieldDirectionField;
function newSerializeGroupMembershipsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction == void 0 ? void 0 : newSerializeGroupMembershipsOrderFieldDirectionField(val.direction) };
}
exports.newSerializeGroupMembershipsOrderField = newSerializeGroupMembershipsOrderField;
function newDeserializeGroupMembershipsOrderField(val) {
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction == void 0 ? void 0 : newDeserializeGroupMembershipsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.newDeserializeGroupMembershipsOrderField = newDeserializeGroupMembershipsOrderField;
function newSerializeGroupMemberships(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order == void 0 ? void 0 : val.order.map(function (item) {
            return newSerializeGroupMembershipsOrderField(item);
        }), ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeGroupMembership(item);
        }) };
}
exports.newSerializeGroupMemberships = newSerializeGroupMemberships;
function newDeserializeGroupMemberships(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return newDeserializeGroupMembershipsOrderField(itm);
    }) : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeGroupMembership(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.newDeserializeGroupMemberships = newDeserializeGroupMemberships;
function newSerializeFileVersion(val) {
    const base = newSerializeFileVersionMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileVersion\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name, ["size"]: val.size, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["modified_by"]: val.modifiedBy == void 0 ? void 0 : newSerializeUserMini(val.modifiedBy), ["trashed_at"]: val.trashedAt, ["trashed_by"]: val.trashedBy == void 0 ? void 0 : newSerializeUserMini(val.trashedBy), ["restored_at"]: val.restoredAt, ["restored_by"]: val.restoredBy == void 0 ? void 0 : newSerializeUserMini(val.restoredBy), ["purged_at"]: val.purgedAt, ["uploader_display_name"]: val.uploaderDisplayName });
}
exports.newSerializeFileVersion = newSerializeFileVersion;
function newDeserializeFileVersion(val) {
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeUserMini(val.modified_by);
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const trashedBy = val.trashed_by == void 0 ? void 0 : newDeserializeUserMini(val.trashed_by);
    const restoredAt = (0, json_js_1.isJson)(val.restored_at, "string") ? val.restored_at : void 0;
    const restoredBy = val.restored_by == void 0 ? void 0 : newDeserializeUserMini(val.restored_by);
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const uploaderDisplayName = (0, json_js_1.isJson)(val.uploader_display_name, "string") ? val.uploader_display_name : void 0;
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    const id = val.id;
    const type = newDeserializeFileVersionBaseTypeField(val.type);
    return { name: name, size: size, createdAt: createdAt, modifiedAt: modifiedAt, modifiedBy: modifiedBy, trashedAt: trashedAt, trashedBy: trashedBy, restoredAt: restoredAt, restoredBy: restoredBy, purgedAt: purgedAt, uploaderDisplayName: uploaderDisplayName, sha1: sha1, id: id, type: type };
}
exports.newDeserializeFileVersion = newDeserializeFileVersion;
function newSerializeFileVersionsOrderFieldDirectionField(val) {
    return val;
}
exports.newSerializeFileVersionsOrderFieldDirectionField = newSerializeFileVersionsOrderFieldDirectionField;
function newDeserializeFileVersionsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileVersionsOrderFieldDirectionField\"";
    }
    if (val == "ASC") {
        return "ASC";
    }
    if (val == "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileVersionsOrderFieldDirectionField = newDeserializeFileVersionsOrderFieldDirectionField;
function newSerializeFileVersionsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction == void 0 ? void 0 : newSerializeFileVersionsOrderFieldDirectionField(val.direction) };
}
exports.newSerializeFileVersionsOrderField = newSerializeFileVersionsOrderField;
function newDeserializeFileVersionsOrderField(val) {
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction == void 0 ? void 0 : newDeserializeFileVersionsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.newDeserializeFileVersionsOrderField = newDeserializeFileVersionsOrderField;
function newSerializeFileVersions(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order == void 0 ? void 0 : val.order.map(function (item) {
            return newSerializeFileVersionsOrderField(item);
        }), ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeFileVersion(item);
        }) };
}
exports.newSerializeFileVersions = newSerializeFileVersions;
function newDeserializeFileVersions(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return newDeserializeFileVersionsOrderField(itm);
    }) : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeFileVersion(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.newDeserializeFileVersions = newDeserializeFileVersions;
function newSerializeFileVersionFull(val) {
    const base = newSerializeFileVersion(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileVersionFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["version_number"]: val.versionNumber });
}
exports.newSerializeFileVersionFull = newSerializeFileVersionFull;
function newDeserializeFileVersionFull(val) {
    const versionNumber = (0, json_js_1.isJson)(val.version_number, "string") ? val.version_number : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeUserMini(val.modified_by);
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const trashedBy = val.trashed_by == void 0 ? void 0 : newDeserializeUserMini(val.trashed_by);
    const restoredAt = (0, json_js_1.isJson)(val.restored_at, "string") ? val.restored_at : void 0;
    const restoredBy = val.restored_by == void 0 ? void 0 : newDeserializeUserMini(val.restored_by);
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const uploaderDisplayName = (0, json_js_1.isJson)(val.uploader_display_name, "string") ? val.uploader_display_name : void 0;
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    const id = val.id;
    const type = newDeserializeFileVersionBaseTypeField(val.type);
    return { versionNumber: versionNumber, name: name, size: size, createdAt: createdAt, modifiedAt: modifiedAt, modifiedBy: modifiedBy, trashedAt: trashedAt, trashedBy: trashedBy, restoredAt: restoredAt, restoredBy: restoredBy, purgedAt: purgedAt, uploaderDisplayName: uploaderDisplayName, sha1: sha1, id: id, type: type };
}
exports.newDeserializeFileVersionFull = newDeserializeFileVersionFull;
function newSerializeFileRequestTypeField(val) {
    return val;
}
exports.newSerializeFileRequestTypeField = newSerializeFileRequestTypeField;
function newDeserializeFileRequestTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileRequestTypeField\"";
    }
    if (val == "file_request") {
        return "file_request";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileRequestTypeField = newDeserializeFileRequestTypeField;
function newSerializeFileRequestStatusField(val) {
    return val;
}
exports.newSerializeFileRequestStatusField = newSerializeFileRequestStatusField;
function newDeserializeFileRequestStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileRequestStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "inactive") {
        return "inactive";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileRequestStatusField = newDeserializeFileRequestStatusField;
function newSerializeFileRequest(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeFileRequestTypeField(val.type), ["title"]: val.title, ["description"]: val.description, ["status"]: val.status == void 0 ? void 0 : newSerializeFileRequestStatusField(val.status), ["is_email_required"]: val.isEmailRequired, ["is_description_required"]: val.isDescriptionRequired, ["expires_at"]: val.expiresAt, ["folder"]: newSerializeFolderMini(val.folder), ["url"]: val.url, ["etag"]: val.etag, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["updated_by"]: val.updatedBy == void 0 ? void 0 : newSerializeUserMini(val.updatedBy), ["updated_at"]: val.updatedAt };
}
exports.newSerializeFileRequest = newSerializeFileRequest;
function newDeserializeFileRequest(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeFileRequestTypeField(val.type);
    const title = (0, json_js_1.isJson)(val.title, "string") ? val.title : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const status = val.status == void 0 ? void 0 : newDeserializeFileRequestStatusField(val.status);
    const isEmailRequired = (0, json_js_1.isJson)(val.is_email_required, "boolean") ? val.is_email_required : void 0;
    const isDescriptionRequired = (0, json_js_1.isJson)(val.is_description_required, "boolean") ? val.is_description_required : void 0;
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    const folder = newDeserializeFolderMini(val.folder);
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const createdAt = val.created_at;
    const updatedBy = val.updated_by == void 0 ? void 0 : newDeserializeUserMini(val.updated_by);
    const updatedAt = val.updated_at;
    return { id: id, type: type, title: title, description: description, status: status, isEmailRequired: isEmailRequired, isDescriptionRequired: isDescriptionRequired, expiresAt: expiresAt, folder: folder, url: url, etag: etag, createdBy: createdBy, createdAt: createdAt, updatedBy: updatedBy, updatedAt: updatedAt };
}
exports.newDeserializeFileRequest = newDeserializeFileRequest;
function newSerializeFilePathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return newSerializeFolderMini(item);
        }) };
}
exports.newSerializeFilePathCollectionField = newSerializeFilePathCollectionField;
function newDeserializeFilePathCollectionField(val) {
    const totalCount = val.total_count;
    const entries = val.entries.map(function (itm) {
        return newDeserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeFilePathCollectionField = newDeserializeFilePathCollectionField;
function newSerializeFileSharedLinkFieldAccessField(val) {
    return val;
}
exports.newSerializeFileSharedLinkFieldAccessField = newSerializeFileSharedLinkFieldAccessField;
function newDeserializeFileSharedLinkFieldAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileSharedLinkFieldAccessField\"";
    }
    if (val == "open") {
        return "open";
    }
    if (val == "company") {
        return "company";
    }
    if (val == "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileSharedLinkFieldAccessField = newDeserializeFileSharedLinkFieldAccessField;
function newSerializeFileSharedLinkFieldEffectiveAccessField(val) {
    return val;
}
exports.newSerializeFileSharedLinkFieldEffectiveAccessField = newSerializeFileSharedLinkFieldEffectiveAccessField;
function newDeserializeFileSharedLinkFieldEffectiveAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileSharedLinkFieldEffectiveAccessField\"";
    }
    if (val == "open") {
        return "open";
    }
    if (val == "company") {
        return "company";
    }
    if (val == "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileSharedLinkFieldEffectiveAccessField = newDeserializeFileSharedLinkFieldEffectiveAccessField;
function newSerializeFileSharedLinkFieldEffectivePermissionField(val) {
    return val;
}
exports.newSerializeFileSharedLinkFieldEffectivePermissionField = newSerializeFileSharedLinkFieldEffectivePermissionField;
function newDeserializeFileSharedLinkFieldEffectivePermissionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileSharedLinkFieldEffectivePermissionField\"";
    }
    if (val == "can_edit") {
        return "can_edit";
    }
    if (val == "can_download") {
        return "can_download";
    }
    if (val == "can_preview") {
        return "can_preview";
    }
    if (val == "no_access") {
        return "no_access";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileSharedLinkFieldEffectivePermissionField = newDeserializeFileSharedLinkFieldEffectivePermissionField;
function newSerializeFileSharedLinkFieldPermissionsField(val) {
    return { ["can_download"]: val.canDownload, ["can_preview"]: val.canPreview, ["can_edit"]: val.canEdit };
}
exports.newSerializeFileSharedLinkFieldPermissionsField = newSerializeFileSharedLinkFieldPermissionsField;
function newDeserializeFileSharedLinkFieldPermissionsField(val) {
    const canDownload = val.can_download;
    const canPreview = val.can_preview;
    const canEdit = val.can_edit;
    return { canDownload: canDownload, canPreview: canPreview, canEdit: canEdit };
}
exports.newDeserializeFileSharedLinkFieldPermissionsField = newDeserializeFileSharedLinkFieldPermissionsField;
function newSerializeFileSharedLinkField(val) {
    return { ["url"]: val.url, ["download_url"]: val.downloadUrl, ["vanity_url"]: val.vanityUrl, ["vanity_name"]: val.vanityName, ["access"]: val.access == void 0 ? void 0 : newSerializeFileSharedLinkFieldAccessField(val.access), ["effective_access"]: newSerializeFileSharedLinkFieldEffectiveAccessField(val.effectiveAccess), ["effective_permission"]: newSerializeFileSharedLinkFieldEffectivePermissionField(val.effectivePermission), ["unshared_at"]: val.unsharedAt, ["is_password_enabled"]: val.isPasswordEnabled, ["permissions"]: val.permissions == void 0 ? void 0 : newSerializeFileSharedLinkFieldPermissionsField(val.permissions), ["download_count"]: val.downloadCount, ["preview_count"]: val.previewCount };
}
exports.newSerializeFileSharedLinkField = newSerializeFileSharedLinkField;
function newDeserializeFileSharedLinkField(val) {
    const url = val.url;
    const downloadUrl = (0, json_js_1.isJson)(val.download_url, "string") ? val.download_url : void 0;
    const vanityUrl = (0, json_js_1.isJson)(val.vanity_url, "string") ? val.vanity_url : void 0;
    const vanityName = (0, json_js_1.isJson)(val.vanity_name, "string") ? val.vanity_name : void 0;
    const access = val.access == void 0 ? void 0 : newDeserializeFileSharedLinkFieldAccessField(val.access);
    const effectiveAccess = newDeserializeFileSharedLinkFieldEffectiveAccessField(val.effective_access);
    const effectivePermission = newDeserializeFileSharedLinkFieldEffectivePermissionField(val.effective_permission);
    const unsharedAt = (0, json_js_1.isJson)(val.unshared_at, "string") ? val.unshared_at : void 0;
    const isPasswordEnabled = val.is_password_enabled;
    const permissions = val.permissions == void 0 ? void 0 : newDeserializeFileSharedLinkFieldPermissionsField(val.permissions);
    const downloadCount = val.download_count;
    const previewCount = val.preview_count;
    return { url: url, downloadUrl: downloadUrl, vanityUrl: vanityUrl, vanityName: vanityName, access: access, effectiveAccess: effectiveAccess, effectivePermission: effectivePermission, unsharedAt: unsharedAt, isPasswordEnabled: isPasswordEnabled, permissions: permissions, downloadCount: downloadCount, previewCount: previewCount };
}
exports.newDeserializeFileSharedLinkField = newDeserializeFileSharedLinkField;
function newSerializeFileItemStatusField(val) {
    return val;
}
exports.newSerializeFileItemStatusField = newSerializeFileItemStatusField;
function newDeserializeFileItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileItemStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "trashed") {
        return "trashed";
    }
    if (val == "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileItemStatusField = newDeserializeFileItemStatusField;
function newSerializeFile(val) {
    const base = newSerializeFileMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"File\"";
    }
    return Object.assign(Object.assign({}, base), { ["description"]: val.description, ["size"]: val.size, ["path_collection"]: val.pathCollection == void 0 ? void 0 : newSerializeFilePathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["modified_by"]: val.modifiedBy == void 0 ? void 0 : newSerializeUserMini(val.modifiedBy), ["owned_by"]: val.ownedBy == void 0 ? void 0 : newSerializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink == void 0 ? void 0 : newSerializeFileSharedLinkField(val.sharedLink), ["parent"]: val.parent == void 0 ? void 0 : newSerializeFolderMini(val.parent), ["item_status"]: val.itemStatus == void 0 ? void 0 : newSerializeFileItemStatusField(val.itemStatus) });
}
exports.newSerializeFile = newSerializeFile;
function newDeserializeFile(val) {
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    const pathCollection = val.path_collection == void 0 ? void 0 : newDeserializeFilePathCollectionField(val.path_collection);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeUserMini(val.modified_by);
    const ownedBy = val.owned_by == void 0 ? void 0 : newDeserializeUserMini(val.owned_by);
    const sharedLink = val.shared_link == void 0 ? void 0 : newDeserializeFileSharedLinkField(val.shared_link);
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const itemStatus = val.item_status == void 0 ? void 0 : newDeserializeFileItemStatusField(val.item_status);
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    const fileVersion = val.file_version == void 0 ? void 0 : newDeserializeFileVersionMini(val.file_version);
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeFileBaseTypeField(val.type);
    return { description: description, size: size, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, parent: parent, itemStatus: itemStatus, sequenceId: sequenceId, name: name, sha1: sha1, fileVersion: fileVersion, id: id, etag: etag, type: type };
}
exports.newDeserializeFile = newDeserializeFile;
function newSerializeFileFullPermissionsField(val) {
    return { ["can_delete"]: val.canDelete, ["can_download"]: val.canDownload, ["can_invite_collaborator"]: val.canInviteCollaborator, ["can_rename"]: val.canRename, ["can_set_share_access"]: val.canSetShareAccess, ["can_share"]: val.canShare, ["can_annotate"]: val.canAnnotate, ["can_comment"]: val.canComment, ["can_preview"]: val.canPreview, ["can_upload"]: val.canUpload, ["can_view_annotations_all"]: val.canViewAnnotationsAll, ["can_view_annotations_self"]: val.canViewAnnotationsSelf };
}
exports.newSerializeFileFullPermissionsField = newSerializeFileFullPermissionsField;
function newDeserializeFileFullPermissionsField(val) {
    const canDelete = val.can_delete;
    const canDownload = val.can_download;
    const canInviteCollaborator = val.can_invite_collaborator;
    const canRename = val.can_rename;
    const canSetShareAccess = val.can_set_share_access;
    const canShare = val.can_share;
    const canAnnotate = (0, json_js_1.isJson)(val.can_annotate, "boolean") ? val.can_annotate : void 0;
    const canComment = (0, json_js_1.isJson)(val.can_comment, "boolean") ? val.can_comment : void 0;
    const canPreview = (0, json_js_1.isJson)(val.can_preview, "boolean") ? val.can_preview : void 0;
    const canUpload = (0, json_js_1.isJson)(val.can_upload, "boolean") ? val.can_upload : void 0;
    const canViewAnnotationsAll = (0, json_js_1.isJson)(val.can_view_annotations_all, "boolean") ? val.can_view_annotations_all : void 0;
    const canViewAnnotationsSelf = (0, json_js_1.isJson)(val.can_view_annotations_self, "boolean") ? val.can_view_annotations_self : void 0;
    return { canDelete: canDelete, canDownload: canDownload, canInviteCollaborator: canInviteCollaborator, canRename: canRename, canSetShareAccess: canSetShareAccess, canShare: canShare, canAnnotate: canAnnotate, canComment: canComment, canPreview: canPreview, canUpload: canUpload, canViewAnnotationsAll: canViewAnnotationsAll, canViewAnnotationsSelf: canViewAnnotationsSelf };
}
exports.newDeserializeFileFullPermissionsField = newDeserializeFileFullPermissionsField;
function newSerializeFileFullLockFieldTypeField(val) {
    return val;
}
exports.newSerializeFileFullLockFieldTypeField = newSerializeFileFullLockFieldTypeField;
function newDeserializeFileFullLockFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullLockFieldTypeField\"";
    }
    if (val == "lock") {
        return "lock";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileFullLockFieldTypeField = newDeserializeFileFullLockFieldTypeField;
function newSerializeFileFullLockFieldAppTypeField(val) {
    return val;
}
exports.newSerializeFileFullLockFieldAppTypeField = newSerializeFileFullLockFieldAppTypeField;
function newDeserializeFileFullLockFieldAppTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullLockFieldAppTypeField\"";
    }
    if (val == "gsuite") {
        return "gsuite";
    }
    if (val == "office_wopi") {
        return "office_wopi";
    }
    if (val == "office_wopiplus") {
        return "office_wopiplus";
    }
    if (val == "other") {
        return "other";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileFullLockFieldAppTypeField = newDeserializeFileFullLockFieldAppTypeField;
function newSerializeFileFullLockField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeFileFullLockFieldTypeField(val.type), ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["expired_at"]: val.expiredAt, ["is_download_prevented"]: val.isDownloadPrevented, ["app_type"]: val.appType == void 0 ? void 0 : newSerializeFileFullLockFieldAppTypeField(val.appType) };
}
exports.newSerializeFileFullLockField = newSerializeFileFullLockField;
function newDeserializeFileFullLockField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeFileFullLockFieldTypeField(val.type);
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const expiredAt = (0, json_js_1.isJson)(val.expired_at, "string") ? val.expired_at : void 0;
    const isDownloadPrevented = (0, json_js_1.isJson)(val.is_download_prevented, "boolean") ? val.is_download_prevented : void 0;
    const appType = val.app_type == void 0 ? void 0 : newDeserializeFileFullLockFieldAppTypeField(val.app_type);
    return { id: id, type: type, createdBy: createdBy, createdAt: createdAt, expiredAt: expiredAt, isDownloadPrevented: isDownloadPrevented, appType: appType };
}
exports.newDeserializeFileFullLockField = newDeserializeFileFullLockField;
function newSerializeFileFullExpiringEmbedLinkFieldTokenTypeField(val) {
    return val;
}
exports.newSerializeFileFullExpiringEmbedLinkFieldTokenTypeField = newSerializeFileFullExpiringEmbedLinkFieldTokenTypeField;
function newDeserializeFileFullExpiringEmbedLinkFieldTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullExpiringEmbedLinkFieldTokenTypeField\"";
    }
    if (val == "bearer") {
        return "bearer";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileFullExpiringEmbedLinkFieldTokenTypeField = newDeserializeFileFullExpiringEmbedLinkFieldTokenTypeField;
function newSerializeFileFullExpiringEmbedLinkField(val) {
    return { ["access_token"]: val.accessToken, ["expires_in"]: val.expiresIn, ["token_type"]: val.tokenType == void 0 ? void 0 : newSerializeFileFullExpiringEmbedLinkFieldTokenTypeField(val.tokenType), ["restricted_to"]: val.restrictedTo == void 0 ? void 0 : val.restrictedTo.map(function (item) {
            return newSerializeFileScope(item);
        }), ["url"]: val.url };
}
exports.newSerializeFileFullExpiringEmbedLinkField = newSerializeFileFullExpiringEmbedLinkField;
function newDeserializeFileFullExpiringEmbedLinkField(val) {
    const accessToken = (0, json_js_1.isJson)(val.access_token, "string") ? val.access_token : void 0;
    const expiresIn = (0, json_js_1.isJson)(val.expires_in, "number") ? val.expires_in : void 0;
    const tokenType = val.token_type == void 0 ? void 0 : newDeserializeFileFullExpiringEmbedLinkFieldTokenTypeField(val.token_type);
    const restrictedTo = (0, json_js_1.isJson)(val.restricted_to, "array") ? val.restricted_to.map(function (itm) {
        return newDeserializeFileScope(itm);
    }) : void 0;
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    return { accessToken: accessToken, expiresIn: expiresIn, tokenType: tokenType, restrictedTo: restrictedTo, url: url };
}
exports.newDeserializeFileFullExpiringEmbedLinkField = newDeserializeFileFullExpiringEmbedLinkField;
function newSerializeFileFullWatermarkInfoField(val) {
    return { ["is_watermarked"]: val.isWatermarked };
}
exports.newSerializeFileFullWatermarkInfoField = newSerializeFileFullWatermarkInfoField;
function newDeserializeFileFullWatermarkInfoField(val) {
    const isWatermarked = (0, json_js_1.isJson)(val.is_watermarked, "boolean") ? val.is_watermarked : void 0;
    return { isWatermarked: isWatermarked };
}
exports.newDeserializeFileFullWatermarkInfoField = newDeserializeFileFullWatermarkInfoField;
function newSerializeFileFullAllowedInviteeRolesField(val) {
    return val;
}
exports.newSerializeFileFullAllowedInviteeRolesField = newSerializeFileFullAllowedInviteeRolesField;
function newDeserializeFileFullAllowedInviteeRolesField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullAllowedInviteeRolesField\"";
    }
    if (val == "editor") {
        return "editor";
    }
    if (val == "viewer") {
        return "viewer";
    }
    if (val == "previewer") {
        return "previewer";
    }
    if (val == "uploader") {
        return "uploader";
    }
    if (val == "previewer uploader") {
        return "previewer uploader";
    }
    if (val == "viewer uploader") {
        return "viewer uploader";
    }
    if (val == "co-owner") {
        return "co-owner";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileFullAllowedInviteeRolesField = newDeserializeFileFullAllowedInviteeRolesField;
function newSerializeFileFullMetadataField(val) {
    return {};
}
exports.newSerializeFileFullMetadataField = newSerializeFileFullMetadataField;
function newDeserializeFileFullMetadataField(val) {
    return {};
}
exports.newDeserializeFileFullMetadataField = newDeserializeFileFullMetadataField;
function newSerializeFileFullRepresentationsFieldEntriesFieldContentField(val) {
    return { ["url_template"]: val.urlTemplate };
}
exports.newSerializeFileFullRepresentationsFieldEntriesFieldContentField = newSerializeFileFullRepresentationsFieldEntriesFieldContentField;
function newDeserializeFileFullRepresentationsFieldEntriesFieldContentField(val) {
    const urlTemplate = (0, json_js_1.isJson)(val.url_template, "string") ? val.url_template : void 0;
    return { urlTemplate: urlTemplate };
}
exports.newDeserializeFileFullRepresentationsFieldEntriesFieldContentField = newDeserializeFileFullRepresentationsFieldEntriesFieldContentField;
function newSerializeFileFullRepresentationsFieldEntriesFieldInfoField(val) {
    return { ["url"]: val.url };
}
exports.newSerializeFileFullRepresentationsFieldEntriesFieldInfoField = newSerializeFileFullRepresentationsFieldEntriesFieldInfoField;
function newDeserializeFileFullRepresentationsFieldEntriesFieldInfoField(val) {
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    return { url: url };
}
exports.newDeserializeFileFullRepresentationsFieldEntriesFieldInfoField = newDeserializeFileFullRepresentationsFieldEntriesFieldInfoField;
function newSerializeFileFullRepresentationsFieldEntriesFieldPropertiesField(val) {
    return { ["dimensions"]: val.dimensions, ["paged"]: val.paged, ["thumb"]: val.thumb };
}
exports.newSerializeFileFullRepresentationsFieldEntriesFieldPropertiesField = newSerializeFileFullRepresentationsFieldEntriesFieldPropertiesField;
function newDeserializeFileFullRepresentationsFieldEntriesFieldPropertiesField(val) {
    const dimensions = (0, json_js_1.isJson)(val.dimensions, "string") ? val.dimensions : void 0;
    const paged = (0, json_js_1.isJson)(val.paged, "boolean") ? val.paged : void 0;
    const thumb = (0, json_js_1.isJson)(val.thumb, "boolean") ? val.thumb : void 0;
    return { dimensions: dimensions, paged: paged, thumb: thumb };
}
exports.newDeserializeFileFullRepresentationsFieldEntriesFieldPropertiesField = newDeserializeFileFullRepresentationsFieldEntriesFieldPropertiesField;
function newSerializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField(val) {
    return val;
}
exports.newSerializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField = newSerializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField;
function newDeserializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullRepresentationsFieldEntriesFieldStatusFieldStateField\"";
    }
    if (val == "success") {
        return "success";
    }
    if (val == "viewable") {
        return "viewable";
    }
    if (val == "pending") {
        return "pending";
    }
    if (val == "none") {
        return "none";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField = newDeserializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField;
function newSerializeFileFullRepresentationsFieldEntriesFieldStatusField(val) {
    return { ["state"]: val.state == void 0 ? void 0 : newSerializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField(val.state) };
}
exports.newSerializeFileFullRepresentationsFieldEntriesFieldStatusField = newSerializeFileFullRepresentationsFieldEntriesFieldStatusField;
function newDeserializeFileFullRepresentationsFieldEntriesFieldStatusField(val) {
    const state = val.state == void 0 ? void 0 : newDeserializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField(val.state);
    return { state: state };
}
exports.newDeserializeFileFullRepresentationsFieldEntriesFieldStatusField = newDeserializeFileFullRepresentationsFieldEntriesFieldStatusField;
function newSerializeFileFullRepresentationsFieldEntriesField(val) {
    return { ["content"]: val.content == void 0 ? void 0 : newSerializeFileFullRepresentationsFieldEntriesFieldContentField(val.content), ["info"]: val.info == void 0 ? void 0 : newSerializeFileFullRepresentationsFieldEntriesFieldInfoField(val.info), ["properties"]: val.properties == void 0 ? void 0 : newSerializeFileFullRepresentationsFieldEntriesFieldPropertiesField(val.properties), ["representation"]: val.representation, ["status"]: val.status == void 0 ? void 0 : newSerializeFileFullRepresentationsFieldEntriesFieldStatusField(val.status) };
}
exports.newSerializeFileFullRepresentationsFieldEntriesField = newSerializeFileFullRepresentationsFieldEntriesField;
function newDeserializeFileFullRepresentationsFieldEntriesField(val) {
    const content = val.content == void 0 ? void 0 : newDeserializeFileFullRepresentationsFieldEntriesFieldContentField(val.content);
    const info = val.info == void 0 ? void 0 : newDeserializeFileFullRepresentationsFieldEntriesFieldInfoField(val.info);
    const properties = val.properties == void 0 ? void 0 : newDeserializeFileFullRepresentationsFieldEntriesFieldPropertiesField(val.properties);
    const representation = (0, json_js_1.isJson)(val.representation, "string") ? val.representation : void 0;
    const status = val.status == void 0 ? void 0 : newDeserializeFileFullRepresentationsFieldEntriesFieldStatusField(val.status);
    return { content: content, info: info, properties: properties, representation: representation, status: status };
}
exports.newDeserializeFileFullRepresentationsFieldEntriesField = newDeserializeFileFullRepresentationsFieldEntriesField;
function newSerializeFileFullRepresentationsField(val) {
    return { ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeFileFullRepresentationsFieldEntriesField(item);
        }) };
}
exports.newSerializeFileFullRepresentationsField = newSerializeFileFullRepresentationsField;
function newDeserializeFileFullRepresentationsField(val) {
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeFileFullRepresentationsFieldEntriesField(itm);
    }) : void 0;
    return { entries: entries };
}
exports.newDeserializeFileFullRepresentationsField = newDeserializeFileFullRepresentationsField;
function newSerializeFileFullClassificationField(val) {
    return { ["name"]: val.name, ["definition"]: val.definition, ["color"]: val.color };
}
exports.newSerializeFileFullClassificationField = newSerializeFileFullClassificationField;
function newDeserializeFileFullClassificationField(val) {
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const definition = (0, json_js_1.isJson)(val.definition, "string") ? val.definition : void 0;
    const color = (0, json_js_1.isJson)(val.color, "string") ? val.color : void 0;
    return { name: name, definition: definition, color: color };
}
exports.newDeserializeFileFullClassificationField = newDeserializeFileFullClassificationField;
function newSerializeFileFullSharedLinkPermissionOptionsField(val) {
    return val;
}
exports.newSerializeFileFullSharedLinkPermissionOptionsField = newSerializeFileFullSharedLinkPermissionOptionsField;
function newDeserializeFileFullSharedLinkPermissionOptionsField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullSharedLinkPermissionOptionsField\"";
    }
    if (val == "can_preview") {
        return "can_preview";
    }
    if (val == "can_download") {
        return "can_download";
    }
    if (val == "can_edit") {
        return "can_edit";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileFullSharedLinkPermissionOptionsField = newDeserializeFileFullSharedLinkPermissionOptionsField;
function newSerializeFileFull(val) {
    const base = newSerializeFile(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["version_number"]: val.versionNumber, ["comment_count"]: val.commentCount, ["permissions"]: val.permissions == void 0 ? void 0 : newSerializeFileFullPermissionsField(val.permissions), ["tags"]: val.tags == void 0 ? void 0 : val.tags.map(function (item) {
            return void 0;
        }), ["lock"]: val.lock == void 0 ? void 0 : newSerializeFileFullLockField(val.lock), ["extension"]: val.extension, ["is_package"]: val.isPackage, ["expiring_embed_link"]: val.expiringEmbedLink == void 0 ? void 0 : newSerializeFileFullExpiringEmbedLinkField(val.expiringEmbedLink), ["watermark_info"]: val.watermarkInfo == void 0 ? void 0 : newSerializeFileFullWatermarkInfoField(val.watermarkInfo), ["is_accessible_via_shared_link"]: val.isAccessibleViaSharedLink, ["allowed_invitee_roles"]: val.allowedInviteeRoles == void 0 ? void 0 : val.allowedInviteeRoles.map(function (item) {
            return newSerializeFileFullAllowedInviteeRolesField(item);
        }), ["is_externally_owned"]: val.isExternallyOwned, ["has_collaborations"]: val.hasCollaborations, ["metadata"]: val.metadata == void 0 ? void 0 : newSerializeFileFullMetadataField(val.metadata), ["expires_at"]: val.expiresAt, ["representations"]: val.representations == void 0 ? void 0 : newSerializeFileFullRepresentationsField(val.representations), ["classification"]: val.classification == void 0 ? void 0 : newSerializeFileFullClassificationField(val.classification), ["uploader_display_name"]: val.uploaderDisplayName, ["disposition_at"]: val.dispositionAt, ["shared_link_permission_options"]: val.sharedLinkPermissionOptions == void 0 ? void 0 : val.sharedLinkPermissionOptions.map(function (item) {
            return newSerializeFileFullSharedLinkPermissionOptionsField(item);
        }) });
}
exports.newSerializeFileFull = newSerializeFileFull;
function newDeserializeFileFull(val) {
    const versionNumber = (0, json_js_1.isJson)(val.version_number, "string") ? val.version_number : void 0;
    const commentCount = (0, json_js_1.isJson)(val.comment_count, "number") ? val.comment_count : void 0;
    const permissions = val.permissions == void 0 ? void 0 : newDeserializeFileFullPermissionsField(val.permissions);
    const tags = (0, json_js_1.isJson)(val.tags, "array") ? val.tags.map(function (itm) {
        return void 0;
    }) : void 0;
    const lock = val.lock == void 0 ? void 0 : newDeserializeFileFullLockField(val.lock);
    const extension = (0, json_js_1.isJson)(val.extension, "string") ? val.extension : void 0;
    const isPackage = (0, json_js_1.isJson)(val.is_package, "boolean") ? val.is_package : void 0;
    const expiringEmbedLink = val.expiring_embed_link == void 0 ? void 0 : newDeserializeFileFullExpiringEmbedLinkField(val.expiring_embed_link);
    const watermarkInfo = val.watermark_info == void 0 ? void 0 : newDeserializeFileFullWatermarkInfoField(val.watermark_info);
    const isAccessibleViaSharedLink = (0, json_js_1.isJson)(val.is_accessible_via_shared_link, "boolean") ? val.is_accessible_via_shared_link : void 0;
    const allowedInviteeRoles = (0, json_js_1.isJson)(val.allowed_invitee_roles, "array") ? val.allowed_invitee_roles.map(function (itm) {
        return newDeserializeFileFullAllowedInviteeRolesField(itm);
    }) : void 0;
    const isExternallyOwned = (0, json_js_1.isJson)(val.is_externally_owned, "boolean") ? val.is_externally_owned : void 0;
    const hasCollaborations = (0, json_js_1.isJson)(val.has_collaborations, "boolean") ? val.has_collaborations : void 0;
    const metadata = val.metadata == void 0 ? void 0 : newDeserializeFileFullMetadataField(val.metadata);
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    const representations = val.representations == void 0 ? void 0 : newDeserializeFileFullRepresentationsField(val.representations);
    const classification = val.classification == void 0 ? void 0 : newDeserializeFileFullClassificationField(val.classification);
    const uploaderDisplayName = (0, json_js_1.isJson)(val.uploader_display_name, "string") ? val.uploader_display_name : void 0;
    const dispositionAt = (0, json_js_1.isJson)(val.disposition_at, "string") ? val.disposition_at : void 0;
    const sharedLinkPermissionOptions = (0, json_js_1.isJson)(val.shared_link_permission_options, "array") ? val.shared_link_permission_options.map(function (itm) {
        return newDeserializeFileFullSharedLinkPermissionOptionsField(itm);
    }) : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    const pathCollection = val.path_collection == void 0 ? void 0 : newDeserializeFilePathCollectionField(val.path_collection);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeUserMini(val.modified_by);
    const ownedBy = val.owned_by == void 0 ? void 0 : newDeserializeUserMini(val.owned_by);
    const sharedLink = val.shared_link == void 0 ? void 0 : newDeserializeFileSharedLinkField(val.shared_link);
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const itemStatus = val.item_status == void 0 ? void 0 : newDeserializeFileItemStatusField(val.item_status);
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    const fileVersion = val.file_version == void 0 ? void 0 : newDeserializeFileVersionMini(val.file_version);
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeFileBaseTypeField(val.type);
    return { versionNumber: versionNumber, commentCount: commentCount, permissions: permissions, tags: tags, lock: lock, extension: extension, isPackage: isPackage, expiringEmbedLink: expiringEmbedLink, watermarkInfo: watermarkInfo, isAccessibleViaSharedLink: isAccessibleViaSharedLink, allowedInviteeRoles: allowedInviteeRoles, isExternallyOwned: isExternallyOwned, hasCollaborations: hasCollaborations, metadata: metadata, expiresAt: expiresAt, representations: representations, classification: classification, uploaderDisplayName: uploaderDisplayName, dispositionAt: dispositionAt, sharedLinkPermissionOptions: sharedLinkPermissionOptions, description: description, size: size, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, parent: parent, itemStatus: itemStatus, sequenceId: sequenceId, name: name, sha1: sha1, fileVersion: fileVersion, id: id, etag: etag, type: type };
}
exports.newDeserializeFileFull = newDeserializeFileFull;
function newSerializeFiles(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeFile(item);
        }) };
}
exports.newSerializeFiles = newSerializeFiles;
function newDeserializeFiles(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeFile(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeFiles = newDeserializeFiles;
function newSerializeDevicePinnerTypeField(val) {
    return val;
}
exports.newSerializeDevicePinnerTypeField = newSerializeDevicePinnerTypeField;
function newDeserializeDevicePinnerTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"DevicePinnerTypeField\"";
    }
    if (val == "device_pinner") {
        return "device_pinner";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeDevicePinnerTypeField = newDeserializeDevicePinnerTypeField;
function newSerializeDevicePinner(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeDevicePinnerTypeField(val.type), ["owned_by"]: val.ownedBy == void 0 ? void 0 : newSerializeUserMini(val.ownedBy), ["product_name"]: val.productName };
}
exports.newSerializeDevicePinner = newSerializeDevicePinner;
function newDeserializeDevicePinner(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeDevicePinnerTypeField(val.type);
    const ownedBy = val.owned_by == void 0 ? void 0 : newDeserializeUserMini(val.owned_by);
    const productName = (0, json_js_1.isJson)(val.product_name, "string") ? val.product_name : void 0;
    return { id: id, type: type, ownedBy: ownedBy, productName: productName };
}
exports.newDeserializeDevicePinner = newDeserializeDevicePinner;
function newSerializeDevicePinnersOrderFieldByField(val) {
    return val;
}
exports.newSerializeDevicePinnersOrderFieldByField = newSerializeDevicePinnersOrderFieldByField;
function newDeserializeDevicePinnersOrderFieldByField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"DevicePinnersOrderFieldByField\"";
    }
    if (val == "id") {
        return "id";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeDevicePinnersOrderFieldByField = newDeserializeDevicePinnersOrderFieldByField;
function newSerializeDevicePinnersOrderFieldDirectionField(val) {
    return val;
}
exports.newSerializeDevicePinnersOrderFieldDirectionField = newSerializeDevicePinnersOrderFieldDirectionField;
function newDeserializeDevicePinnersOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"DevicePinnersOrderFieldDirectionField\"";
    }
    if (val == "asc") {
        return "asc";
    }
    if (val == "desc") {
        return "desc";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeDevicePinnersOrderFieldDirectionField = newDeserializeDevicePinnersOrderFieldDirectionField;
function newSerializeDevicePinnersOrderField(val) {
    return { ["by"]: val.by == void 0 ? void 0 : newSerializeDevicePinnersOrderFieldByField(val.by), ["direction"]: val.direction == void 0 ? void 0 : newSerializeDevicePinnersOrderFieldDirectionField(val.direction) };
}
exports.newSerializeDevicePinnersOrderField = newSerializeDevicePinnersOrderField;
function newDeserializeDevicePinnersOrderField(val) {
    const by = val.by == void 0 ? void 0 : newDeserializeDevicePinnersOrderFieldByField(val.by);
    const direction = val.direction == void 0 ? void 0 : newDeserializeDevicePinnersOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.newDeserializeDevicePinnersOrderField = newDeserializeDevicePinnersOrderField;
function newSerializeDevicePinners(val) {
    return { ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeDevicePinner(item);
        }), ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["order"]: val.order == void 0 ? void 0 : val.order.map(function (item) {
            return newSerializeDevicePinnersOrderField(item);
        }) };
}
exports.newSerializeDevicePinners = newSerializeDevicePinners;
function newDeserializeDevicePinners(val) {
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeDevicePinner(itm);
    }) : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return newDeserializeDevicePinnersOrderField(itm);
    }) : void 0;
    return { entries: entries, limit: limit, nextMarker: nextMarker, order: order };
}
exports.newDeserializeDevicePinners = newDeserializeDevicePinners;
function newSerializeCommentItemField(val) {
    return { ["id"]: val.id, ["type"]: val.type };
}
exports.newSerializeCommentItemField = newSerializeCommentItemField;
function newDeserializeCommentItemField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    return { id: id, type: type };
}
exports.newDeserializeCommentItemField = newDeserializeCommentItemField;
function newSerializeComment(val) {
    const base = newSerializeCommentBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"Comment\"";
    }
    return Object.assign(Object.assign({}, base), { ["is_reply_comment"]: val.isReplyComment, ["message"]: val.message, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["item"]: val.item == void 0 ? void 0 : newSerializeCommentItemField(val.item) });
}
exports.newSerializeComment = newSerializeComment;
function newDeserializeComment(val) {
    const isReplyComment = (0, json_js_1.isJson)(val.is_reply_comment, "boolean") ? val.is_reply_comment : void 0;
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const item = val.item == void 0 ? void 0 : newDeserializeCommentItemField(val.item);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeCommentBaseTypeField(val.type);
    return { isReplyComment: isReplyComment, message: message, createdBy: createdBy, createdAt: createdAt, modifiedAt: modifiedAt, item: item, id: id, type: type };
}
exports.newDeserializeComment = newDeserializeComment;
function newSerializeCommentFull(val) {
    const base = newSerializeComment(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"CommentFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["tagged_message"]: val.taggedMessage });
}
exports.newSerializeCommentFull = newSerializeCommentFull;
function newDeserializeCommentFull(val) {
    const taggedMessage = (0, json_js_1.isJson)(val.tagged_message, "string") ? val.tagged_message : void 0;
    const isReplyComment = (0, json_js_1.isJson)(val.is_reply_comment, "boolean") ? val.is_reply_comment : void 0;
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const item = val.item == void 0 ? void 0 : newDeserializeCommentItemField(val.item);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeCommentBaseTypeField(val.type);
    return { taggedMessage: taggedMessage, isReplyComment: isReplyComment, message: message, createdBy: createdBy, createdAt: createdAt, modifiedAt: modifiedAt, item: item, id: id, type: type };
}
exports.newDeserializeCommentFull = newDeserializeCommentFull;
function newSerializeCommentsOrderFieldDirectionField(val) {
    return val;
}
exports.newSerializeCommentsOrderFieldDirectionField = newSerializeCommentsOrderFieldDirectionField;
function newDeserializeCommentsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CommentsOrderFieldDirectionField\"";
    }
    if (val == "ASC") {
        return "ASC";
    }
    if (val == "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCommentsOrderFieldDirectionField = newDeserializeCommentsOrderFieldDirectionField;
function newSerializeCommentsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction == void 0 ? void 0 : newSerializeCommentsOrderFieldDirectionField(val.direction) };
}
exports.newSerializeCommentsOrderField = newSerializeCommentsOrderField;
function newDeserializeCommentsOrderField(val) {
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction == void 0 ? void 0 : newDeserializeCommentsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.newDeserializeCommentsOrderField = newDeserializeCommentsOrderField;
function newSerializeComments(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order == void 0 ? void 0 : val.order.map(function (item) {
            return newSerializeCommentsOrderField(item);
        }), ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeComment(item);
        }) };
}
exports.newSerializeComments = newSerializeComments;
function newDeserializeComments(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return newDeserializeCommentsOrderField(itm);
    }) : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeComment(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.newDeserializeComments = newDeserializeComments;
function newSerializeShieldInformationBarrierSegmentRestriction(val) {
    const base = newSerializeShieldInformationBarrierSegmentRestrictionMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentRestriction\"";
    }
    return Object.assign(Object.assign({}, base), { ["shield_information_barrier"]: val.shieldInformationBarrier == void 0 ? void 0 : newSerializeShieldInformationBarrierBase(val.shieldInformationBarrier), ["created_at"]: val.createdAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserBase(val.createdBy), ["updated_at"]: val.updatedAt, ["updated_by"]: val.updatedBy == void 0 ? void 0 : newSerializeUserBase(val.updatedBy) });
}
exports.newSerializeShieldInformationBarrierSegmentRestriction = newSerializeShieldInformationBarrierSegmentRestriction;
function newDeserializeShieldInformationBarrierSegmentRestriction(val) {
    const shieldInformationBarrier = val.shield_information_barrier == void 0 ? void 0 : newDeserializeShieldInformationBarrierBase(val.shield_information_barrier);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserBase(val.created_by);
    const updatedAt = (0, json_js_1.isJson)(val.updated_at, "string") ? val.updated_at : void 0;
    const updatedBy = val.updated_by == void 0 ? void 0 : newDeserializeUserBase(val.updated_by);
    const shieldInformationBarrierSegment = newDeserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField(val.shield_information_barrier_segment);
    const restrictedSegment = newDeserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField(val.restricted_segment);
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { shieldInformationBarrier: shieldInformationBarrier, createdAt: createdAt, createdBy: createdBy, updatedAt: updatedAt, updatedBy: updatedBy, shieldInformationBarrierSegment: shieldInformationBarrierSegment, restrictedSegment: restrictedSegment, type: type, id: id };
}
exports.newDeserializeShieldInformationBarrierSegmentRestriction = newDeserializeShieldInformationBarrierSegmentRestriction;
function newSerializeShieldInformationBarrierSegmentMemberMini(val) {
    const base = newSerializeShieldInformationBarrierSegmentMemberBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentMemberMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["user"]: val.user == void 0 ? void 0 : newSerializeUserBase(val.user) });
}
exports.newSerializeShieldInformationBarrierSegmentMemberMini = newSerializeShieldInformationBarrierSegmentMemberMini;
function newDeserializeShieldInformationBarrierSegmentMemberMini(val) {
    const user = val.user == void 0 ? void 0 : newDeserializeUserBase(val.user);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierSegmentMemberBaseTypeField(val.type);
    return { user: user, id: id, type: type };
}
exports.newDeserializeShieldInformationBarrierSegmentMemberMini = newDeserializeShieldInformationBarrierSegmentMemberMini;
function newSerializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField(val) {
    return val;
}
exports.newSerializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField = newSerializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField;
function newDeserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField\"";
    }
    if (val == "shield_information_barrier_segment") {
        return "shield_information_barrier_segment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField = newDeserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField;
function newSerializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField(val.type) };
}
exports.newSerializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField = newSerializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField;
function newDeserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField = newDeserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField;
function newSerializeShieldInformationBarrierSegmentMember(val) {
    const base = newSerializeShieldInformationBarrierSegmentMemberMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentMember\"";
    }
    return Object.assign(Object.assign({}, base), { ["shield_information_barrier"]: val.shieldInformationBarrier == void 0 ? void 0 : newSerializeShieldInformationBarrierBase(val.shieldInformationBarrier), ["shield_information_barrier_segment"]: val.shieldInformationBarrierSegment == void 0 ? void 0 : newSerializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField(val.shieldInformationBarrierSegment), ["user"]: val.user == void 0 ? void 0 : newSerializeUserBase(val.user), ["created_at"]: val.createdAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserBase(val.createdBy), ["updated_at"]: val.updatedAt, ["updated_by"]: val.updatedBy == void 0 ? void 0 : newSerializeUserBase(val.updatedBy) });
}
exports.newSerializeShieldInformationBarrierSegmentMember = newSerializeShieldInformationBarrierSegmentMember;
function newDeserializeShieldInformationBarrierSegmentMember(val) {
    const shieldInformationBarrier = val.shield_information_barrier == void 0 ? void 0 : newDeserializeShieldInformationBarrierBase(val.shield_information_barrier);
    const shieldInformationBarrierSegment = val.shield_information_barrier_segment == void 0 ? void 0 : newDeserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField(val.shield_information_barrier_segment);
    const user = val.user == void 0 ? void 0 : newDeserializeUserBase(val.user);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserBase(val.created_by);
    const updatedAt = (0, json_js_1.isJson)(val.updated_at, "string") ? val.updated_at : void 0;
    const updatedBy = val.updated_by == void 0 ? void 0 : newDeserializeUserBase(val.updated_by);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierSegmentMemberBaseTypeField(val.type);
    return { shieldInformationBarrier: shieldInformationBarrier, shieldInformationBarrierSegment: shieldInformationBarrierSegment, user: user, createdAt: createdAt, createdBy: createdBy, updatedAt: updatedAt, updatedBy: updatedBy, id: id, type: type };
}
exports.newDeserializeShieldInformationBarrierSegmentMember = newDeserializeShieldInformationBarrierSegmentMember;
function newSerializeShieldInformationBarrierSegmentTypeField(val) {
    return val;
}
exports.newSerializeShieldInformationBarrierSegmentTypeField = newSerializeShieldInformationBarrierSegmentTypeField;
function newDeserializeShieldInformationBarrierSegmentTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentTypeField\"";
    }
    if (val == "shield_information_barrier_segment") {
        return "shield_information_barrier_segment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeShieldInformationBarrierSegmentTypeField = newDeserializeShieldInformationBarrierSegmentTypeField;
function newSerializeShieldInformationBarrierSegment(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeShieldInformationBarrierSegmentTypeField(val.type), ["shield_information_barrier"]: val.shieldInformationBarrier == void 0 ? void 0 : newSerializeShieldInformationBarrierBase(val.shieldInformationBarrier), ["name"]: val.name, ["description"]: val.description, ["created_at"]: val.createdAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserBase(val.createdBy), ["updated_at"]: val.updatedAt, ["updated_by"]: val.updatedBy == void 0 ? void 0 : newSerializeUserBase(val.updatedBy) };
}
exports.newSerializeShieldInformationBarrierSegment = newSerializeShieldInformationBarrierSegment;
function newDeserializeShieldInformationBarrierSegment(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierSegmentTypeField(val.type);
    const shieldInformationBarrier = val.shield_information_barrier == void 0 ? void 0 : newDeserializeShieldInformationBarrierBase(val.shield_information_barrier);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserBase(val.created_by);
    const updatedAt = (0, json_js_1.isJson)(val.updated_at, "string") ? val.updated_at : void 0;
    const updatedBy = val.updated_by == void 0 ? void 0 : newDeserializeUserBase(val.updated_by);
    return { id: id, type: type, shieldInformationBarrier: shieldInformationBarrier, name: name, description: description, createdAt: createdAt, createdBy: createdBy, updatedAt: updatedAt, updatedBy: updatedBy };
}
exports.newDeserializeShieldInformationBarrierSegment = newDeserializeShieldInformationBarrierSegment;
function newSerializeShieldInformationBarrierReportShieldInformationBarrierField(val) {
    return {};
}
exports.newSerializeShieldInformationBarrierReportShieldInformationBarrierField = newSerializeShieldInformationBarrierReportShieldInformationBarrierField;
function newDeserializeShieldInformationBarrierReportShieldInformationBarrierField(val) {
    return {};
}
exports.newDeserializeShieldInformationBarrierReportShieldInformationBarrierField = newDeserializeShieldInformationBarrierReportShieldInformationBarrierField;
function newSerializeShieldInformationBarrierReportStatusField(val) {
    return val;
}
exports.newSerializeShieldInformationBarrierReportStatusField = newSerializeShieldInformationBarrierReportStatusField;
function newDeserializeShieldInformationBarrierReportStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierReportStatusField\"";
    }
    if (val == "pending") {
        return "pending";
    }
    if (val == "error") {
        return "error";
    }
    if (val == "done") {
        return "done";
    }
    if (val == "cancelled") {
        return "cancelled";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeShieldInformationBarrierReportStatusField = newDeserializeShieldInformationBarrierReportStatusField;
function newSerializeShieldInformationBarrierReportDetailsField(val) {
    return {};
}
exports.newSerializeShieldInformationBarrierReportDetailsField = newSerializeShieldInformationBarrierReportDetailsField;
function newDeserializeShieldInformationBarrierReportDetailsField(val) {
    return {};
}
exports.newDeserializeShieldInformationBarrierReportDetailsField = newDeserializeShieldInformationBarrierReportDetailsField;
function newSerializeShieldInformationBarrierReport(val) {
    const base = newSerializeShieldInformationBarrierReportBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierReport\"";
    }
    return Object.assign(Object.assign({}, base), { ["shield_information_barrier"]: val.shieldInformationBarrier == void 0 ? void 0 : newSerializeShieldInformationBarrierReportShieldInformationBarrierField(val.shieldInformationBarrier), ["status"]: val.status == void 0 ? void 0 : newSerializeShieldInformationBarrierReportStatusField(val.status), ["details"]: val.details == void 0 ? void 0 : newSerializeShieldInformationBarrierReportDetailsField(val.details), ["created_at"]: val.createdAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserBase(val.createdBy), ["updated_at"]: val.updatedAt });
}
exports.newSerializeShieldInformationBarrierReport = newSerializeShieldInformationBarrierReport;
function newDeserializeShieldInformationBarrierReport(val) {
    const shieldInformationBarrier = val.shield_information_barrier == void 0 ? void 0 : newDeserializeShieldInformationBarrierReportShieldInformationBarrierField(val.shield_information_barrier);
    const status = val.status == void 0 ? void 0 : newDeserializeShieldInformationBarrierReportStatusField(val.status);
    const details = val.details == void 0 ? void 0 : newDeserializeShieldInformationBarrierReportDetailsField(val.details);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserBase(val.created_by);
    const updatedAt = (0, json_js_1.isJson)(val.updated_at, "string") ? val.updated_at : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierReportBaseTypeField(val.type);
    return { shieldInformationBarrier: shieldInformationBarrier, status: status, details: details, createdAt: createdAt, createdBy: createdBy, updatedAt: updatedAt, id: id, type: type };
}
exports.newDeserializeShieldInformationBarrierReport = newDeserializeShieldInformationBarrierReport;
function newSerializeShieldInformationBarrierTypeField(val) {
    return val;
}
exports.newSerializeShieldInformationBarrierTypeField = newSerializeShieldInformationBarrierTypeField;
function newDeserializeShieldInformationBarrierTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierTypeField\"";
    }
    if (val == "shield_information_barrier") {
        return "shield_information_barrier";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeShieldInformationBarrierTypeField = newDeserializeShieldInformationBarrierTypeField;
function newSerializeShieldInformationBarrierStatusField(val) {
    return val;
}
exports.newSerializeShieldInformationBarrierStatusField = newSerializeShieldInformationBarrierStatusField;
function newDeserializeShieldInformationBarrierStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierStatusField\"";
    }
    if (val == "draft") {
        return "draft";
    }
    if (val == "pending") {
        return "pending";
    }
    if (val == "disabled") {
        return "disabled";
    }
    if (val == "enabled") {
        return "enabled";
    }
    if (val == "invalid") {
        return "invalid";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeShieldInformationBarrierStatusField = newDeserializeShieldInformationBarrierStatusField;
function newSerializeShieldInformationBarrier(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeShieldInformationBarrierTypeField(val.type), ["enterprise"]: val.enterprise == void 0 ? void 0 : newSerializeEnterpriseBase(val.enterprise), ["status"]: val.status == void 0 ? void 0 : newSerializeShieldInformationBarrierStatusField(val.status), ["created_at"]: val.createdAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserBase(val.createdBy), ["updated_at"]: val.updatedAt, ["updated_by"]: val.updatedBy == void 0 ? void 0 : newSerializeUserBase(val.updatedBy), ["enabled_at"]: val.enabledAt, ["enabled_by"]: val.enabledBy == void 0 ? void 0 : newSerializeUserBase(val.enabledBy) };
}
exports.newSerializeShieldInformationBarrier = newSerializeShieldInformationBarrier;
function newDeserializeShieldInformationBarrier(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeShieldInformationBarrierTypeField(val.type);
    const enterprise = val.enterprise == void 0 ? void 0 : newDeserializeEnterpriseBase(val.enterprise);
    const status = val.status == void 0 ? void 0 : newDeserializeShieldInformationBarrierStatusField(val.status);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserBase(val.created_by);
    const updatedAt = (0, json_js_1.isJson)(val.updated_at, "string") ? val.updated_at : void 0;
    const updatedBy = val.updated_by == void 0 ? void 0 : newDeserializeUserBase(val.updated_by);
    const enabledAt = (0, json_js_1.isJson)(val.enabled_at, "string") ? val.enabled_at : void 0;
    const enabledBy = val.enabled_by == void 0 ? void 0 : newDeserializeUserBase(val.enabled_by);
    return { id: id, type: type, enterprise: enterprise, status: status, createdAt: createdAt, createdBy: createdBy, updatedAt: updatedAt, updatedBy: updatedBy, enabledAt: enabledAt, enabledBy: enabledBy };
}
exports.newDeserializeShieldInformationBarrier = newDeserializeShieldInformationBarrier;
function newSerializeFolderLockLockedOperationsField(val) {
    return { ["move"]: val.move, ["delete"]: val.delete };
}
exports.newSerializeFolderLockLockedOperationsField = newSerializeFolderLockLockedOperationsField;
function newDeserializeFolderLockLockedOperationsField(val) {
    const move = val.move;
    const _delete = val.delete;
    return { move: move, delete: _delete };
}
exports.newDeserializeFolderLockLockedOperationsField = newDeserializeFolderLockLockedOperationsField;
function newSerializeFolderLock(val) {
    return { ["folder"]: val.folder == void 0 ? void 0 : newSerializeFolderMini(val.folder), ["id"]: val.id, ["type"]: val.type, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserBase(val.createdBy), ["created_at"]: val.createdAt, ["locked_operations"]: val.lockedOperations == void 0 ? void 0 : newSerializeFolderLockLockedOperationsField(val.lockedOperations), ["lock_type"]: val.lockType };
}
exports.newSerializeFolderLock = newSerializeFolderLock;
function newDeserializeFolderLock(val) {
    const folder = val.folder == void 0 ? void 0 : newDeserializeFolderMini(val.folder);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserBase(val.created_by);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const lockedOperations = val.locked_operations == void 0 ? void 0 : newDeserializeFolderLockLockedOperationsField(val.locked_operations);
    const lockType = (0, json_js_1.isJson)(val.lock_type, "string") ? val.lock_type : void 0;
    return { folder: folder, id: id, type: type, createdBy: createdBy, createdAt: createdAt, lockedOperations: lockedOperations, lockType: lockType };
}
exports.newDeserializeFolderLock = newDeserializeFolderLock;
function newSerializeFolderLocks(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeFolderLock(item);
        }) };
}
exports.newSerializeFolderLocks = newSerializeFolderLocks;
function newDeserializeFolderLocks(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeFolderLock(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeFolderLocks = newDeserializeFolderLocks;
function newSerializeWatermarkWatermarkField(val) {
    return { ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt };
}
exports.newSerializeWatermarkWatermarkField = newSerializeWatermarkWatermarkField;
function newDeserializeWatermarkWatermarkField(val) {
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    return { createdAt: createdAt, modifiedAt: modifiedAt };
}
exports.newDeserializeWatermarkWatermarkField = newDeserializeWatermarkWatermarkField;
function newSerializeWatermark(val) {
    return { ["watermark"]: val.watermark == void 0 ? void 0 : newSerializeWatermarkWatermarkField(val.watermark) };
}
exports.newSerializeWatermark = newSerializeWatermark;
function newDeserializeWatermark(val) {
    const watermark = val.watermark == void 0 ? void 0 : newDeserializeWatermarkWatermarkField(val.watermark);
    return { watermark: watermark };
}
exports.newDeserializeWatermark = newDeserializeWatermark;
function newSerializeWebhookMiniTypeField(val) {
    return val;
}
exports.newSerializeWebhookMiniTypeField = newSerializeWebhookMiniTypeField;
function newDeserializeWebhookMiniTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebhookMiniTypeField\"";
    }
    if (val == "webhook") {
        return "webhook";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWebhookMiniTypeField = newDeserializeWebhookMiniTypeField;
function newSerializeWebhookMiniTargetFieldTypeField(val) {
    return val;
}
exports.newSerializeWebhookMiniTargetFieldTypeField = newSerializeWebhookMiniTargetFieldTypeField;
function newDeserializeWebhookMiniTargetFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebhookMiniTargetFieldTypeField\"";
    }
    if (val == "file") {
        return "file";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWebhookMiniTargetFieldTypeField = newDeserializeWebhookMiniTargetFieldTypeField;
function newSerializeWebhookMiniTargetField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeWebhookMiniTargetFieldTypeField(val.type) };
}
exports.newSerializeWebhookMiniTargetField = newSerializeWebhookMiniTargetField;
function newDeserializeWebhookMiniTargetField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeWebhookMiniTargetFieldTypeField(val.type);
    return { id: id, type: type };
}
exports.newDeserializeWebhookMiniTargetField = newDeserializeWebhookMiniTargetField;
function newSerializeWebhookMini(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeWebhookMiniTypeField(val.type), ["target"]: val.target == void 0 ? void 0 : newSerializeWebhookMiniTargetField(val.target) };
}
exports.newSerializeWebhookMini = newSerializeWebhookMini;
function newDeserializeWebhookMini(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeWebhookMiniTypeField(val.type);
    const target = val.target == void 0 ? void 0 : newDeserializeWebhookMiniTargetField(val.target);
    return { id: id, type: type, target: target };
}
exports.newDeserializeWebhookMini = newDeserializeWebhookMini;
function newSerializeWebhooks(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeWebhookMini(item);
        }) };
}
exports.newSerializeWebhooks = newSerializeWebhooks;
function newDeserializeWebhooks(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeWebhookMini(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeWebhooks = newDeserializeWebhooks;
function newSerializeWebhookTriggersField(val) {
    return val;
}
exports.newSerializeWebhookTriggersField = newSerializeWebhookTriggersField;
function newDeserializeWebhookTriggersField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebhookTriggersField\"";
    }
    if (val == "FILE.UPLOADED") {
        return "FILE.UPLOADED";
    }
    if (val == "FILE.PREVIEWED") {
        return "FILE.PREVIEWED";
    }
    if (val == "FILE.DOWNLOADED") {
        return "FILE.DOWNLOADED";
    }
    if (val == "FILE.TRASHED") {
        return "FILE.TRASHED";
    }
    if (val == "FILE.DELETED") {
        return "FILE.DELETED";
    }
    if (val == "FILE.RESTORED") {
        return "FILE.RESTORED";
    }
    if (val == "FILE.COPIED") {
        return "FILE.COPIED";
    }
    if (val == "FILE.MOVED") {
        return "FILE.MOVED";
    }
    if (val == "FILE.LOCKED") {
        return "FILE.LOCKED";
    }
    if (val == "FILE.UNLOCKED") {
        return "FILE.UNLOCKED";
    }
    if (val == "FILE.RENAMED") {
        return "FILE.RENAMED";
    }
    if (val == "COMMENT.CREATED") {
        return "COMMENT.CREATED";
    }
    if (val == "COMMENT.UPDATED") {
        return "COMMENT.UPDATED";
    }
    if (val == "COMMENT.DELETED") {
        return "COMMENT.DELETED";
    }
    if (val == "TASK_ASSIGNMENT.CREATED") {
        return "TASK_ASSIGNMENT.CREATED";
    }
    if (val == "TASK_ASSIGNMENT.UPDATED") {
        return "TASK_ASSIGNMENT.UPDATED";
    }
    if (val == "METADATA_INSTANCE.CREATED") {
        return "METADATA_INSTANCE.CREATED";
    }
    if (val == "METADATA_INSTANCE.UPDATED") {
        return "METADATA_INSTANCE.UPDATED";
    }
    if (val == "METADATA_INSTANCE.DELETED") {
        return "METADATA_INSTANCE.DELETED";
    }
    if (val == "FOLDER.CREATED") {
        return "FOLDER.CREATED";
    }
    if (val == "FOLDER.RENAMED") {
        return "FOLDER.RENAMED";
    }
    if (val == "FOLDER.DOWNLOADED") {
        return "FOLDER.DOWNLOADED";
    }
    if (val == "FOLDER.RESTORED") {
        return "FOLDER.RESTORED";
    }
    if (val == "FOLDER.DELETED") {
        return "FOLDER.DELETED";
    }
    if (val == "FOLDER.COPIED") {
        return "FOLDER.COPIED";
    }
    if (val == "FOLDER.MOVED") {
        return "FOLDER.MOVED";
    }
    if (val == "FOLDER.TRASHED") {
        return "FOLDER.TRASHED";
    }
    if (val == "WEBHOOK.DELETED") {
        return "WEBHOOK.DELETED";
    }
    if (val == "COLLABORATION.CREATED") {
        return "COLLABORATION.CREATED";
    }
    if (val == "COLLABORATION.ACCEPTED") {
        return "COLLABORATION.ACCEPTED";
    }
    if (val == "COLLABORATION.REJECTED") {
        return "COLLABORATION.REJECTED";
    }
    if (val == "COLLABORATION.REMOVED") {
        return "COLLABORATION.REMOVED";
    }
    if (val == "COLLABORATION.UPDATED") {
        return "COLLABORATION.UPDATED";
    }
    if (val == "SHARED_LINK.DELETED") {
        return "SHARED_LINK.DELETED";
    }
    if (val == "SHARED_LINK.CREATED") {
        return "SHARED_LINK.CREATED";
    }
    if (val == "SHARED_LINK.UPDATED") {
        return "SHARED_LINK.UPDATED";
    }
    if (val == "SIGN_REQUEST.COMPLETED") {
        return "SIGN_REQUEST.COMPLETED";
    }
    if (val == "SIGN_REQUEST.DECLINED") {
        return "SIGN_REQUEST.DECLINED";
    }
    if (val == "SIGN_REQUEST.EXPIRED") {
        return "SIGN_REQUEST.EXPIRED";
    }
    if (val == "SIGN_REQUEST.SIGNER_EMAIL_BOUNCED") {
        return "SIGN_REQUEST.SIGNER_EMAIL_BOUNCED";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWebhookTriggersField = newDeserializeWebhookTriggersField;
function newSerializeWebhook(val) {
    const base = newSerializeWebhookMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"Webhook\"";
    }
    return Object.assign(Object.assign({}, base), { ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["address"]: val.address, ["triggers"]: val.triggers == void 0 ? void 0 : val.triggers.map(function (item) {
            return newSerializeWebhookTriggersField(item);
        }) });
}
exports.newSerializeWebhook = newSerializeWebhook;
function newDeserializeWebhook(val) {
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const address = (0, json_js_1.isJson)(val.address, "string") ? val.address : void 0;
    const triggers = (0, json_js_1.isJson)(val.triggers, "array") ? val.triggers.map(function (itm) {
        return newDeserializeWebhookTriggersField(itm);
    }) : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeWebhookMiniTypeField(val.type);
    const target = val.target == void 0 ? void 0 : newDeserializeWebhookMiniTargetField(val.target);
    return { createdBy: createdBy, createdAt: createdAt, address: address, triggers: triggers, id: id, type: type, target: target };
}
exports.newDeserializeWebhook = newDeserializeWebhook;
function newSerializeWebLinkBaseTypeField(val) {
    return val;
}
exports.newSerializeWebLinkBaseTypeField = newSerializeWebLinkBaseTypeField;
function newDeserializeWebLinkBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebLinkBaseTypeField\"";
    }
    if (val == "web_link") {
        return "web_link";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWebLinkBaseTypeField = newDeserializeWebLinkBaseTypeField;
function newSerializeWebLinkBase(val) {
    return { ["id"]: val.id, ["type"]: newSerializeWebLinkBaseTypeField(val.type), ["etag"]: val.etag };
}
exports.newSerializeWebLinkBase = newSerializeWebLinkBase;
function newDeserializeWebLinkBase(val) {
    const id = val.id;
    const type = newDeserializeWebLinkBaseTypeField(val.type);
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    return { id: id, type: type, etag: etag };
}
exports.newDeserializeWebLinkBase = newDeserializeWebLinkBase;
function newSerializeWebLinkMini(val) {
    const base = newSerializeWebLinkBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"WebLinkMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["url"]: val.url, ["sequence_id"]: val.sequenceId, ["name"]: val.name });
}
exports.newSerializeWebLinkMini = newSerializeWebLinkMini;
function newDeserializeWebLinkMini(val) {
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const id = val.id;
    const type = newDeserializeWebLinkBaseTypeField(val.type);
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    return { url: url, sequenceId: sequenceId, name: name, id: id, type: type, etag: etag };
}
exports.newDeserializeWebLinkMini = newDeserializeWebLinkMini;
function newSerializeFileMiniOrFolderMiniOrWebLinkMini(val) {
    if (val.type == "file") {
        return newSerializeFileMini(val);
    }
    if (val.type == "folder") {
        return newSerializeFolderMini(val);
    }
    if (val.type == "web_link") {
        return newSerializeWebLinkMini(val);
    }
    throw "unknown type";
}
exports.newSerializeFileMiniOrFolderMiniOrWebLinkMini = newSerializeFileMiniOrFolderMiniOrWebLinkMini;
function newDeserializeFileMiniOrFolderMiniOrWebLinkMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileMiniOrFolderMiniOrWebLinkMini\"";
    }
    if (val.type == "file") {
        return newDeserializeFileMini(val);
    }
    if (val.type == "folder") {
        return newDeserializeFolderMini(val);
    }
    if (val.type == "web_link") {
        return newDeserializeWebLinkMini(val);
    }
    throw "unknown type";
}
exports.newDeserializeFileMiniOrFolderMiniOrWebLinkMini = newDeserializeFileMiniOrFolderMiniOrWebLinkMini;
function newSerializeItemsOrderFieldDirectionField(val) {
    return val;
}
exports.newSerializeItemsOrderFieldDirectionField = newSerializeItemsOrderFieldDirectionField;
function newDeserializeItemsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ItemsOrderFieldDirectionField\"";
    }
    if (val == "ASC") {
        return "ASC";
    }
    if (val == "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeItemsOrderFieldDirectionField = newDeserializeItemsOrderFieldDirectionField;
function newSerializeItemsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction == void 0 ? void 0 : newSerializeItemsOrderFieldDirectionField(val.direction) };
}
exports.newSerializeItemsOrderField = newSerializeItemsOrderField;
function newDeserializeItemsOrderField(val) {
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction == void 0 ? void 0 : newDeserializeItemsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.newDeserializeItemsOrderField = newDeserializeItemsOrderField;
function newSerializeItems(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order == void 0 ? void 0 : val.order.map(function (item) {
            return newSerializeItemsOrderField(item);
        }), ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeFileMiniOrFolderMiniOrWebLinkMini(item);
        }) };
}
exports.newSerializeItems = newSerializeItems;
function newDeserializeItems(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return newDeserializeItemsOrderField(itm);
    }) : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeFileMiniOrFolderMiniOrWebLinkMini(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.newDeserializeItems = newDeserializeItems;
function newSerializeFolderPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return newSerializeFolderMini(item);
        }) };
}
exports.newSerializeFolderPathCollectionField = newSerializeFolderPathCollectionField;
function newDeserializeFolderPathCollectionField(val) {
    const totalCount = val.total_count;
    const entries = val.entries.map(function (itm) {
        return newDeserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeFolderPathCollectionField = newDeserializeFolderPathCollectionField;
function newSerializeFolderSharedLinkFieldAccessField(val) {
    return val;
}
exports.newSerializeFolderSharedLinkFieldAccessField = newSerializeFolderSharedLinkFieldAccessField;
function newDeserializeFolderSharedLinkFieldAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderSharedLinkFieldAccessField\"";
    }
    if (val == "open") {
        return "open";
    }
    if (val == "company") {
        return "company";
    }
    if (val == "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFolderSharedLinkFieldAccessField = newDeserializeFolderSharedLinkFieldAccessField;
function newSerializeFolderSharedLinkFieldEffectiveAccessField(val) {
    return val;
}
exports.newSerializeFolderSharedLinkFieldEffectiveAccessField = newSerializeFolderSharedLinkFieldEffectiveAccessField;
function newDeserializeFolderSharedLinkFieldEffectiveAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderSharedLinkFieldEffectiveAccessField\"";
    }
    if (val == "open") {
        return "open";
    }
    if (val == "company") {
        return "company";
    }
    if (val == "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFolderSharedLinkFieldEffectiveAccessField = newDeserializeFolderSharedLinkFieldEffectiveAccessField;
function newSerializeFolderSharedLinkFieldEffectivePermissionField(val) {
    return val;
}
exports.newSerializeFolderSharedLinkFieldEffectivePermissionField = newSerializeFolderSharedLinkFieldEffectivePermissionField;
function newDeserializeFolderSharedLinkFieldEffectivePermissionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderSharedLinkFieldEffectivePermissionField\"";
    }
    if (val == "can_edit") {
        return "can_edit";
    }
    if (val == "can_download") {
        return "can_download";
    }
    if (val == "can_preview") {
        return "can_preview";
    }
    if (val == "no_access") {
        return "no_access";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFolderSharedLinkFieldEffectivePermissionField = newDeserializeFolderSharedLinkFieldEffectivePermissionField;
function newSerializeFolderSharedLinkFieldPermissionsField(val) {
    return { ["can_download"]: val.canDownload, ["can_preview"]: val.canPreview, ["can_edit"]: val.canEdit };
}
exports.newSerializeFolderSharedLinkFieldPermissionsField = newSerializeFolderSharedLinkFieldPermissionsField;
function newDeserializeFolderSharedLinkFieldPermissionsField(val) {
    const canDownload = val.can_download;
    const canPreview = val.can_preview;
    const canEdit = val.can_edit;
    return { canDownload: canDownload, canPreview: canPreview, canEdit: canEdit };
}
exports.newDeserializeFolderSharedLinkFieldPermissionsField = newDeserializeFolderSharedLinkFieldPermissionsField;
function newSerializeFolderSharedLinkField(val) {
    return { ["url"]: val.url, ["download_url"]: val.downloadUrl, ["vanity_url"]: val.vanityUrl, ["vanity_name"]: val.vanityName, ["access"]: val.access == void 0 ? void 0 : newSerializeFolderSharedLinkFieldAccessField(val.access), ["effective_access"]: newSerializeFolderSharedLinkFieldEffectiveAccessField(val.effectiveAccess), ["effective_permission"]: newSerializeFolderSharedLinkFieldEffectivePermissionField(val.effectivePermission), ["unshared_at"]: val.unsharedAt, ["is_password_enabled"]: val.isPasswordEnabled, ["permissions"]: val.permissions == void 0 ? void 0 : newSerializeFolderSharedLinkFieldPermissionsField(val.permissions), ["download_count"]: val.downloadCount, ["preview_count"]: val.previewCount };
}
exports.newSerializeFolderSharedLinkField = newSerializeFolderSharedLinkField;
function newDeserializeFolderSharedLinkField(val) {
    const url = val.url;
    const downloadUrl = (0, json_js_1.isJson)(val.download_url, "string") ? val.download_url : void 0;
    const vanityUrl = (0, json_js_1.isJson)(val.vanity_url, "string") ? val.vanity_url : void 0;
    const vanityName = (0, json_js_1.isJson)(val.vanity_name, "string") ? val.vanity_name : void 0;
    const access = val.access == void 0 ? void 0 : newDeserializeFolderSharedLinkFieldAccessField(val.access);
    const effectiveAccess = newDeserializeFolderSharedLinkFieldEffectiveAccessField(val.effective_access);
    const effectivePermission = newDeserializeFolderSharedLinkFieldEffectivePermissionField(val.effective_permission);
    const unsharedAt = (0, json_js_1.isJson)(val.unshared_at, "string") ? val.unshared_at : void 0;
    const isPasswordEnabled = val.is_password_enabled;
    const permissions = val.permissions == void 0 ? void 0 : newDeserializeFolderSharedLinkFieldPermissionsField(val.permissions);
    const downloadCount = val.download_count;
    const previewCount = val.preview_count;
    return { url: url, downloadUrl: downloadUrl, vanityUrl: vanityUrl, vanityName: vanityName, access: access, effectiveAccess: effectiveAccess, effectivePermission: effectivePermission, unsharedAt: unsharedAt, isPasswordEnabled: isPasswordEnabled, permissions: permissions, downloadCount: downloadCount, previewCount: previewCount };
}
exports.newDeserializeFolderSharedLinkField = newDeserializeFolderSharedLinkField;
function newSerializeFolderFolderUploadEmailFieldAccessField(val) {
    return val;
}
exports.newSerializeFolderFolderUploadEmailFieldAccessField = newSerializeFolderFolderUploadEmailFieldAccessField;
function newDeserializeFolderFolderUploadEmailFieldAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderFolderUploadEmailFieldAccessField\"";
    }
    if (val == "open") {
        return "open";
    }
    if (val == "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFolderFolderUploadEmailFieldAccessField = newDeserializeFolderFolderUploadEmailFieldAccessField;
function newSerializeFolderFolderUploadEmailField(val) {
    return { ["access"]: val.access == void 0 ? void 0 : newSerializeFolderFolderUploadEmailFieldAccessField(val.access), ["email"]: val.email };
}
exports.newSerializeFolderFolderUploadEmailField = newSerializeFolderFolderUploadEmailField;
function newDeserializeFolderFolderUploadEmailField(val) {
    const access = val.access == void 0 ? void 0 : newDeserializeFolderFolderUploadEmailFieldAccessField(val.access);
    const email = (0, json_js_1.isJson)(val.email, "string") ? val.email : void 0;
    return { access: access, email: email };
}
exports.newDeserializeFolderFolderUploadEmailField = newDeserializeFolderFolderUploadEmailField;
function newSerializeFolderItemStatusField(val) {
    return val;
}
exports.newSerializeFolderItemStatusField = newSerializeFolderItemStatusField;
function newDeserializeFolderItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderItemStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "trashed") {
        return "trashed";
    }
    if (val == "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFolderItemStatusField = newDeserializeFolderItemStatusField;
function newSerializeFolder(val) {
    const base = newSerializeFolderMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"Folder\"";
    }
    return Object.assign(Object.assign({}, base), { ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["description"]: val.description, ["size"]: val.size, ["path_collection"]: val.pathCollection == void 0 ? void 0 : newSerializeFolderPathCollectionField(val.pathCollection), ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["modified_by"]: val.modifiedBy == void 0 ? void 0 : newSerializeUserMini(val.modifiedBy), ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["owned_by"]: val.ownedBy == void 0 ? void 0 : newSerializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink == void 0 ? void 0 : newSerializeFolderSharedLinkField(val.sharedLink), ["folder_upload_email"]: val.folderUploadEmail == void 0 ? void 0 : newSerializeFolderFolderUploadEmailField(val.folderUploadEmail), ["parent"]: val.parent == void 0 ? void 0 : newSerializeFolderMini(val.parent), ["item_status"]: val.itemStatus == void 0 ? void 0 : newSerializeFolderItemStatusField(val.itemStatus), ["item_collection"]: val.itemCollection == void 0 ? void 0 : newSerializeItems(val.itemCollection) });
}
exports.newSerializeFolder = newSerializeFolder;
function newDeserializeFolder(val) {
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    const pathCollection = val.path_collection == void 0 ? void 0 : newDeserializeFolderPathCollectionField(val.path_collection);
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeUserMini(val.modified_by);
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const ownedBy = val.owned_by == void 0 ? void 0 : newDeserializeUserMini(val.owned_by);
    const sharedLink = val.shared_link == void 0 ? void 0 : newDeserializeFolderSharedLinkField(val.shared_link);
    const folderUploadEmail = val.folder_upload_email == void 0 ? void 0 : newDeserializeFolderFolderUploadEmailField(val.folder_upload_email);
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const itemStatus = val.item_status == void 0 ? void 0 : newDeserializeFolderItemStatusField(val.item_status);
    const itemCollection = val.item_collection == void 0 ? void 0 : newDeserializeItems(val.item_collection);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeFolderBaseTypeField(val.type);
    return { createdAt: createdAt, modifiedAt: modifiedAt, description: description, size: size, pathCollection: pathCollection, createdBy: createdBy, modifiedBy: modifiedBy, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, ownedBy: ownedBy, sharedLink: sharedLink, folderUploadEmail: folderUploadEmail, parent: parent, itemStatus: itemStatus, itemCollection: itemCollection, name: name, sequenceId: sequenceId, id: id, etag: etag, type: type };
}
exports.newDeserializeFolder = newDeserializeFolder;
function newSerializeEventSourceOrFileOrFolderOrUser(val) {
    throw "Can't serialize EventSourceOrFileOrFolderOrUser";
}
exports.newSerializeEventSourceOrFileOrFolderOrUser = newSerializeEventSourceOrFileOrFolderOrUser;
function newDeserializeEventSourceOrFileOrFolderOrUser(val) {
    throw "Can't deserialize EventSourceOrFileOrFolderOrUser";
}
exports.newDeserializeEventSourceOrFileOrFolderOrUser = newDeserializeEventSourceOrFileOrFolderOrUser;
function newSerializeEventEventTypeField(val) {
    return val;
}
exports.newSerializeEventEventTypeField = newSerializeEventEventTypeField;
function newDeserializeEventEventTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"EventEventTypeField\"";
    }
    if (val == "ACCESS_GRANTED") {
        return "ACCESS_GRANTED";
    }
    if (val == "ACCESS_REVOKED") {
        return "ACCESS_REVOKED";
    }
    if (val == "ADD_DEVICE_ASSOCIATION") {
        return "ADD_DEVICE_ASSOCIATION";
    }
    if (val == "ADD_LOGIN_ACTIVITY_DEVICE") {
        return "ADD_LOGIN_ACTIVITY_DEVICE";
    }
    if (val == "ADMIN_LOGIN") {
        return "ADMIN_LOGIN";
    }
    if (val == "APPLICATION_CREATED") {
        return "APPLICATION_CREATED";
    }
    if (val == "APPLICATION_PUBLIC_KEY_ADDED") {
        return "APPLICATION_PUBLIC_KEY_ADDED";
    }
    if (val == "APPLICATION_PUBLIC_KEY_DELETED") {
        return "APPLICATION_PUBLIC_KEY_DELETED";
    }
    if (val == "CHANGE_ADMIN_ROLE") {
        return "CHANGE_ADMIN_ROLE";
    }
    if (val == "CHANGE_FOLDER_PERMISSION") {
        return "CHANGE_FOLDER_PERMISSION";
    }
    if (val == "COLLABORATION_ACCEPT") {
        return "COLLABORATION_ACCEPT";
    }
    if (val == "COLLABORATION_EXPIRATION") {
        return "COLLABORATION_EXPIRATION";
    }
    if (val == "COLLABORATION_INVITE") {
        return "COLLABORATION_INVITE";
    }
    if (val == "COLLABORATION_REMOVE") {
        return "COLLABORATION_REMOVE";
    }
    if (val == "COLLABORATION_ROLE_CHANGE") {
        return "COLLABORATION_ROLE_CHANGE";
    }
    if (val == "COLLAB_ADD_COLLABORATOR") {
        return "COLLAB_ADD_COLLABORATOR";
    }
    if (val == "COLLAB_INVITE_COLLABORATOR") {
        return "COLLAB_INVITE_COLLABORATOR";
    }
    if (val == "COLLAB_REMOVE_COLLABORATOR") {
        return "COLLAB_REMOVE_COLLABORATOR";
    }
    if (val == "COLLAB_ROLE_CHANGE") {
        return "COLLAB_ROLE_CHANGE";
    }
    if (val == "COMMENT_CREATE") {
        return "COMMENT_CREATE";
    }
    if (val == "COMMENT_DELETE") {
        return "COMMENT_DELETE";
    }
    if (val == "CONTENT_ACCESS") {
        return "CONTENT_ACCESS";
    }
    if (val == "CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY") {
        return "CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY";
    }
    if (val == "CONTENT_WORKFLOW_AUTOMATION_ADD") {
        return "CONTENT_WORKFLOW_AUTOMATION_ADD";
    }
    if (val == "CONTENT_WORKFLOW_AUTOMATION_DELETE") {
        return "CONTENT_WORKFLOW_AUTOMATION_DELETE";
    }
    if (val == "CONTENT_WORKFLOW_POLICY_ADD") {
        return "CONTENT_WORKFLOW_POLICY_ADD";
    }
    if (val == "CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION") {
        return "CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION";
    }
    if (val == "CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION") {
        return "CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION";
    }
    if (val == "COPY") {
        return "COPY";
    }
    if (val == "DATA_RETENTION_CREATE_RETENTION") {
        return "DATA_RETENTION_CREATE_RETENTION";
    }
    if (val == "DATA_RETENTION_REMOVE_RETENTION") {
        return "DATA_RETENTION_REMOVE_RETENTION";
    }
    if (val == "DELETE") {
        return "DELETE";
    }
    if (val == "DELETE_USER") {
        return "DELETE_USER";
    }
    if (val == "DEVICE_TRUST_CHECK_FAILED") {
        return "DEVICE_TRUST_CHECK_FAILED";
    }
    if (val == "DOWNLOAD") {
        return "DOWNLOAD";
    }
    if (val == "EDIT") {
        return "EDIT";
    }
    if (val == "EDIT_USER") {
        return "EDIT_USER";
    }
    if (val == "EMAIL_ALIAS_CONFIRM") {
        return "EMAIL_ALIAS_CONFIRM";
    }
    if (val == "EMAIL_ALIAS_REMOVE") {
        return "EMAIL_ALIAS_REMOVE";
    }
    if (val == "ENABLE_TWO_FACTOR_AUTH") {
        return "ENABLE_TWO_FACTOR_AUTH";
    }
    if (val == "ENTERPRISE_APP_AUTHORIZATION_UPDATE") {
        return "ENTERPRISE_APP_AUTHORIZATION_UPDATE";
    }
    if (val == "FAILED_LOGIN") {
        return "FAILED_LOGIN";
    }
    if (val == "FILE_MARKED_MALICIOUS") {
        return "FILE_MARKED_MALICIOUS";
    }
    if (val == "FILE_WATERMARKED_DOWNLOAD") {
        return "FILE_WATERMARKED_DOWNLOAD";
    }
    if (val == "GROUP_ADD_ITEM") {
        return "GROUP_ADD_ITEM";
    }
    if (val == "GROUP_ADD_USER") {
        return "GROUP_ADD_USER";
    }
    if (val == "GROUP_CREATION") {
        return "GROUP_CREATION";
    }
    if (val == "GROUP_DELETION") {
        return "GROUP_DELETION";
    }
    if (val == "GROUP_EDITED") {
        return "GROUP_EDITED";
    }
    if (val == "GROUP_REMOVE_ITEM") {
        return "GROUP_REMOVE_ITEM";
    }
    if (val == "GROUP_REMOVE_USER") {
        return "GROUP_REMOVE_USER";
    }
    if (val == "ITEM_COPY") {
        return "ITEM_COPY";
    }
    if (val == "ITEM_CREATE") {
        return "ITEM_CREATE";
    }
    if (val == "ITEM_DOWNLOAD") {
        return "ITEM_DOWNLOAD";
    }
    if (val == "ITEM_MAKE_CURRENT_VERSION") {
        return "ITEM_MAKE_CURRENT_VERSION";
    }
    if (val == "ITEM_MODIFY") {
        return "ITEM_MODIFY";
    }
    if (val == "ITEM_MOVE") {
        return "ITEM_MOVE";
    }
    if (val == "ITEM_OPEN") {
        return "ITEM_OPEN";
    }
    if (val == "ITEM_PREVIEW") {
        return "ITEM_PREVIEW";
    }
    if (val == "ITEM_RENAME") {
        return "ITEM_RENAME";
    }
    if (val == "ITEM_SHARED") {
        return "ITEM_SHARED";
    }
    if (val == "ITEM_SHARED_CREATE") {
        return "ITEM_SHARED_CREATE";
    }
    if (val == "ITEM_SHARED_UNSHARE") {
        return "ITEM_SHARED_UNSHARE";
    }
    if (val == "ITEM_SHARED_UPDATE") {
        return "ITEM_SHARED_UPDATE";
    }
    if (val == "ITEM_SYNC") {
        return "ITEM_SYNC";
    }
    if (val == "ITEM_TRASH") {
        return "ITEM_TRASH";
    }
    if (val == "ITEM_UNDELETE_VIA_TRASH") {
        return "ITEM_UNDELETE_VIA_TRASH";
    }
    if (val == "ITEM_UNSYNC") {
        return "ITEM_UNSYNC";
    }
    if (val == "ITEM_UPLOAD") {
        return "ITEM_UPLOAD";
    }
    if (val == "LEGAL_HOLD_ASSIGNMENT_CREATE") {
        return "LEGAL_HOLD_ASSIGNMENT_CREATE";
    }
    if (val == "LEGAL_HOLD_ASSIGNMENT_DELETE") {
        return "LEGAL_HOLD_ASSIGNMENT_DELETE";
    }
    if (val == "LEGAL_HOLD_POLICY_CREATE") {
        return "LEGAL_HOLD_POLICY_CREATE";
    }
    if (val == "LEGAL_HOLD_POLICY_DELETE") {
        return "LEGAL_HOLD_POLICY_DELETE";
    }
    if (val == "LEGAL_HOLD_POLICY_UPDATE") {
        return "LEGAL_HOLD_POLICY_UPDATE";
    }
    if (val == "LOCK") {
        return "LOCK";
    }
    if (val == "LOCK_CREATE") {
        return "LOCK_CREATE";
    }
    if (val == "LOCK_DESTROY") {
        return "LOCK_DESTROY";
    }
    if (val == "LOGIN") {
        return "LOGIN";
    }
    if (val == "MASTER_INVITE_ACCEPT") {
        return "MASTER_INVITE_ACCEPT";
    }
    if (val == "MASTER_INVITE_REJECT") {
        return "MASTER_INVITE_REJECT";
    }
    if (val == "METADATA_INSTANCE_CREATE") {
        return "METADATA_INSTANCE_CREATE";
    }
    if (val == "METADATA_INSTANCE_DELETE") {
        return "METADATA_INSTANCE_DELETE";
    }
    if (val == "METADATA_INSTANCE_UPDATE") {
        return "METADATA_INSTANCE_UPDATE";
    }
    if (val == "METADATA_TEMPLATE_CREATE") {
        return "METADATA_TEMPLATE_CREATE";
    }
    if (val == "METADATA_TEMPLATE_DELETE") {
        return "METADATA_TEMPLATE_DELETE";
    }
    if (val == "METADATA_TEMPLATE_UPDATE") {
        return "METADATA_TEMPLATE_UPDATE";
    }
    if (val == "MOVE") {
        return "MOVE";
    }
    if (val == "NEW_USER") {
        return "NEW_USER";
    }
    if (val == "PREVIEW") {
        return "PREVIEW";
    }
    if (val == "REMOVE_DEVICE_ASSOCIATION") {
        return "REMOVE_DEVICE_ASSOCIATION";
    }
    if (val == "REMOVE_LOGIN_ACTIVITY_DEVICE") {
        return "REMOVE_LOGIN_ACTIVITY_DEVICE";
    }
    if (val == "RENAME") {
        return "RENAME";
    }
    if (val == "RETENTION_POLICY_ASSIGNMENT_ADD") {
        return "RETENTION_POLICY_ASSIGNMENT_ADD";
    }
    if (val == "SHARE") {
        return "SHARE";
    }
    if (val == "SHARE_EXPIRATION") {
        return "SHARE_EXPIRATION";
    }
    if (val == "SHIELD_ALERT") {
        return "SHIELD_ALERT";
    }
    if (val == "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED") {
        return "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED";
    }
    if (val == "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED_MISSING_JUSTIFICATION") {
        return "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED_MISSING_JUSTIFICATION";
    }
    if (val == "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED") {
        return "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED";
    }
    if (val == "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED_MISSING_JUSTIFICATION") {
        return "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED_MISSING_JUSTIFICATION";
    }
    if (val == "SHIELD_JUSTIFICATION_APPROVAL") {
        return "SHIELD_JUSTIFICATION_APPROVAL";
    }
    if (val == "SHIELD_SHARED_LINK_ACCESS_BLOCKED") {
        return "SHIELD_SHARED_LINK_ACCESS_BLOCKED";
    }
    if (val == "SHIELD_SHARED_LINK_STATUS_RESTRICTED_ON_CREATE") {
        return "SHIELD_SHARED_LINK_STATUS_RESTRICTED_ON_CREATE";
    }
    if (val == "SHIELD_SHARED_LINK_STATUS_RESTRICTED_ON_UPDATE") {
        return "SHIELD_SHARED_LINK_STATUS_RESTRICTED_ON_UPDATE";
    }
    if (val == "SIGN_DOCUMENT_ASSIGNED") {
        return "SIGN_DOCUMENT_ASSIGNED";
    }
    if (val == "SIGN_DOCUMENT_CANCELLED") {
        return "SIGN_DOCUMENT_CANCELLED";
    }
    if (val == "SIGN_DOCUMENT_COMPLETED") {
        return "SIGN_DOCUMENT_COMPLETED";
    }
    if (val == "SIGN_DOCUMENT_CONVERTED") {
        return "SIGN_DOCUMENT_CONVERTED";
    }
    if (val == "SIGN_DOCUMENT_CREATED") {
        return "SIGN_DOCUMENT_CREATED";
    }
    if (val == "SIGN_DOCUMENT_DECLINED") {
        return "SIGN_DOCUMENT_DECLINED";
    }
    if (val == "SIGN_DOCUMENT_EXPIRED") {
        return "SIGN_DOCUMENT_EXPIRED";
    }
    if (val == "SIGN_DOCUMENT_SIGNED") {
        return "SIGN_DOCUMENT_SIGNED";
    }
    if (val == "SIGN_DOCUMENT_VIEWED_BY_SIGNED") {
        return "SIGN_DOCUMENT_VIEWED_BY_SIGNED";
    }
    if (val == "SIGNER_DOWNLOADED") {
        return "SIGNER_DOWNLOADED";
    }
    if (val == "SIGNER_FORWARDED") {
        return "SIGNER_FORWARDED";
    }
    if (val == "STORAGE_EXPIRATION") {
        return "STORAGE_EXPIRATION";
    }
    if (val == "TAG_ITEM_CREATE") {
        return "TAG_ITEM_CREATE";
    }
    if (val == "TASK_ASSIGNMENT_CREATE") {
        return "TASK_ASSIGNMENT_CREATE";
    }
    if (val == "TASK_ASSIGNMENT_DELETE") {
        return "TASK_ASSIGNMENT_DELETE";
    }
    if (val == "TASK_ASSIGNMENT_UPDATE") {
        return "TASK_ASSIGNMENT_UPDATE";
    }
    if (val == "TASK_CREATE") {
        return "TASK_CREATE";
    }
    if (val == "TASK_UPDATE") {
        return "TASK_UPDATE";
    }
    if (val == "TERMS_OF_SERVICE_ACCEPT") {
        return "TERMS_OF_SERVICE_ACCEPT";
    }
    if (val == "TERMS_OF_SERVICE_REJECT") {
        return "TERMS_OF_SERVICE_REJECT";
    }
    if (val == "UNDELETE") {
        return "UNDELETE";
    }
    if (val == "UNLOCK") {
        return "UNLOCK";
    }
    if (val == "UNSHARE") {
        return "UNSHARE";
    }
    if (val == "UPDATE_COLLABORATION_EXPIRATION") {
        return "UPDATE_COLLABORATION_EXPIRATION";
    }
    if (val == "UPDATE_SHARE_EXPIRATION") {
        return "UPDATE_SHARE_EXPIRATION";
    }
    if (val == "UPLOAD") {
        return "UPLOAD";
    }
    if (val == "USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE") {
        return "USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE";
    }
    if (val == "WATERMARK_LABEL_CREATE") {
        return "WATERMARK_LABEL_CREATE";
    }
    if (val == "WATERMARK_LABEL_DELETE") {
        return "WATERMARK_LABEL_DELETE";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeEventEventTypeField = newDeserializeEventEventTypeField;
function newSerializeEventAdditionalDetailsField(val) {
    return {};
}
exports.newSerializeEventAdditionalDetailsField = newSerializeEventAdditionalDetailsField;
function newDeserializeEventAdditionalDetailsField(val) {
    return {};
}
exports.newDeserializeEventAdditionalDetailsField = newDeserializeEventAdditionalDetailsField;
function newSerializeEvent(val) {
    return { ["type"]: val.type, ["created_at"]: val.createdAt, ["recorded_at"]: val.recordedAt, ["event_id"]: val.eventId, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["event_type"]: val.eventType == void 0 ? void 0 : newSerializeEventEventTypeField(val.eventType), ["session_id"]: val.sessionId, ["source"]: val.source == void 0 ? void 0 : newSerializeEventSourceOrFileOrFolderOrUser(val.source), ["additional_details"]: val.additionalDetails == void 0 ? void 0 : newSerializeEventAdditionalDetailsField(val.additionalDetails) };
}
exports.newSerializeEvent = newSerializeEvent;
function newDeserializeEvent(val) {
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const recordedAt = (0, json_js_1.isJson)(val.recorded_at, "string") ? val.recorded_at : void 0;
    const eventId = (0, json_js_1.isJson)(val.event_id, "string") ? val.event_id : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const eventType = val.event_type == void 0 ? void 0 : newDeserializeEventEventTypeField(val.event_type);
    const sessionId = (0, json_js_1.isJson)(val.session_id, "string") ? val.session_id : void 0;
    const source = val.source == void 0 ? void 0 : newDeserializeEventSourceOrFileOrFolderOrUser(val.source);
    const additionalDetails = val.additional_details == void 0 ? void 0 : newDeserializeEventAdditionalDetailsField(val.additional_details);
    return { type: type, createdAt: createdAt, recordedAt: recordedAt, eventId: eventId, createdBy: createdBy, eventType: eventType, sessionId: sessionId, source: source, additionalDetails: additionalDetails };
}
exports.newDeserializeEvent = newDeserializeEvent;
function newSerializeEvents(val) {
    return { ["chunk_size"]: val.chunkSize, ["next_stream_position"]: val.nextStreamPosition, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeEvent(item);
        }) };
}
exports.newSerializeEvents = newSerializeEvents;
function newDeserializeEvents(val) {
    const chunkSize = (0, json_js_1.isJson)(val.chunk_size, "number") ? val.chunk_size : void 0;
    const nextStreamPosition = (0, json_js_1.isJson)(val.next_stream_position, "string") ? val.next_stream_position : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeEvent(itm);
    }) : void 0;
    return { chunkSize: chunkSize, nextStreamPosition: nextStreamPosition, entries: entries };
}
exports.newDeserializeEvents = newDeserializeEvents;
function newSerializeFileOrFolder(val) {
    if (val.type == "file") {
        return newSerializeFile(val);
    }
    if (val.type == "folder") {
        return newSerializeFolder(val);
    }
    throw "unknown type";
}
exports.newSerializeFileOrFolder = newSerializeFileOrFolder;
function newDeserializeFileOrFolder(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileOrFolder\"";
    }
    if (val.type == "file") {
        return newDeserializeFile(val);
    }
    if (val.type == "folder") {
        return newDeserializeFolder(val);
    }
    throw "unknown type";
}
exports.newDeserializeFileOrFolder = newDeserializeFileOrFolder;
function newSerializeMetadataQueryResults(val) {
    return { ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeFileOrFolder(item);
        }), ["limit"]: val.limit, ["next_marker"]: val.nextMarker };
}
exports.newSerializeMetadataQueryResults = newSerializeMetadataQueryResults;
function newDeserializeMetadataQueryResults(val) {
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeFileOrFolder(itm);
    }) : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "string") ? val.next_marker : void 0;
    return { entries: entries, limit: limit, nextMarker: nextMarker };
}
exports.newDeserializeMetadataQueryResults = newDeserializeMetadataQueryResults;
function newSerializeWebhookInvocationTypeField(val) {
    return val;
}
exports.newSerializeWebhookInvocationTypeField = newSerializeWebhookInvocationTypeField;
function newDeserializeWebhookInvocationTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebhookInvocationTypeField\"";
    }
    if (val == "webhook_event") {
        return "webhook_event";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWebhookInvocationTypeField = newDeserializeWebhookInvocationTypeField;
function newSerializeWebhookInvocationTriggerField(val) {
    return val;
}
exports.newSerializeWebhookInvocationTriggerField = newSerializeWebhookInvocationTriggerField;
function newDeserializeWebhookInvocationTriggerField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebhookInvocationTriggerField\"";
    }
    if (val == "FILE.UPLOADED") {
        return "FILE.UPLOADED";
    }
    if (val == "FILE.PREVIEWED") {
        return "FILE.PREVIEWED";
    }
    if (val == "FILE.DOWNLOADED") {
        return "FILE.DOWNLOADED";
    }
    if (val == "FILE.TRASHED") {
        return "FILE.TRASHED";
    }
    if (val == "FILE.DELETED") {
        return "FILE.DELETED";
    }
    if (val == "FILE.RESTORED") {
        return "FILE.RESTORED";
    }
    if (val == "FILE.COPIED") {
        return "FILE.COPIED";
    }
    if (val == "FILE.MOVED") {
        return "FILE.MOVED";
    }
    if (val == "FILE.LOCKED") {
        return "FILE.LOCKED";
    }
    if (val == "FILE.UNLOCKED") {
        return "FILE.UNLOCKED";
    }
    if (val == "FILE.RENAMED") {
        return "FILE.RENAMED";
    }
    if (val == "COMMENT.CREATED") {
        return "COMMENT.CREATED";
    }
    if (val == "COMMENT.UPDATED") {
        return "COMMENT.UPDATED";
    }
    if (val == "COMMENT.DELETED") {
        return "COMMENT.DELETED";
    }
    if (val == "TASK_ASSIGNMENT.CREATED") {
        return "TASK_ASSIGNMENT.CREATED";
    }
    if (val == "TASK_ASSIGNMENT.UPDATED") {
        return "TASK_ASSIGNMENT.UPDATED";
    }
    if (val == "METADATA_INSTANCE.CREATED") {
        return "METADATA_INSTANCE.CREATED";
    }
    if (val == "METADATA_INSTANCE.UPDATED") {
        return "METADATA_INSTANCE.UPDATED";
    }
    if (val == "METADATA_INSTANCE.DELETED") {
        return "METADATA_INSTANCE.DELETED";
    }
    if (val == "FOLDER.CREATED") {
        return "FOLDER.CREATED";
    }
    if (val == "FOLDER.RENAMED") {
        return "FOLDER.RENAMED";
    }
    if (val == "FOLDER.DOWNLOADED") {
        return "FOLDER.DOWNLOADED";
    }
    if (val == "FOLDER.RESTORED") {
        return "FOLDER.RESTORED";
    }
    if (val == "FOLDER.DELETED") {
        return "FOLDER.DELETED";
    }
    if (val == "FOLDER.COPIED") {
        return "FOLDER.COPIED";
    }
    if (val == "FOLDER.MOVED") {
        return "FOLDER.MOVED";
    }
    if (val == "FOLDER.TRASHED") {
        return "FOLDER.TRASHED";
    }
    if (val == "WEBHOOK.DELETED") {
        return "WEBHOOK.DELETED";
    }
    if (val == "COLLABORATION.CREATED") {
        return "COLLABORATION.CREATED";
    }
    if (val == "COLLABORATION.ACCEPTED") {
        return "COLLABORATION.ACCEPTED";
    }
    if (val == "COLLABORATION.REJECTED") {
        return "COLLABORATION.REJECTED";
    }
    if (val == "COLLABORATION.REMOVED") {
        return "COLLABORATION.REMOVED";
    }
    if (val == "COLLABORATION.UPDATED") {
        return "COLLABORATION.UPDATED";
    }
    if (val == "SHARED_LINK.DELETED") {
        return "SHARED_LINK.DELETED";
    }
    if (val == "SHARED_LINK.CREATED") {
        return "SHARED_LINK.CREATED";
    }
    if (val == "SHARED_LINK.UPDATED") {
        return "SHARED_LINK.UPDATED";
    }
    if (val == "SIGN_REQUEST.COMPLETED") {
        return "SIGN_REQUEST.COMPLETED";
    }
    if (val == "SIGN_REQUEST.DECLINED") {
        return "SIGN_REQUEST.DECLINED";
    }
    if (val == "SIGN_REQUEST.EXPIRED") {
        return "SIGN_REQUEST.EXPIRED";
    }
    if (val == "SIGN_REQUEST.SIGNER_EMAIL_BOUNCED") {
        return "SIGN_REQUEST.SIGNER_EMAIL_BOUNCED";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWebhookInvocationTriggerField = newDeserializeWebhookInvocationTriggerField;
function newSerializeWebhookInvocation(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeWebhookInvocationTypeField(val.type), ["webhook"]: val.webhook == void 0 ? void 0 : newSerializeWebhook(val.webhook), ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["trigger"]: val.trigger == void 0 ? void 0 : newSerializeWebhookInvocationTriggerField(val.trigger), ["source"]: val.source == void 0 ? void 0 : newSerializeFileOrFolder(val.source) };
}
exports.newSerializeWebhookInvocation = newSerializeWebhookInvocation;
function newDeserializeWebhookInvocation(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeWebhookInvocationTypeField(val.type);
    const webhook = val.webhook == void 0 ? void 0 : newDeserializeWebhook(val.webhook);
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const trigger = val.trigger == void 0 ? void 0 : newDeserializeWebhookInvocationTriggerField(val.trigger);
    const source = val.source == void 0 ? void 0 : newDeserializeFileOrFolder(val.source);
    return { id: id, type: type, webhook: webhook, createdBy: createdBy, createdAt: createdAt, trigger: trigger, source: source };
}
exports.newDeserializeWebhookInvocation = newDeserializeWebhookInvocation;
function newSerializeSkillInvocationTypeField(val) {
    return val;
}
exports.newSerializeSkillInvocationTypeField = newSerializeSkillInvocationTypeField;
function newDeserializeSkillInvocationTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationTypeField\"";
    }
    if (val == "skill_invocation") {
        return "skill_invocation";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSkillInvocationTypeField = newDeserializeSkillInvocationTypeField;
function newSerializeSkillInvocationSkillFieldTypeField(val) {
    return val;
}
exports.newSerializeSkillInvocationSkillFieldTypeField = newSerializeSkillInvocationSkillFieldTypeField;
function newDeserializeSkillInvocationSkillFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationSkillFieldTypeField\"";
    }
    if (val == "skill") {
        return "skill";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSkillInvocationSkillFieldTypeField = newDeserializeSkillInvocationSkillFieldTypeField;
function newSerializeSkillInvocationSkillField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeSkillInvocationSkillFieldTypeField(val.type), ["name"]: val.name, ["api_key"]: val.apiKey };
}
exports.newSerializeSkillInvocationSkillField = newSerializeSkillInvocationSkillField;
function newDeserializeSkillInvocationSkillField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeSkillInvocationSkillFieldTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const apiKey = (0, json_js_1.isJson)(val.api_key, "string") ? val.api_key : void 0;
    return { id: id, type: type, name: name, apiKey: apiKey };
}
exports.newDeserializeSkillInvocationSkillField = newDeserializeSkillInvocationSkillField;
function newSerializeSkillInvocationTokenFieldReadFieldTokenTypeField(val) {
    return val;
}
exports.newSerializeSkillInvocationTokenFieldReadFieldTokenTypeField = newSerializeSkillInvocationTokenFieldReadFieldTokenTypeField;
function newDeserializeSkillInvocationTokenFieldReadFieldTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationTokenFieldReadFieldTokenTypeField\"";
    }
    if (val == "bearer") {
        return "bearer";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSkillInvocationTokenFieldReadFieldTokenTypeField = newDeserializeSkillInvocationTokenFieldReadFieldTokenTypeField;
function newSerializeSkillInvocationTokenFieldReadField(val) {
    return { ["access_token"]: val.accessToken, ["expires_in"]: val.expiresIn, ["token_type"]: val.tokenType == void 0 ? void 0 : newSerializeSkillInvocationTokenFieldReadFieldTokenTypeField(val.tokenType), ["restricted_to"]: val.restrictedTo };
}
exports.newSerializeSkillInvocationTokenFieldReadField = newSerializeSkillInvocationTokenFieldReadField;
function newDeserializeSkillInvocationTokenFieldReadField(val) {
    const accessToken = (0, json_js_1.isJson)(val.access_token, "string") ? val.access_token : void 0;
    const expiresIn = (0, json_js_1.isJson)(val.expires_in, "number") ? val.expires_in : void 0;
    const tokenType = val.token_type == void 0 ? void 0 : newDeserializeSkillInvocationTokenFieldReadFieldTokenTypeField(val.token_type);
    const restrictedTo = (0, json_js_1.isJson)(val.restricted_to, "string") ? val.restricted_to : void 0;
    return { accessToken: accessToken, expiresIn: expiresIn, tokenType: tokenType, restrictedTo: restrictedTo };
}
exports.newDeserializeSkillInvocationTokenFieldReadField = newDeserializeSkillInvocationTokenFieldReadField;
function newSerializeSkillInvocationTokenFieldWriteFieldTokenTypeField(val) {
    return val;
}
exports.newSerializeSkillInvocationTokenFieldWriteFieldTokenTypeField = newSerializeSkillInvocationTokenFieldWriteFieldTokenTypeField;
function newDeserializeSkillInvocationTokenFieldWriteFieldTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationTokenFieldWriteFieldTokenTypeField\"";
    }
    if (val == "bearer") {
        return "bearer";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSkillInvocationTokenFieldWriteFieldTokenTypeField = newDeserializeSkillInvocationTokenFieldWriteFieldTokenTypeField;
function newSerializeSkillInvocationTokenFieldWriteField(val) {
    return { ["access_token"]: val.accessToken, ["expires_in"]: val.expiresIn, ["token_type"]: val.tokenType == void 0 ? void 0 : newSerializeSkillInvocationTokenFieldWriteFieldTokenTypeField(val.tokenType), ["restricted_to"]: val.restrictedTo };
}
exports.newSerializeSkillInvocationTokenFieldWriteField = newSerializeSkillInvocationTokenFieldWriteField;
function newDeserializeSkillInvocationTokenFieldWriteField(val) {
    const accessToken = (0, json_js_1.isJson)(val.access_token, "string") ? val.access_token : void 0;
    const expiresIn = (0, json_js_1.isJson)(val.expires_in, "number") ? val.expires_in : void 0;
    const tokenType = val.token_type == void 0 ? void 0 : newDeserializeSkillInvocationTokenFieldWriteFieldTokenTypeField(val.token_type);
    const restrictedTo = (0, json_js_1.isJson)(val.restricted_to, "string") ? val.restricted_to : void 0;
    return { accessToken: accessToken, expiresIn: expiresIn, tokenType: tokenType, restrictedTo: restrictedTo };
}
exports.newDeserializeSkillInvocationTokenFieldWriteField = newDeserializeSkillInvocationTokenFieldWriteField;
function newSerializeSkillInvocationTokenField(val) {
    return { ["read"]: val.read == void 0 ? void 0 : newSerializeSkillInvocationTokenFieldReadField(val.read), ["write"]: val.write == void 0 ? void 0 : newSerializeSkillInvocationTokenFieldWriteField(val.write) };
}
exports.newSerializeSkillInvocationTokenField = newSerializeSkillInvocationTokenField;
function newDeserializeSkillInvocationTokenField(val) {
    const read = val.read == void 0 ? void 0 : newDeserializeSkillInvocationTokenFieldReadField(val.read);
    const write = val.write == void 0 ? void 0 : newDeserializeSkillInvocationTokenFieldWriteField(val.write);
    return { read: read, write: write };
}
exports.newDeserializeSkillInvocationTokenField = newDeserializeSkillInvocationTokenField;
function newSerializeSkillInvocationStatusFieldStateField(val) {
    return val;
}
exports.newSerializeSkillInvocationStatusFieldStateField = newSerializeSkillInvocationStatusFieldStateField;
function newDeserializeSkillInvocationStatusFieldStateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationStatusFieldStateField\"";
    }
    if (val == "invoked") {
        return "invoked";
    }
    if (val == "processing") {
        return "processing";
    }
    if (val == "success") {
        return "success";
    }
    if (val == "transient_failure") {
        return "transient_failure";
    }
    if (val == "permanent_failure") {
        return "permanent_failure";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSkillInvocationStatusFieldStateField = newDeserializeSkillInvocationStatusFieldStateField;
function newSerializeSkillInvocationStatusField(val) {
    return { ["state"]: val.state == void 0 ? void 0 : newSerializeSkillInvocationStatusFieldStateField(val.state), ["message"]: val.message, ["error_code"]: val.errorCode, ["additional_info"]: val.additionalInfo };
}
exports.newSerializeSkillInvocationStatusField = newSerializeSkillInvocationStatusField;
function newDeserializeSkillInvocationStatusField(val) {
    const state = val.state == void 0 ? void 0 : newDeserializeSkillInvocationStatusFieldStateField(val.state);
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    const errorCode = (0, json_js_1.isJson)(val.error_code, "string") ? val.error_code : void 0;
    const additionalInfo = (0, json_js_1.isJson)(val.additional_info, "string") ? val.additional_info : void 0;
    return { state: state, message: message, errorCode: errorCode, additionalInfo: additionalInfo };
}
exports.newDeserializeSkillInvocationStatusField = newDeserializeSkillInvocationStatusField;
function newSerializeSkillInvocationEnterpriseFieldTypeField(val) {
    return val;
}
exports.newSerializeSkillInvocationEnterpriseFieldTypeField = newSerializeSkillInvocationEnterpriseFieldTypeField;
function newDeserializeSkillInvocationEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationEnterpriseFieldTypeField\"";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSkillInvocationEnterpriseFieldTypeField = newDeserializeSkillInvocationEnterpriseFieldTypeField;
function newSerializeSkillInvocationEnterpriseField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeSkillInvocationEnterpriseFieldTypeField(val.type), ["name"]: val.name };
}
exports.newSerializeSkillInvocationEnterpriseField = newSerializeSkillInvocationEnterpriseField;
function newDeserializeSkillInvocationEnterpriseField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeSkillInvocationEnterpriseFieldTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.newDeserializeSkillInvocationEnterpriseField = newDeserializeSkillInvocationEnterpriseField;
function newSerializeSkillInvocation(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeSkillInvocationTypeField(val.type), ["id"]: val.id, ["skill"]: val.skill == void 0 ? void 0 : newSerializeSkillInvocationSkillField(val.skill), ["token"]: val.token == void 0 ? void 0 : newSerializeSkillInvocationTokenField(val.token), ["status"]: val.status == void 0 ? void 0 : newSerializeSkillInvocationStatusField(val.status), ["created_at"]: val.createdAt, ["trigger"]: val.trigger, ["enterprise"]: val.enterprise == void 0 ? void 0 : newSerializeSkillInvocationEnterpriseField(val.enterprise), ["source"]: val.source == void 0 ? void 0 : newSerializeFileOrFolder(val.source), ["event"]: val.event == void 0 ? void 0 : newSerializeEvent(val.event) };
}
exports.newSerializeSkillInvocation = newSerializeSkillInvocation;
function newDeserializeSkillInvocation(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeSkillInvocationTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const skill = val.skill == void 0 ? void 0 : newDeserializeSkillInvocationSkillField(val.skill);
    const token = val.token == void 0 ? void 0 : newDeserializeSkillInvocationTokenField(val.token);
    const status = val.status == void 0 ? void 0 : newDeserializeSkillInvocationStatusField(val.status);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const trigger = (0, json_js_1.isJson)(val.trigger, "string") ? val.trigger : void 0;
    const enterprise = val.enterprise == void 0 ? void 0 : newDeserializeSkillInvocationEnterpriseField(val.enterprise);
    const source = val.source == void 0 ? void 0 : newDeserializeFileOrFolder(val.source);
    const event = val.event == void 0 ? void 0 : newDeserializeEvent(val.event);
    return { type: type, id: id, skill: skill, token: token, status: status, createdAt: createdAt, trigger: trigger, enterprise: enterprise, source: source, event: event };
}
exports.newDeserializeSkillInvocation = newDeserializeSkillInvocation;
function newSerializeFolderFullSyncStateField(val) {
    return val;
}
exports.newSerializeFolderFullSyncStateField = newSerializeFolderFullSyncStateField;
function newDeserializeFolderFullSyncStateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderFullSyncStateField\"";
    }
    if (val == "synced") {
        return "synced";
    }
    if (val == "not_synced") {
        return "not_synced";
    }
    if (val == "partially_synced") {
        return "partially_synced";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFolderFullSyncStateField = newDeserializeFolderFullSyncStateField;
function newSerializeFolderFullPermissionsField(val) {
    return { ["can_delete"]: val.canDelete, ["can_download"]: val.canDownload, ["can_invite_collaborator"]: val.canInviteCollaborator, ["can_rename"]: val.canRename, ["can_set_share_access"]: val.canSetShareAccess, ["can_share"]: val.canShare, ["can_upload"]: val.canUpload };
}
exports.newSerializeFolderFullPermissionsField = newSerializeFolderFullPermissionsField;
function newDeserializeFolderFullPermissionsField(val) {
    const canDelete = val.can_delete;
    const canDownload = val.can_download;
    const canInviteCollaborator = val.can_invite_collaborator;
    const canRename = val.can_rename;
    const canSetShareAccess = val.can_set_share_access;
    const canShare = val.can_share;
    const canUpload = (0, json_js_1.isJson)(val.can_upload, "boolean") ? val.can_upload : void 0;
    return { canDelete: canDelete, canDownload: canDownload, canInviteCollaborator: canInviteCollaborator, canRename: canRename, canSetShareAccess: canSetShareAccess, canShare: canShare, canUpload: canUpload };
}
exports.newDeserializeFolderFullPermissionsField = newDeserializeFolderFullPermissionsField;
function newSerializeFolderFullMetadataField(val) {
    return {};
}
exports.newSerializeFolderFullMetadataField = newSerializeFolderFullMetadataField;
function newDeserializeFolderFullMetadataField(val) {
    return {};
}
exports.newDeserializeFolderFullMetadataField = newDeserializeFolderFullMetadataField;
function newSerializeFolderFullAllowedSharedLinkAccessLevelsField(val) {
    return val;
}
exports.newSerializeFolderFullAllowedSharedLinkAccessLevelsField = newSerializeFolderFullAllowedSharedLinkAccessLevelsField;
function newDeserializeFolderFullAllowedSharedLinkAccessLevelsField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderFullAllowedSharedLinkAccessLevelsField\"";
    }
    if (val == "open") {
        return "open";
    }
    if (val == "company") {
        return "company";
    }
    if (val == "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFolderFullAllowedSharedLinkAccessLevelsField = newDeserializeFolderFullAllowedSharedLinkAccessLevelsField;
function newSerializeFolderFullAllowedInviteeRolesField(val) {
    return val;
}
exports.newSerializeFolderFullAllowedInviteeRolesField = newSerializeFolderFullAllowedInviteeRolesField;
function newDeserializeFolderFullAllowedInviteeRolesField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderFullAllowedInviteeRolesField\"";
    }
    if (val == "editor") {
        return "editor";
    }
    if (val == "viewer") {
        return "viewer";
    }
    if (val == "previewer") {
        return "previewer";
    }
    if (val == "uploader") {
        return "uploader";
    }
    if (val == "previewer uploader") {
        return "previewer uploader";
    }
    if (val == "viewer uploader") {
        return "viewer uploader";
    }
    if (val == "co-owner") {
        return "co-owner";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFolderFullAllowedInviteeRolesField = newDeserializeFolderFullAllowedInviteeRolesField;
function newSerializeFolderFullWatermarkInfoField(val) {
    return { ["is_watermarked"]: val.isWatermarked };
}
exports.newSerializeFolderFullWatermarkInfoField = newSerializeFolderFullWatermarkInfoField;
function newDeserializeFolderFullWatermarkInfoField(val) {
    const isWatermarked = (0, json_js_1.isJson)(val.is_watermarked, "boolean") ? val.is_watermarked : void 0;
    return { isWatermarked: isWatermarked };
}
exports.newDeserializeFolderFullWatermarkInfoField = newDeserializeFolderFullWatermarkInfoField;
function newSerializeFolderFullClassificationField(val) {
    return { ["name"]: val.name, ["definition"]: val.definition, ["color"]: val.color };
}
exports.newSerializeFolderFullClassificationField = newSerializeFolderFullClassificationField;
function newDeserializeFolderFullClassificationField(val) {
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const definition = (0, json_js_1.isJson)(val.definition, "string") ? val.definition : void 0;
    const color = (0, json_js_1.isJson)(val.color, "string") ? val.color : void 0;
    return { name: name, definition: definition, color: color };
}
exports.newDeserializeFolderFullClassificationField = newDeserializeFolderFullClassificationField;
function newSerializeFolderFull(val) {
    const base = newSerializeFolder(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FolderFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["sync_state"]: val.syncState == void 0 ? void 0 : newSerializeFolderFullSyncStateField(val.syncState), ["has_collaborations"]: val.hasCollaborations, ["permissions"]: val.permissions == void 0 ? void 0 : newSerializeFolderFullPermissionsField(val.permissions), ["tags"]: val.tags == void 0 ? void 0 : val.tags.map(function (item) {
            return void 0;
        }), ["can_non_owners_invite"]: val.canNonOwnersInvite, ["is_externally_owned"]: val.isExternallyOwned, ["metadata"]: val.metadata == void 0 ? void 0 : newSerializeFolderFullMetadataField(val.metadata), ["is_collaboration_restricted_to_enterprise"]: val.isCollaborationRestrictedToEnterprise, ["allowed_shared_link_access_levels"]: val.allowedSharedLinkAccessLevels == void 0 ? void 0 : val.allowedSharedLinkAccessLevels.map(function (item) {
            return newSerializeFolderFullAllowedSharedLinkAccessLevelsField(item);
        }), ["allowed_invitee_roles"]: val.allowedInviteeRoles == void 0 ? void 0 : val.allowedInviteeRoles.map(function (item) {
            return newSerializeFolderFullAllowedInviteeRolesField(item);
        }), ["watermark_info"]: val.watermarkInfo == void 0 ? void 0 : newSerializeFolderFullWatermarkInfoField(val.watermarkInfo), ["is_accessible_via_shared_link"]: val.isAccessibleViaSharedLink, ["can_non_owners_view_collaborators"]: val.canNonOwnersViewCollaborators, ["classification"]: val.classification == void 0 ? void 0 : newSerializeFolderFullClassificationField(val.classification) });
}
exports.newSerializeFolderFull = newSerializeFolderFull;
function newDeserializeFolderFull(val) {
    const syncState = val.sync_state == void 0 ? void 0 : newDeserializeFolderFullSyncStateField(val.sync_state);
    const hasCollaborations = (0, json_js_1.isJson)(val.has_collaborations, "boolean") ? val.has_collaborations : void 0;
    const permissions = val.permissions == void 0 ? void 0 : newDeserializeFolderFullPermissionsField(val.permissions);
    const tags = (0, json_js_1.isJson)(val.tags, "array") ? val.tags.map(function (itm) {
        return void 0;
    }) : void 0;
    const canNonOwnersInvite = (0, json_js_1.isJson)(val.can_non_owners_invite, "boolean") ? val.can_non_owners_invite : void 0;
    const isExternallyOwned = (0, json_js_1.isJson)(val.is_externally_owned, "boolean") ? val.is_externally_owned : void 0;
    const metadata = val.metadata == void 0 ? void 0 : newDeserializeFolderFullMetadataField(val.metadata);
    const isCollaborationRestrictedToEnterprise = (0, json_js_1.isJson)(val.is_collaboration_restricted_to_enterprise, "boolean") ? val.is_collaboration_restricted_to_enterprise : void 0;
    const allowedSharedLinkAccessLevels = (0, json_js_1.isJson)(val.allowed_shared_link_access_levels, "array") ? val.allowed_shared_link_access_levels.map(function (itm) {
        return newDeserializeFolderFullAllowedSharedLinkAccessLevelsField(itm);
    }) : void 0;
    const allowedInviteeRoles = (0, json_js_1.isJson)(val.allowed_invitee_roles, "array") ? val.allowed_invitee_roles.map(function (itm) {
        return newDeserializeFolderFullAllowedInviteeRolesField(itm);
    }) : void 0;
    const watermarkInfo = val.watermark_info == void 0 ? void 0 : newDeserializeFolderFullWatermarkInfoField(val.watermark_info);
    const isAccessibleViaSharedLink = (0, json_js_1.isJson)(val.is_accessible_via_shared_link, "boolean") ? val.is_accessible_via_shared_link : void 0;
    const canNonOwnersViewCollaborators = (0, json_js_1.isJson)(val.can_non_owners_view_collaborators, "boolean") ? val.can_non_owners_view_collaborators : void 0;
    const classification = val.classification == void 0 ? void 0 : newDeserializeFolderFullClassificationField(val.classification);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    const pathCollection = val.path_collection == void 0 ? void 0 : newDeserializeFolderPathCollectionField(val.path_collection);
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeUserMini(val.modified_by);
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const ownedBy = val.owned_by == void 0 ? void 0 : newDeserializeUserMini(val.owned_by);
    const sharedLink = val.shared_link == void 0 ? void 0 : newDeserializeFolderSharedLinkField(val.shared_link);
    const folderUploadEmail = val.folder_upload_email == void 0 ? void 0 : newDeserializeFolderFolderUploadEmailField(val.folder_upload_email);
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const itemStatus = val.item_status == void 0 ? void 0 : newDeserializeFolderItemStatusField(val.item_status);
    const itemCollection = val.item_collection == void 0 ? void 0 : newDeserializeItems(val.item_collection);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const id = val.id;
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = newDeserializeFolderBaseTypeField(val.type);
    return { syncState: syncState, hasCollaborations: hasCollaborations, permissions: permissions, tags: tags, canNonOwnersInvite: canNonOwnersInvite, isExternallyOwned: isExternallyOwned, metadata: metadata, isCollaborationRestrictedToEnterprise: isCollaborationRestrictedToEnterprise, allowedSharedLinkAccessLevels: allowedSharedLinkAccessLevels, allowedInviteeRoles: allowedInviteeRoles, watermarkInfo: watermarkInfo, isAccessibleViaSharedLink: isAccessibleViaSharedLink, canNonOwnersViewCollaborators: canNonOwnersViewCollaborators, classification: classification, createdAt: createdAt, modifiedAt: modifiedAt, description: description, size: size, pathCollection: pathCollection, createdBy: createdBy, modifiedBy: modifiedBy, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, ownedBy: ownedBy, sharedLink: sharedLink, folderUploadEmail: folderUploadEmail, parent: parent, itemStatus: itemStatus, itemCollection: itemCollection, name: name, sequenceId: sequenceId, id: id, etag: etag, type: type };
}
exports.newDeserializeFolderFull = newDeserializeFolderFull;
function newSerializeWebLinkPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return newSerializeFolderMini(item);
        }) };
}
exports.newSerializeWebLinkPathCollectionField = newSerializeWebLinkPathCollectionField;
function newDeserializeWebLinkPathCollectionField(val) {
    const totalCount = val.total_count;
    const entries = val.entries.map(function (itm) {
        return newDeserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.newDeserializeWebLinkPathCollectionField = newDeserializeWebLinkPathCollectionField;
function newSerializeWebLinkSharedLinkFieldAccessField(val) {
    return val;
}
exports.newSerializeWebLinkSharedLinkFieldAccessField = newSerializeWebLinkSharedLinkFieldAccessField;
function newDeserializeWebLinkSharedLinkFieldAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebLinkSharedLinkFieldAccessField\"";
    }
    if (val == "open") {
        return "open";
    }
    if (val == "company") {
        return "company";
    }
    if (val == "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWebLinkSharedLinkFieldAccessField = newDeserializeWebLinkSharedLinkFieldAccessField;
function newSerializeWebLinkSharedLinkFieldEffectiveAccessField(val) {
    return val;
}
exports.newSerializeWebLinkSharedLinkFieldEffectiveAccessField = newSerializeWebLinkSharedLinkFieldEffectiveAccessField;
function newDeserializeWebLinkSharedLinkFieldEffectiveAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebLinkSharedLinkFieldEffectiveAccessField\"";
    }
    if (val == "open") {
        return "open";
    }
    if (val == "company") {
        return "company";
    }
    if (val == "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWebLinkSharedLinkFieldEffectiveAccessField = newDeserializeWebLinkSharedLinkFieldEffectiveAccessField;
function newSerializeWebLinkSharedLinkFieldEffectivePermissionField(val) {
    return val;
}
exports.newSerializeWebLinkSharedLinkFieldEffectivePermissionField = newSerializeWebLinkSharedLinkFieldEffectivePermissionField;
function newDeserializeWebLinkSharedLinkFieldEffectivePermissionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebLinkSharedLinkFieldEffectivePermissionField\"";
    }
    if (val == "can_edit") {
        return "can_edit";
    }
    if (val == "can_download") {
        return "can_download";
    }
    if (val == "can_preview") {
        return "can_preview";
    }
    if (val == "no_access") {
        return "no_access";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWebLinkSharedLinkFieldEffectivePermissionField = newDeserializeWebLinkSharedLinkFieldEffectivePermissionField;
function newSerializeWebLinkSharedLinkFieldPermissionsField(val) {
    return { ["can_download"]: val.canDownload, ["can_preview"]: val.canPreview, ["can_edit"]: val.canEdit };
}
exports.newSerializeWebLinkSharedLinkFieldPermissionsField = newSerializeWebLinkSharedLinkFieldPermissionsField;
function newDeserializeWebLinkSharedLinkFieldPermissionsField(val) {
    const canDownload = val.can_download;
    const canPreview = val.can_preview;
    const canEdit = val.can_edit;
    return { canDownload: canDownload, canPreview: canPreview, canEdit: canEdit };
}
exports.newDeserializeWebLinkSharedLinkFieldPermissionsField = newDeserializeWebLinkSharedLinkFieldPermissionsField;
function newSerializeWebLinkSharedLinkField(val) {
    return { ["url"]: val.url, ["download_url"]: val.downloadUrl, ["vanity_url"]: val.vanityUrl, ["vanity_name"]: val.vanityName, ["access"]: val.access == void 0 ? void 0 : newSerializeWebLinkSharedLinkFieldAccessField(val.access), ["effective_access"]: newSerializeWebLinkSharedLinkFieldEffectiveAccessField(val.effectiveAccess), ["effective_permission"]: newSerializeWebLinkSharedLinkFieldEffectivePermissionField(val.effectivePermission), ["unshared_at"]: val.unsharedAt, ["is_password_enabled"]: val.isPasswordEnabled, ["permissions"]: val.permissions == void 0 ? void 0 : newSerializeWebLinkSharedLinkFieldPermissionsField(val.permissions), ["download_count"]: val.downloadCount, ["preview_count"]: val.previewCount };
}
exports.newSerializeWebLinkSharedLinkField = newSerializeWebLinkSharedLinkField;
function newDeserializeWebLinkSharedLinkField(val) {
    const url = val.url;
    const downloadUrl = (0, json_js_1.isJson)(val.download_url, "string") ? val.download_url : void 0;
    const vanityUrl = (0, json_js_1.isJson)(val.vanity_url, "string") ? val.vanity_url : void 0;
    const vanityName = (0, json_js_1.isJson)(val.vanity_name, "string") ? val.vanity_name : void 0;
    const access = val.access == void 0 ? void 0 : newDeserializeWebLinkSharedLinkFieldAccessField(val.access);
    const effectiveAccess = newDeserializeWebLinkSharedLinkFieldEffectiveAccessField(val.effective_access);
    const effectivePermission = newDeserializeWebLinkSharedLinkFieldEffectivePermissionField(val.effective_permission);
    const unsharedAt = (0, json_js_1.isJson)(val.unshared_at, "string") ? val.unshared_at : void 0;
    const isPasswordEnabled = val.is_password_enabled;
    const permissions = val.permissions == void 0 ? void 0 : newDeserializeWebLinkSharedLinkFieldPermissionsField(val.permissions);
    const downloadCount = val.download_count;
    const previewCount = val.preview_count;
    return { url: url, downloadUrl: downloadUrl, vanityUrl: vanityUrl, vanityName: vanityName, access: access, effectiveAccess: effectiveAccess, effectivePermission: effectivePermission, unsharedAt: unsharedAt, isPasswordEnabled: isPasswordEnabled, permissions: permissions, downloadCount: downloadCount, previewCount: previewCount };
}
exports.newDeserializeWebLinkSharedLinkField = newDeserializeWebLinkSharedLinkField;
function newSerializeWebLinkItemStatusField(val) {
    return val;
}
exports.newSerializeWebLinkItemStatusField = newSerializeWebLinkItemStatusField;
function newDeserializeWebLinkItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebLinkItemStatusField\"";
    }
    if (val == "active") {
        return "active";
    }
    if (val == "trashed") {
        return "trashed";
    }
    if (val == "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWebLinkItemStatusField = newDeserializeWebLinkItemStatusField;
function newSerializeWebLink(val) {
    const base = newSerializeWebLinkMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"WebLink\"";
    }
    return Object.assign(Object.assign({}, base), { ["parent"]: val.parent == void 0 ? void 0 : newSerializeFolderMini(val.parent), ["description"]: val.description, ["path_collection"]: val.pathCollection == void 0 ? void 0 : newSerializeWebLinkPathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserMini(val.createdBy), ["modified_by"]: val.modifiedBy == void 0 ? void 0 : newSerializeUserMini(val.modifiedBy), ["owned_by"]: val.ownedBy == void 0 ? void 0 : newSerializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink == void 0 ? void 0 : newSerializeWebLinkSharedLinkField(val.sharedLink), ["item_status"]: val.itemStatus == void 0 ? void 0 : newSerializeWebLinkItemStatusField(val.itemStatus) });
}
exports.newSerializeWebLink = newSerializeWebLink;
function newDeserializeWebLink(val) {
    const parent = val.parent == void 0 ? void 0 : newDeserializeFolderMini(val.parent);
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const pathCollection = val.path_collection == void 0 ? void 0 : newDeserializeWebLinkPathCollectionField(val.path_collection);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeUserMini(val.modified_by);
    const ownedBy = val.owned_by == void 0 ? void 0 : newDeserializeUserMini(val.owned_by);
    const sharedLink = val.shared_link == void 0 ? void 0 : newDeserializeWebLinkSharedLinkField(val.shared_link);
    const itemStatus = val.item_status == void 0 ? void 0 : newDeserializeWebLinkItemStatusField(val.item_status);
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const id = val.id;
    const type = newDeserializeWebLinkBaseTypeField(val.type);
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    return { parent: parent, description: description, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, itemStatus: itemStatus, url: url, sequenceId: sequenceId, name: name, id: id, type: type, etag: etag };
}
exports.newDeserializeWebLink = newDeserializeWebLink;
function newSerializeFileOrFolderOrWebLink(val) {
    if (val.type == "file") {
        return newSerializeFile(val);
    }
    if (val.type == "folder") {
        return newSerializeFolder(val);
    }
    if (val.type == "web_link") {
        return newSerializeWebLink(val);
    }
    throw "unknown type";
}
exports.newSerializeFileOrFolderOrWebLink = newSerializeFileOrFolderOrWebLink;
function newDeserializeFileOrFolderOrWebLink(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileOrFolderOrWebLink\"";
    }
    if (val.type == "file") {
        return newDeserializeFile(val);
    }
    if (val.type == "folder") {
        return newDeserializeFolder(val);
    }
    if (val.type == "web_link") {
        return newDeserializeWebLink(val);
    }
    throw "unknown type";
}
exports.newDeserializeFileOrFolderOrWebLink = newDeserializeFileOrFolderOrWebLink;
function newSerializeSearchResultWithSharedLink(val) {
    return { ["accessible_via_shared_link"]: val.accessibleViaSharedLink, ["item"]: val.item == void 0 ? void 0 : newSerializeFileOrFolderOrWebLink(val.item), ["type"]: val.type };
}
exports.newSerializeSearchResultWithSharedLink = newSerializeSearchResultWithSharedLink;
function newDeserializeSearchResultWithSharedLink(val) {
    const accessibleViaSharedLink = (0, json_js_1.isJson)(val.accessible_via_shared_link, "string") ? val.accessible_via_shared_link : void 0;
    const item = val.item == void 0 ? void 0 : newDeserializeFileOrFolderOrWebLink(val.item);
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    return { accessibleViaSharedLink: accessibleViaSharedLink, item: item, type: type };
}
exports.newDeserializeSearchResultWithSharedLink = newDeserializeSearchResultWithSharedLink;
function newSerializeSearchResultsWithSharedLinks(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeSearchResultWithSharedLink(item);
        }) };
}
exports.newSerializeSearchResultsWithSharedLinks = newSerializeSearchResultsWithSharedLinks;
function newDeserializeSearchResultsWithSharedLinks(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeSearchResultWithSharedLink(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, entries: entries };
}
exports.newDeserializeSearchResultsWithSharedLinks = newDeserializeSearchResultsWithSharedLinks;
function newSerializeSearchResults(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeFileOrFolderOrWebLink(item);
        }) };
}
exports.newSerializeSearchResults = newSerializeSearchResults;
function newDeserializeSearchResults(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeFileOrFolderOrWebLink(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, entries: entries };
}
exports.newDeserializeSearchResults = newDeserializeSearchResults;
function newSerializeSearchResultsOrSearchResultsWithSharedLinks(val) {
    throw "Can't serialize SearchResultsOrSearchResultsWithSharedLinks";
}
exports.newSerializeSearchResultsOrSearchResultsWithSharedLinks = newSerializeSearchResultsOrSearchResultsWithSharedLinks;
function newDeserializeSearchResultsOrSearchResultsWithSharedLinks(val) {
    throw "Can't deserialize SearchResultsOrSearchResultsWithSharedLinks";
}
exports.newDeserializeSearchResultsOrSearchResultsWithSharedLinks = newDeserializeSearchResultsOrSearchResultsWithSharedLinks;
function newSerializeRecentItemInteractionTypeField(val) {
    return val;
}
exports.newSerializeRecentItemInteractionTypeField = newSerializeRecentItemInteractionTypeField;
function newDeserializeRecentItemInteractionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RecentItemInteractionTypeField\"";
    }
    if (val == "item_preview") {
        return "item_preview";
    }
    if (val == "item_upload") {
        return "item_upload";
    }
    if (val == "item_comment") {
        return "item_comment";
    }
    if (val == "item_open") {
        return "item_open";
    }
    if (val == "item_modify") {
        return "item_modify";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeRecentItemInteractionTypeField = newDeserializeRecentItemInteractionTypeField;
function newSerializeRecentItem(val) {
    return { ["type"]: val.type, ["item"]: val.item == void 0 ? void 0 : newSerializeFileOrFolderOrWebLink(val.item), ["interaction_type"]: val.interactionType == void 0 ? void 0 : newSerializeRecentItemInteractionTypeField(val.interactionType), ["interacted_at"]: val.interactedAt, ["interaction_shared_link"]: val.interactionSharedLink };
}
exports.newSerializeRecentItem = newSerializeRecentItem;
function newDeserializeRecentItem(val) {
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    const item = val.item == void 0 ? void 0 : newDeserializeFileOrFolderOrWebLink(val.item);
    const interactionType = val.interaction_type == void 0 ? void 0 : newDeserializeRecentItemInteractionTypeField(val.interaction_type);
    const interactedAt = (0, json_js_1.isJson)(val.interacted_at, "string") ? val.interacted_at : void 0;
    const interactionSharedLink = (0, json_js_1.isJson)(val.interaction_shared_link, "string") ? val.interaction_shared_link : void 0;
    return { type: type, item: item, interactionType: interactionType, interactedAt: interactedAt, interactionSharedLink: interactionSharedLink };
}
exports.newDeserializeRecentItem = newDeserializeRecentItem;
function newSerializeRecentItems(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeRecentItem(item);
        }) };
}
exports.newSerializeRecentItems = newSerializeRecentItems;
function newDeserializeRecentItems(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeRecentItem(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeRecentItems = newDeserializeRecentItems;
function newSerializeLegalHoldPolicyAssignment(val) {
    const base = newSerializeLegalHoldPolicyAssignmentBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"LegalHoldPolicyAssignment\"";
    }
    return Object.assign(Object.assign({}, base), { ["legal_hold_policy"]: val.legalHoldPolicy == void 0 ? void 0 : newSerializeLegalHoldPolicyMini(val.legalHoldPolicy), ["assigned_to"]: val.assignedTo == void 0 ? void 0 : newSerializeFileOrFolderOrWebLink(val.assignedTo), ["assigned_by"]: val.assignedBy == void 0 ? void 0 : newSerializeUserMini(val.assignedBy), ["assigned_at"]: val.assignedAt, ["deleted_at"]: val.deletedAt });
}
exports.newSerializeLegalHoldPolicyAssignment = newSerializeLegalHoldPolicyAssignment;
function newDeserializeLegalHoldPolicyAssignment(val) {
    const legalHoldPolicy = val.legal_hold_policy == void 0 ? void 0 : newDeserializeLegalHoldPolicyMini(val.legal_hold_policy);
    const assignedTo = val.assigned_to == void 0 ? void 0 : newDeserializeFileOrFolderOrWebLink(val.assigned_to);
    const assignedBy = val.assigned_by == void 0 ? void 0 : newDeserializeUserMini(val.assigned_by);
    const assignedAt = (0, json_js_1.isJson)(val.assigned_at, "string") ? val.assigned_at : void 0;
    const deletedAt = (0, json_js_1.isJson)(val.deleted_at, "string") ? val.deleted_at : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeLegalHoldPolicyAssignmentBaseTypeField(val.type);
    return { legalHoldPolicy: legalHoldPolicy, assignedTo: assignedTo, assignedBy: assignedBy, assignedAt: assignedAt, deletedAt: deletedAt, id: id, type: type };
}
exports.newDeserializeLegalHoldPolicyAssignment = newDeserializeLegalHoldPolicyAssignment;
function newSerializeFileVersionLegalHoldTypeField(val) {
    return val;
}
exports.newSerializeFileVersionLegalHoldTypeField = newSerializeFileVersionLegalHoldTypeField;
function newDeserializeFileVersionLegalHoldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileVersionLegalHoldTypeField\"";
    }
    if (val == "file_version_legal_hold") {
        return "file_version_legal_hold";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeFileVersionLegalHoldTypeField = newDeserializeFileVersionLegalHoldTypeField;
function newSerializeFileVersionLegalHold(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeFileVersionLegalHoldTypeField(val.type), ["file_version"]: val.fileVersion == void 0 ? void 0 : newSerializeFileVersionMini(val.fileVersion), ["file"]: val.file == void 0 ? void 0 : newSerializeFileMini(val.file), ["legal_hold_policy_assignments"]: val.legalHoldPolicyAssignments == void 0 ? void 0 : val.legalHoldPolicyAssignments.map(function (item) {
            return newSerializeLegalHoldPolicyAssignment(item);
        }), ["deleted_at"]: val.deletedAt };
}
exports.newSerializeFileVersionLegalHold = newSerializeFileVersionLegalHold;
function newDeserializeFileVersionLegalHold(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeFileVersionLegalHoldTypeField(val.type);
    const fileVersion = val.file_version == void 0 ? void 0 : newDeserializeFileVersionMini(val.file_version);
    const file = val.file == void 0 ? void 0 : newDeserializeFileMini(val.file);
    const legalHoldPolicyAssignments = (0, json_js_1.isJson)(val.legal_hold_policy_assignments, "array") ? val.legal_hold_policy_assignments.map(function (itm) {
        return newDeserializeLegalHoldPolicyAssignment(itm);
    }) : void 0;
    const deletedAt = (0, json_js_1.isJson)(val.deleted_at, "string") ? val.deleted_at : void 0;
    return { id: id, type: type, fileVersion: fileVersion, file: file, legalHoldPolicyAssignments: legalHoldPolicyAssignments, deletedAt: deletedAt };
}
exports.newDeserializeFileVersionLegalHold = newDeserializeFileVersionLegalHold;
function newSerializeFileVersionLegalHolds(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeFileVersionLegalHold(item);
        }) };
}
exports.newSerializeFileVersionLegalHolds = newSerializeFileVersionLegalHolds;
function newDeserializeFileVersionLegalHolds(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeFileVersionLegalHold(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeFileVersionLegalHolds = newDeserializeFileVersionLegalHolds;
function newSerializeCollaborationTypeField(val) {
    return val;
}
exports.newSerializeCollaborationTypeField = newSerializeCollaborationTypeField;
function newDeserializeCollaborationTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationTypeField\"";
    }
    if (val == "collaboration") {
        return "collaboration";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollaborationTypeField = newDeserializeCollaborationTypeField;
function newSerializeCollaborationRoleField(val) {
    return val;
}
exports.newSerializeCollaborationRoleField = newSerializeCollaborationRoleField;
function newDeserializeCollaborationRoleField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationRoleField\"";
    }
    if (val == "editor") {
        return "editor";
    }
    if (val == "viewer") {
        return "viewer";
    }
    if (val == "previewer") {
        return "previewer";
    }
    if (val == "uploader") {
        return "uploader";
    }
    if (val == "previewer uploader") {
        return "previewer uploader";
    }
    if (val == "viewer uploader") {
        return "viewer uploader";
    }
    if (val == "co-owner") {
        return "co-owner";
    }
    if (val == "owner") {
        return "owner";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollaborationRoleField = newDeserializeCollaborationRoleField;
function newSerializeCollaborationStatusField(val) {
    return val;
}
exports.newSerializeCollaborationStatusField = newSerializeCollaborationStatusField;
function newDeserializeCollaborationStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationStatusField\"";
    }
    if (val == "accepted") {
        return "accepted";
    }
    if (val == "pending") {
        return "pending";
    }
    if (val == "rejected") {
        return "rejected";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollaborationStatusField = newDeserializeCollaborationStatusField;
function newSerializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField(val) {
    return { ["is_accepted"]: val.isAccepted, ["terms_of_service"]: val.termsOfService == void 0 ? void 0 : newSerializeTermsOfServiceBase(val.termsOfService) };
}
exports.newSerializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField = newSerializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField;
function newDeserializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField(val) {
    const isAccepted = (0, json_js_1.isJson)(val.is_accepted, "boolean") ? val.is_accepted : void 0;
    const termsOfService = val.terms_of_service == void 0 ? void 0 : newDeserializeTermsOfServiceBase(val.terms_of_service);
    return { isAccepted: isAccepted, termsOfService: termsOfService };
}
exports.newDeserializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField = newDeserializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField;
function newSerializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField(val) {
    return { ["enterprise_has_strong_password_required_for_external_users"]: val.enterpriseHasStrongPasswordRequiredForExternalUsers, ["user_has_strong_password"]: val.userHasStrongPassword };
}
exports.newSerializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField = newSerializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField;
function newDeserializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField(val) {
    const enterpriseHasStrongPasswordRequiredForExternalUsers = (0, json_js_1.isJson)(val.enterprise_has_strong_password_required_for_external_users, "boolean") ? val.enterprise_has_strong_password_required_for_external_users : void 0;
    const userHasStrongPassword = (0, json_js_1.isJson)(val.user_has_strong_password, "boolean") ? val.user_has_strong_password : void 0;
    return { enterpriseHasStrongPasswordRequiredForExternalUsers: enterpriseHasStrongPasswordRequiredForExternalUsers, userHasStrongPassword: userHasStrongPassword };
}
exports.newDeserializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField = newDeserializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField;
function newSerializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField(val) {
    return { ["enterprise_has_two_factor_auth_enabled"]: val.enterpriseHasTwoFactorAuthEnabled, ["user_has_two_factor_authentication_enabled"]: val.userHasTwoFactorAuthenticationEnabled };
}
exports.newSerializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField = newSerializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField;
function newDeserializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField(val) {
    const enterpriseHasTwoFactorAuthEnabled = (0, json_js_1.isJson)(val.enterprise_has_two_factor_auth_enabled, "boolean") ? val.enterprise_has_two_factor_auth_enabled : void 0;
    const userHasTwoFactorAuthenticationEnabled = (0, json_js_1.isJson)(val.user_has_two_factor_authentication_enabled, "boolean") ? val.user_has_two_factor_authentication_enabled : void 0;
    return { enterpriseHasTwoFactorAuthEnabled: enterpriseHasTwoFactorAuthEnabled, userHasTwoFactorAuthenticationEnabled: userHasTwoFactorAuthenticationEnabled };
}
exports.newDeserializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField = newDeserializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField;
function newSerializeCollaborationAcceptanceRequirementsStatusField(val) {
    return { ["terms_of_service_requirement"]: val.termsOfServiceRequirement == void 0 ? void 0 : newSerializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField(val.termsOfServiceRequirement), ["strong_password_requirement"]: val.strongPasswordRequirement == void 0 ? void 0 : newSerializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField(val.strongPasswordRequirement), ["two_factor_authentication_requirement"]: val.twoFactorAuthenticationRequirement == void 0 ? void 0 : newSerializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField(val.twoFactorAuthenticationRequirement) };
}
exports.newSerializeCollaborationAcceptanceRequirementsStatusField = newSerializeCollaborationAcceptanceRequirementsStatusField;
function newDeserializeCollaborationAcceptanceRequirementsStatusField(val) {
    const termsOfServiceRequirement = val.terms_of_service_requirement == void 0 ? void 0 : newDeserializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField(val.terms_of_service_requirement);
    const strongPasswordRequirement = val.strong_password_requirement == void 0 ? void 0 : newDeserializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField(val.strong_password_requirement);
    const twoFactorAuthenticationRequirement = val.two_factor_authentication_requirement == void 0 ? void 0 : newDeserializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField(val.two_factor_authentication_requirement);
    return { termsOfServiceRequirement: termsOfServiceRequirement, strongPasswordRequirement: strongPasswordRequirement, twoFactorAuthenticationRequirement: twoFactorAuthenticationRequirement };
}
exports.newDeserializeCollaborationAcceptanceRequirementsStatusField = newDeserializeCollaborationAcceptanceRequirementsStatusField;
function newSerializeCollaboration(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeCollaborationTypeField(val.type), ["item"]: val.item == void 0 ? void 0 : newSerializeFileOrFolderOrWebLink(val.item), ["accessible_by"]: val.accessibleBy == void 0 ? void 0 : newSerializeUserCollaborations(val.accessibleBy), ["invite_email"]: val.inviteEmail, ["role"]: val.role == void 0 ? void 0 : newSerializeCollaborationRoleField(val.role), ["expires_at"]: val.expiresAt, ["status"]: val.status == void 0 ? void 0 : newSerializeCollaborationStatusField(val.status), ["acknowledged_at"]: val.acknowledgedAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserCollaborations(val.createdBy), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["acceptance_requirements_status"]: val.acceptanceRequirementsStatus == void 0 ? void 0 : newSerializeCollaborationAcceptanceRequirementsStatusField(val.acceptanceRequirementsStatus) };
}
exports.newSerializeCollaboration = newSerializeCollaboration;
function newDeserializeCollaboration(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeCollaborationTypeField(val.type);
    const item = val.item == void 0 ? void 0 : newDeserializeFileOrFolderOrWebLink(val.item);
    const accessibleBy = val.accessible_by == void 0 ? void 0 : newDeserializeUserCollaborations(val.accessible_by);
    const inviteEmail = (0, json_js_1.isJson)(val.invite_email, "string") ? val.invite_email : void 0;
    const role = val.role == void 0 ? void 0 : newDeserializeCollaborationRoleField(val.role);
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    const status = val.status == void 0 ? void 0 : newDeserializeCollaborationStatusField(val.status);
    const acknowledgedAt = (0, json_js_1.isJson)(val.acknowledged_at, "string") ? val.acknowledged_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserCollaborations(val.created_by);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const acceptanceRequirementsStatus = val.acceptance_requirements_status == void 0 ? void 0 : newDeserializeCollaborationAcceptanceRequirementsStatusField(val.acceptance_requirements_status);
    return { id: id, type: type, item: item, accessibleBy: accessibleBy, inviteEmail: inviteEmail, role: role, expiresAt: expiresAt, status: status, acknowledgedAt: acknowledgedAt, createdBy: createdBy, createdAt: createdAt, modifiedAt: modifiedAt, acceptanceRequirementsStatus: acceptanceRequirementsStatus };
}
exports.newDeserializeCollaboration = newDeserializeCollaboration;
function newSerializeCollaborationsOrderFieldDirectionField(val) {
    return val;
}
exports.newSerializeCollaborationsOrderFieldDirectionField = newSerializeCollaborationsOrderFieldDirectionField;
function newDeserializeCollaborationsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationsOrderFieldDirectionField\"";
    }
    if (val == "ASC") {
        return "ASC";
    }
    if (val == "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeCollaborationsOrderFieldDirectionField = newDeserializeCollaborationsOrderFieldDirectionField;
function newSerializeCollaborationsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction == void 0 ? void 0 : newSerializeCollaborationsOrderFieldDirectionField(val.direction) };
}
exports.newSerializeCollaborationsOrderField = newSerializeCollaborationsOrderField;
function newDeserializeCollaborationsOrderField(val) {
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction == void 0 ? void 0 : newDeserializeCollaborationsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.newDeserializeCollaborationsOrderField = newDeserializeCollaborationsOrderField;
function newSerializeCollaborations(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order == void 0 ? void 0 : val.order.map(function (item) {
            return newSerializeCollaborationsOrderField(item);
        }), ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeCollaboration(item);
        }) };
}
exports.newSerializeCollaborations = newSerializeCollaborations;
function newDeserializeCollaborations(val) {
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return newDeserializeCollaborationsOrderField(itm);
    }) : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeCollaboration(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.newDeserializeCollaborations = newDeserializeCollaborations;
function newSerializeWorkflowMiniTypeField(val) {
    return val;
}
exports.newSerializeWorkflowMiniTypeField = newSerializeWorkflowMiniTypeField;
function newDeserializeWorkflowMiniTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowMiniTypeField\"";
    }
    if (val == "workflow") {
        return "workflow";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWorkflowMiniTypeField = newDeserializeWorkflowMiniTypeField;
function newSerializeWorkflowMini(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeWorkflowMiniTypeField(val.type), ["name"]: val.name, ["description"]: val.description, ["is_enabled"]: val.isEnabled };
}
exports.newSerializeWorkflowMini = newSerializeWorkflowMini;
function newDeserializeWorkflowMini(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeWorkflowMiniTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const isEnabled = (0, json_js_1.isJson)(val.is_enabled, "boolean") ? val.is_enabled : void 0;
    return { id: id, type: type, name: name, description: description, isEnabled: isEnabled };
}
exports.newDeserializeWorkflowMini = newDeserializeWorkflowMini;
function newSerializeWorkflowFlowsFieldTypeField(val) {
    return val;
}
exports.newSerializeWorkflowFlowsFieldTypeField = newSerializeWorkflowFlowsFieldTypeField;
function newDeserializeWorkflowFlowsFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldTypeField\"";
    }
    if (val == "flow") {
        return "flow";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWorkflowFlowsFieldTypeField = newDeserializeWorkflowFlowsFieldTypeField;
function newSerializeWorkflowFlowsFieldTriggerFieldTypeField(val) {
    return val;
}
exports.newSerializeWorkflowFlowsFieldTriggerFieldTypeField = newSerializeWorkflowFlowsFieldTriggerFieldTypeField;
function newDeserializeWorkflowFlowsFieldTriggerFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldTriggerFieldTypeField\"";
    }
    if (val == "trigger") {
        return "trigger";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWorkflowFlowsFieldTriggerFieldTypeField = newDeserializeWorkflowFlowsFieldTriggerFieldTypeField;
function newSerializeWorkflowFlowsFieldTriggerFieldTriggerTypeField(val) {
    return val;
}
exports.newSerializeWorkflowFlowsFieldTriggerFieldTriggerTypeField = newSerializeWorkflowFlowsFieldTriggerFieldTriggerTypeField;
function newDeserializeWorkflowFlowsFieldTriggerFieldTriggerTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldTriggerFieldTriggerTypeField\"";
    }
    if (val == "WORKFLOW_MANUAL_START") {
        return "WORKFLOW_MANUAL_START";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWorkflowFlowsFieldTriggerFieldTriggerTypeField = newDeserializeWorkflowFlowsFieldTriggerFieldTriggerTypeField;
function newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField(val) {
    return val;
}
exports.newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField = newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField;
function newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldTriggerFieldScopeFieldTypeField\"";
    }
    if (val == "trigger_scope") {
        return "trigger_scope";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField = newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField;
function newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField(val) {
    return val;
}
exports.newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField = newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField;
function newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField = newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField;
function newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField = newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField;
function newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField(val.type);
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { type: type, id: id };
}
exports.newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField = newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField;
function newSerializeWorkflowFlowsFieldTriggerFieldScopeField(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField(val.type), ["ref"]: val.ref, ["object"]: val.object == void 0 ? void 0 : newSerializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField(val.object) };
}
exports.newSerializeWorkflowFlowsFieldTriggerFieldScopeField = newSerializeWorkflowFlowsFieldTriggerFieldScopeField;
function newDeserializeWorkflowFlowsFieldTriggerFieldScopeField(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField(val.type);
    const ref = (0, json_js_1.isJson)(val.ref, "string") ? val.ref : void 0;
    const object = val.object == void 0 ? void 0 : newDeserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField(val.object);
    return { type: type, ref: ref, object: object };
}
exports.newDeserializeWorkflowFlowsFieldTriggerFieldScopeField = newDeserializeWorkflowFlowsFieldTriggerFieldScopeField;
function newSerializeWorkflowFlowsFieldTriggerField(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeWorkflowFlowsFieldTriggerFieldTypeField(val.type), ["trigger_type"]: val.triggerType == void 0 ? void 0 : newSerializeWorkflowFlowsFieldTriggerFieldTriggerTypeField(val.triggerType), ["scope"]: val.scope == void 0 ? void 0 : val.scope.map(function (item) {
            return newSerializeWorkflowFlowsFieldTriggerFieldScopeField(item);
        }) };
}
exports.newSerializeWorkflowFlowsFieldTriggerField = newSerializeWorkflowFlowsFieldTriggerField;
function newDeserializeWorkflowFlowsFieldTriggerField(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeWorkflowFlowsFieldTriggerFieldTypeField(val.type);
    const triggerType = val.trigger_type == void 0 ? void 0 : newDeserializeWorkflowFlowsFieldTriggerFieldTriggerTypeField(val.trigger_type);
    const scope = (0, json_js_1.isJson)(val.scope, "array") ? val.scope.map(function (itm) {
        return newDeserializeWorkflowFlowsFieldTriggerFieldScopeField(itm);
    }) : void 0;
    return { type: type, triggerType: triggerType, scope: scope };
}
exports.newDeserializeWorkflowFlowsFieldTriggerField = newDeserializeWorkflowFlowsFieldTriggerField;
function newSerializeWorkflowFlowsFieldOutcomesFieldTypeField(val) {
    return val;
}
exports.newSerializeWorkflowFlowsFieldOutcomesFieldTypeField = newSerializeWorkflowFlowsFieldOutcomesFieldTypeField;
function newDeserializeWorkflowFlowsFieldOutcomesFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldOutcomesFieldTypeField\"";
    }
    if (val == "outcome") {
        return "outcome";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWorkflowFlowsFieldOutcomesFieldTypeField = newDeserializeWorkflowFlowsFieldOutcomesFieldTypeField;
function newSerializeWorkflowFlowsFieldOutcomesFieldActionTypeField(val) {
    return val;
}
exports.newSerializeWorkflowFlowsFieldOutcomesFieldActionTypeField = newSerializeWorkflowFlowsFieldOutcomesFieldActionTypeField;
function newDeserializeWorkflowFlowsFieldOutcomesFieldActionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldOutcomesFieldActionTypeField\"";
    }
    if (val == "add_metadata") {
        return "add_metadata";
    }
    if (val == "assign_task") {
        return "assign_task";
    }
    if (val == "copy_file") {
        return "copy_file";
    }
    if (val == "copy_folder") {
        return "copy_folder";
    }
    if (val == "create_folder") {
        return "create_folder";
    }
    if (val == "delete_file") {
        return "delete_file";
    }
    if (val == "delete_folder") {
        return "delete_folder";
    }
    if (val == "lock_file") {
        return "lock_file";
    }
    if (val == "move_file") {
        return "move_file";
    }
    if (val == "move_folder") {
        return "move_folder";
    }
    if (val == "remove_watermark_file") {
        return "remove_watermark_file";
    }
    if (val == "rename_folder") {
        return "rename_folder";
    }
    if (val == "restore_folder") {
        return "restore_folder";
    }
    if (val == "share_file") {
        return "share_file";
    }
    if (val == "share_folder") {
        return "share_folder";
    }
    if (val == "unlock_file") {
        return "unlock_file";
    }
    if (val == "upload_file") {
        return "upload_file";
    }
    if (val == "wait_for_task") {
        return "wait_for_task";
    }
    if (val == "watermark_file") {
        return "watermark_file";
    }
    if (val == "go_back_to_step") {
        return "go_back_to_step";
    }
    if (val == "apply_file_classification") {
        return "apply_file_classification";
    }
    if (val == "apply_folder_classification") {
        return "apply_folder_classification";
    }
    if (val == "send_notification") {
        return "send_notification";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWorkflowFlowsFieldOutcomesFieldActionTypeField = newDeserializeWorkflowFlowsFieldOutcomesFieldActionTypeField;
function newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField(val) {
    return val;
}
exports.newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField = newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField;
function newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField\"";
    }
    if (val == "outcome") {
        return "outcome";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField = newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField;
function newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField(val) {
    return val;
}
exports.newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField = newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField;
function newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField\"";
    }
    if (val == "add_metadata") {
        return "add_metadata";
    }
    if (val == "assign_task") {
        return "assign_task";
    }
    if (val == "copy_file") {
        return "copy_file";
    }
    if (val == "copy_folder") {
        return "copy_folder";
    }
    if (val == "create_folder") {
        return "create_folder";
    }
    if (val == "delete_file") {
        return "delete_file";
    }
    if (val == "delete_folder") {
        return "delete_folder";
    }
    if (val == "lock_file") {
        return "lock_file";
    }
    if (val == "move_file") {
        return "move_file";
    }
    if (val == "move_folder") {
        return "move_folder";
    }
    if (val == "remove_watermark_file") {
        return "remove_watermark_file";
    }
    if (val == "rename_folder") {
        return "rename_folder";
    }
    if (val == "restore_folder") {
        return "restore_folder";
    }
    if (val == "share_file") {
        return "share_file";
    }
    if (val == "share_folder") {
        return "share_folder";
    }
    if (val == "unlock_file") {
        return "unlock_file";
    }
    if (val == "upload_file") {
        return "upload_file";
    }
    if (val == "wait_for_task") {
        return "wait_for_task";
    }
    if (val == "watermark_file") {
        return "watermark_file";
    }
    if (val == "go_back_to_step") {
        return "go_back_to_step";
    }
    if (val == "apply_file_classification") {
        return "apply_file_classification";
    }
    if (val == "apply_folder_classification") {
        return "apply_folder_classification";
    }
    if (val == "send_notification") {
        return "send_notification";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField = newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField;
function newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField(val.type), ["name"]: val.name, ["action_type"]: val.actionType == void 0 ? void 0 : newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField(val.actionType) };
}
exports.newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedField = newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedField;
function newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const actionType = val.action_type == void 0 ? void 0 : newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField(val.action_type);
    return { id: id, type: type, name: name, actionType: actionType };
}
exports.newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedField = newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedField;
function newSerializeWorkflowFlowsFieldOutcomesField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeWorkflowFlowsFieldOutcomesFieldTypeField(val.type), ["name"]: val.name, ["action_type"]: val.actionType == void 0 ? void 0 : newSerializeWorkflowFlowsFieldOutcomesFieldActionTypeField(val.actionType), ["if_rejected"]: val.ifRejected == void 0 ? void 0 : val.ifRejected.map(function (item) {
            return newSerializeWorkflowFlowsFieldOutcomesFieldIfRejectedField(item);
        }) };
}
exports.newSerializeWorkflowFlowsFieldOutcomesField = newSerializeWorkflowFlowsFieldOutcomesField;
function newDeserializeWorkflowFlowsFieldOutcomesField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeWorkflowFlowsFieldOutcomesFieldTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const actionType = val.action_type == void 0 ? void 0 : newDeserializeWorkflowFlowsFieldOutcomesFieldActionTypeField(val.action_type);
    const ifRejected = (0, json_js_1.isJson)(val.if_rejected, "array") ? val.if_rejected.map(function (itm) {
        return newDeserializeWorkflowFlowsFieldOutcomesFieldIfRejectedField(itm);
    }) : void 0;
    return { id: id, type: type, name: name, actionType: actionType, ifRejected: ifRejected };
}
exports.newDeserializeWorkflowFlowsFieldOutcomesField = newDeserializeWorkflowFlowsFieldOutcomesField;
function newSerializeWorkflowFlowsField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeWorkflowFlowsFieldTypeField(val.type), ["trigger"]: val.trigger == void 0 ? void 0 : newSerializeWorkflowFlowsFieldTriggerField(val.trigger), ["outcomes"]: val.outcomes == void 0 ? void 0 : val.outcomes.map(function (item) {
            return newSerializeWorkflowFlowsFieldOutcomesField(item);
        }), ["created_at"]: val.createdAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserBase(val.createdBy) };
}
exports.newSerializeWorkflowFlowsField = newSerializeWorkflowFlowsField;
function newDeserializeWorkflowFlowsField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeWorkflowFlowsFieldTypeField(val.type);
    const trigger = val.trigger == void 0 ? void 0 : newDeserializeWorkflowFlowsFieldTriggerField(val.trigger);
    const outcomes = (0, json_js_1.isJson)(val.outcomes, "array") ? val.outcomes.map(function (itm) {
        return newDeserializeWorkflowFlowsFieldOutcomesField(itm);
    }) : void 0;
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserBase(val.created_by);
    return { id: id, type: type, trigger: trigger, outcomes: outcomes, createdAt: createdAt, createdBy: createdBy };
}
exports.newDeserializeWorkflowFlowsField = newDeserializeWorkflowFlowsField;
function newSerializeWorkflow(val) {
    const base = newSerializeWorkflowMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"Workflow\"";
    }
    return Object.assign(Object.assign({}, base), { ["flows"]: val.flows == void 0 ? void 0 : val.flows.map(function (item) {
            return newSerializeWorkflowFlowsField(item);
        }) });
}
exports.newSerializeWorkflow = newSerializeWorkflow;
function newDeserializeWorkflow(val) {
    const flows = (0, json_js_1.isJson)(val.flows, "array") ? val.flows.map(function (itm) {
        return newDeserializeWorkflowFlowsField(itm);
    }) : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeWorkflowMiniTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const isEnabled = (0, json_js_1.isJson)(val.is_enabled, "boolean") ? val.is_enabled : void 0;
    return { flows: flows, id: id, type: type, name: name, description: description, isEnabled: isEnabled };
}
exports.newDeserializeWorkflow = newDeserializeWorkflow;
function newSerializeWorkflows(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeWorkflow(item);
        }) };
}
exports.newSerializeWorkflows = newSerializeWorkflows;
function newDeserializeWorkflows(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeWorkflow(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeWorkflows = newDeserializeWorkflows;
function newSerializeWorkflowFull(val) {
    const base = newSerializeWorkflow(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"WorkflowFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeUserBase(val.createdBy), ["modified_by"]: val.modifiedBy == void 0 ? void 0 : newSerializeUserBase(val.modifiedBy) });
}
exports.newSerializeWorkflowFull = newSerializeWorkflowFull;
function newDeserializeWorkflowFull(val) {
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeUserBase(val.created_by);
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeUserBase(val.modified_by);
    const flows = (0, json_js_1.isJson)(val.flows, "array") ? val.flows.map(function (itm) {
        return newDeserializeWorkflowFlowsField(itm);
    }) : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeWorkflowMiniTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const isEnabled = (0, json_js_1.isJson)(val.is_enabled, "boolean") ? val.is_enabled : void 0;
    return { createdAt: createdAt, modifiedAt: modifiedAt, createdBy: createdBy, modifiedBy: modifiedBy, flows: flows, id: id, type: type, name: name, description: description, isEnabled: isEnabled };
}
exports.newDeserializeWorkflowFull = newDeserializeWorkflowFull;
function newSerializeZipDownloadNameConflictsFieldTypeField(val) {
    return val;
}
exports.newSerializeZipDownloadNameConflictsFieldTypeField = newSerializeZipDownloadNameConflictsFieldTypeField;
function newDeserializeZipDownloadNameConflictsFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ZipDownloadNameConflictsFieldTypeField\"";
    }
    if (val == "file") {
        return "file";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeZipDownloadNameConflictsFieldTypeField = newDeserializeZipDownloadNameConflictsFieldTypeField;
function newSerializeZipDownloadNameConflictsField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeZipDownloadNameConflictsFieldTypeField(val.type), ["original_name"]: val.originalName, ["download_name"]: val.downloadName };
}
exports.newSerializeZipDownloadNameConflictsField = newSerializeZipDownloadNameConflictsField;
function newDeserializeZipDownloadNameConflictsField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeZipDownloadNameConflictsFieldTypeField(val.type);
    const originalName = (0, json_js_1.isJson)(val.original_name, "string") ? val.original_name : void 0;
    const downloadName = (0, json_js_1.isJson)(val.download_name, "string") ? val.download_name : void 0;
    return { id: id, type: type, originalName: originalName, downloadName: downloadName };
}
exports.newDeserializeZipDownloadNameConflictsField = newDeserializeZipDownloadNameConflictsField;
function newSerializeZipDownload(val) {
    return { ["download_url"]: val.downloadUrl, ["status_url"]: val.statusUrl, ["expires_at"]: val.expiresAt, ["name_conflicts"]: val.nameConflicts == void 0 ? void 0 : val.nameConflicts.map(function (item) {
            return void 0;
        }) };
}
exports.newSerializeZipDownload = newSerializeZipDownload;
function newDeserializeZipDownload(val) {
    const downloadUrl = (0, json_js_1.isJson)(val.download_url, "string") ? val.download_url : void 0;
    const statusUrl = (0, json_js_1.isJson)(val.status_url, "string") ? val.status_url : void 0;
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    const nameConflicts = (0, json_js_1.isJson)(val.name_conflicts, "array") ? val.name_conflicts.map(function (itm) {
        return void 0;
    }) : void 0;
    return { downloadUrl: downloadUrl, statusUrl: statusUrl, expiresAt: expiresAt, nameConflicts: nameConflicts };
}
exports.newDeserializeZipDownload = newDeserializeZipDownload;
function newSerializeZipDownloadStatusStateField(val) {
    return val;
}
exports.newSerializeZipDownloadStatusStateField = newSerializeZipDownloadStatusStateField;
function newDeserializeZipDownloadStatusStateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ZipDownloadStatusStateField\"";
    }
    if (val == "in_progress") {
        return "in_progress";
    }
    if (val == "failed") {
        return "failed";
    }
    if (val == "success") {
        return "success";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeZipDownloadStatusStateField = newDeserializeZipDownloadStatusStateField;
function newSerializeZipDownloadStatus(val) {
    return { ["total_file_count"]: val.totalFileCount, ["downloaded_file_count"]: val.downloadedFileCount, ["skipped_file_count"]: val.skippedFileCount, ["skipped_folder_count"]: val.skippedFolderCount, ["state"]: val.state == void 0 ? void 0 : newSerializeZipDownloadStatusStateField(val.state) };
}
exports.newSerializeZipDownloadStatus = newSerializeZipDownloadStatus;
function newDeserializeZipDownloadStatus(val) {
    const totalFileCount = (0, json_js_1.isJson)(val.total_file_count, "number") ? val.total_file_count : void 0;
    const downloadedFileCount = (0, json_js_1.isJson)(val.downloaded_file_count, "number") ? val.downloaded_file_count : void 0;
    const skippedFileCount = (0, json_js_1.isJson)(val.skipped_file_count, "number") ? val.skipped_file_count : void 0;
    const skippedFolderCount = (0, json_js_1.isJson)(val.skipped_folder_count, "number") ? val.skipped_folder_count : void 0;
    const state = val.state == void 0 ? void 0 : newDeserializeZipDownloadStatusStateField(val.state);
    return { totalFileCount: totalFileCount, downloadedFileCount: downloadedFileCount, skippedFileCount: skippedFileCount, skippedFolderCount: skippedFolderCount, state: state };
}
exports.newDeserializeZipDownloadStatus = newDeserializeZipDownloadStatus;
function newSerializeKeywordSkillCardTypeField(val) {
    return val;
}
exports.newSerializeKeywordSkillCardTypeField = newSerializeKeywordSkillCardTypeField;
function newDeserializeKeywordSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"KeywordSkillCardTypeField\"";
    }
    if (val == "skill_card") {
        return "skill_card";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeKeywordSkillCardTypeField = newDeserializeKeywordSkillCardTypeField;
function newSerializeKeywordSkillCardSkillCardTypeField(val) {
    return val;
}
exports.newSerializeKeywordSkillCardSkillCardTypeField = newSerializeKeywordSkillCardSkillCardTypeField;
function newDeserializeKeywordSkillCardSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"KeywordSkillCardSkillCardTypeField\"";
    }
    if (val == "keyword") {
        return "keyword";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeKeywordSkillCardSkillCardTypeField = newDeserializeKeywordSkillCardSkillCardTypeField;
function newSerializeKeywordSkillCardSkillCardTitleField(val) {
    return { ["code"]: val.code, ["message"]: val.message };
}
exports.newSerializeKeywordSkillCardSkillCardTitleField = newSerializeKeywordSkillCardSkillCardTitleField;
function newDeserializeKeywordSkillCardSkillCardTitleField(val) {
    const code = (0, json_js_1.isJson)(val.code, "string") ? val.code : void 0;
    const message = val.message;
    return { code: code, message: message };
}
exports.newDeserializeKeywordSkillCardSkillCardTitleField = newDeserializeKeywordSkillCardSkillCardTitleField;
function newSerializeKeywordSkillCardSkillFieldTypeField(val) {
    return val;
}
exports.newSerializeKeywordSkillCardSkillFieldTypeField = newSerializeKeywordSkillCardSkillFieldTypeField;
function newDeserializeKeywordSkillCardSkillFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"KeywordSkillCardSkillFieldTypeField\"";
    }
    if (val == "service") {
        return "service";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeKeywordSkillCardSkillFieldTypeField = newDeserializeKeywordSkillCardSkillFieldTypeField;
function newSerializeKeywordSkillCardSkillField(val) {
    return { ["type"]: newSerializeKeywordSkillCardSkillFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeKeywordSkillCardSkillField = newSerializeKeywordSkillCardSkillField;
function newDeserializeKeywordSkillCardSkillField(val) {
    const type = newDeserializeKeywordSkillCardSkillFieldTypeField(val.type);
    const id = val.id;
    return { type: type, id: id };
}
exports.newDeserializeKeywordSkillCardSkillField = newDeserializeKeywordSkillCardSkillField;
function newSerializeKeywordSkillCardInvocationFieldTypeField(val) {
    return val;
}
exports.newSerializeKeywordSkillCardInvocationFieldTypeField = newSerializeKeywordSkillCardInvocationFieldTypeField;
function newDeserializeKeywordSkillCardInvocationFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"KeywordSkillCardInvocationFieldTypeField\"";
    }
    if (val == "skill_invocation") {
        return "skill_invocation";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeKeywordSkillCardInvocationFieldTypeField = newDeserializeKeywordSkillCardInvocationFieldTypeField;
function newSerializeKeywordSkillCardInvocationField(val) {
    return { ["type"]: newSerializeKeywordSkillCardInvocationFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeKeywordSkillCardInvocationField = newSerializeKeywordSkillCardInvocationField;
function newDeserializeKeywordSkillCardInvocationField(val) {
    const type = newDeserializeKeywordSkillCardInvocationFieldTypeField(val.type);
    const id = val.id;
    return { type: type, id: id };
}
exports.newDeserializeKeywordSkillCardInvocationField = newDeserializeKeywordSkillCardInvocationField;
function newSerializeKeywordSkillCardEntriesField(val) {
    return { ["text"]: val.text };
}
exports.newSerializeKeywordSkillCardEntriesField = newSerializeKeywordSkillCardEntriesField;
function newDeserializeKeywordSkillCardEntriesField(val) {
    const text = (0, json_js_1.isJson)(val.text, "string") ? val.text : void 0;
    return { text: text };
}
exports.newDeserializeKeywordSkillCardEntriesField = newDeserializeKeywordSkillCardEntriesField;
function newSerializeKeywordSkillCard(val) {
    return { ["created_at"]: val.createdAt, ["type"]: newSerializeKeywordSkillCardTypeField(val.type), ["skill_card_type"]: newSerializeKeywordSkillCardSkillCardTypeField(val.skillCardType), ["skill_card_title"]: val.skillCardTitle == void 0 ? void 0 : newSerializeKeywordSkillCardSkillCardTitleField(val.skillCardTitle), ["skill"]: newSerializeKeywordSkillCardSkillField(val.skill), ["invocation"]: newSerializeKeywordSkillCardInvocationField(val.invocation), ["entries"]: val.entries.map(function (item) {
            return newSerializeKeywordSkillCardEntriesField(item);
        }) };
}
exports.newSerializeKeywordSkillCard = newSerializeKeywordSkillCard;
function newDeserializeKeywordSkillCard(val) {
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const type = newDeserializeKeywordSkillCardTypeField(val.type);
    const skillCardType = newDeserializeKeywordSkillCardSkillCardTypeField(val.skill_card_type);
    const skillCardTitle = val.skill_card_title == void 0 ? void 0 : newDeserializeKeywordSkillCardSkillCardTitleField(val.skill_card_title);
    const skill = newDeserializeKeywordSkillCardSkillField(val.skill);
    const invocation = newDeserializeKeywordSkillCardInvocationField(val.invocation);
    const entries = val.entries.map(function (itm) {
        return newDeserializeKeywordSkillCardEntriesField(itm);
    });
    return { createdAt: createdAt, type: type, skillCardType: skillCardType, skillCardTitle: skillCardTitle, skill: skill, invocation: invocation, entries: entries };
}
exports.newDeserializeKeywordSkillCard = newDeserializeKeywordSkillCard;
function newSerializeIntegrationMappingSlackOptions(val) {
    return { ["is_access_management_disabled"]: val.isAccessManagementDisabled };
}
exports.newSerializeIntegrationMappingSlackOptions = newSerializeIntegrationMappingSlackOptions;
function newDeserializeIntegrationMappingSlackOptions(val) {
    const isAccessManagementDisabled = (0, json_js_1.isJson)(val.is_access_management_disabled, "boolean") ? val.is_access_management_disabled : void 0;
    return { isAccessManagementDisabled: isAccessManagementDisabled };
}
exports.newDeserializeIntegrationMappingSlackOptions = newDeserializeIntegrationMappingSlackOptions;
function newSerializeIntegrationMappingPartnerItemSlackTypeField(val) {
    return val;
}
exports.newSerializeIntegrationMappingPartnerItemSlackTypeField = newSerializeIntegrationMappingPartnerItemSlackTypeField;
function newDeserializeIntegrationMappingPartnerItemSlackTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"IntegrationMappingPartnerItemSlackTypeField\"";
    }
    if (val == "channel") {
        return "channel";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeIntegrationMappingPartnerItemSlackTypeField = newDeserializeIntegrationMappingPartnerItemSlackTypeField;
function newSerializeIntegrationMappingPartnerItemSlack(val) {
    return { ["type"]: newSerializeIntegrationMappingPartnerItemSlackTypeField(val.type), ["id"]: val.id, ["slack_workspace_id"]: val.slackWorkspaceId, ["slack_org_id"]: val.slackOrgId };
}
exports.newSerializeIntegrationMappingPartnerItemSlack = newSerializeIntegrationMappingPartnerItemSlack;
function newDeserializeIntegrationMappingPartnerItemSlack(val) {
    const type = newDeserializeIntegrationMappingPartnerItemSlackTypeField(val.type);
    const id = val.id;
    const slackWorkspaceId = (0, json_js_1.isJson)(val.slack_workspace_id, "string") ? val.slack_workspace_id : void 0;
    const slackOrgId = (0, json_js_1.isJson)(val.slack_org_id, "string") ? val.slack_org_id : void 0;
    return { type: type, id: id, slackWorkspaceId: slackWorkspaceId, slackOrgId: slackOrgId };
}
exports.newDeserializeIntegrationMappingPartnerItemSlack = newDeserializeIntegrationMappingPartnerItemSlack;
function newSerializeIntegrationMappingTypeField(val) {
    return val;
}
exports.newSerializeIntegrationMappingTypeField = newSerializeIntegrationMappingTypeField;
function newDeserializeIntegrationMappingTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"IntegrationMappingTypeField\"";
    }
    if (val == "integration_mapping") {
        return "integration_mapping";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeIntegrationMappingTypeField = newDeserializeIntegrationMappingTypeField;
function newSerializeIntegrationMappingBoxItemField(val) {
    return {};
}
exports.newSerializeIntegrationMappingBoxItemField = newSerializeIntegrationMappingBoxItemField;
function newDeserializeIntegrationMappingBoxItemField(val) {
    return {};
}
exports.newDeserializeIntegrationMappingBoxItemField = newDeserializeIntegrationMappingBoxItemField;
function newSerializeIntegrationMappingOptionsField(val) {
    return {};
}
exports.newSerializeIntegrationMappingOptionsField = newSerializeIntegrationMappingOptionsField;
function newDeserializeIntegrationMappingOptionsField(val) {
    return {};
}
exports.newDeserializeIntegrationMappingOptionsField = newDeserializeIntegrationMappingOptionsField;
function newSerializeIntegrationMappingCreatedByField(val) {
    return {};
}
exports.newSerializeIntegrationMappingCreatedByField = newSerializeIntegrationMappingCreatedByField;
function newDeserializeIntegrationMappingCreatedByField(val) {
    return {};
}
exports.newDeserializeIntegrationMappingCreatedByField = newDeserializeIntegrationMappingCreatedByField;
function newSerializeIntegrationMappingModifiedByField(val) {
    return {};
}
exports.newSerializeIntegrationMappingModifiedByField = newSerializeIntegrationMappingModifiedByField;
function newDeserializeIntegrationMappingModifiedByField(val) {
    return {};
}
exports.newDeserializeIntegrationMappingModifiedByField = newDeserializeIntegrationMappingModifiedByField;
function newSerializeIntegrationMapping(val) {
    const base = newSerializeIntegrationMappingBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"IntegrationMapping\"";
    }
    return Object.assign(Object.assign({}, base), { ["type"]: newSerializeIntegrationMappingTypeField(val.type), ["partner_item"]: newSerializeIntegrationMappingPartnerItemSlack(val.partnerItem), ["box_item"]: newSerializeIntegrationMappingBoxItemField(val.boxItem), ["is_manually_created"]: val.isManuallyCreated, ["options"]: val.options == void 0 ? void 0 : newSerializeIntegrationMappingOptionsField(val.options), ["created_by"]: val.createdBy == void 0 ? void 0 : newSerializeIntegrationMappingCreatedByField(val.createdBy), ["modified_by"]: val.modifiedBy == void 0 ? void 0 : newSerializeIntegrationMappingModifiedByField(val.modifiedBy), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt });
}
exports.newSerializeIntegrationMapping = newSerializeIntegrationMapping;
function newDeserializeIntegrationMapping(val) {
    const type = newDeserializeIntegrationMappingTypeField(val.type);
    const partnerItem = newDeserializeIntegrationMappingPartnerItemSlack(val.partner_item);
    const boxItem = newDeserializeIntegrationMappingBoxItemField(val.box_item);
    const isManuallyCreated = (0, json_js_1.isJson)(val.is_manually_created, "boolean") ? val.is_manually_created : void 0;
    const options = val.options == void 0 ? void 0 : newDeserializeIntegrationMappingOptionsField(val.options);
    const createdBy = val.created_by == void 0 ? void 0 : newDeserializeIntegrationMappingCreatedByField(val.created_by);
    const modifiedBy = val.modified_by == void 0 ? void 0 : newDeserializeIntegrationMappingModifiedByField(val.modified_by);
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const integrationType = val.integration_type == void 0 ? void 0 : newDeserializeIntegrationMappingBaseIntegrationTypeField(val.integration_type);
    return { type: type, partnerItem: partnerItem, boxItem: boxItem, isManuallyCreated: isManuallyCreated, options: options, createdBy: createdBy, modifiedBy: modifiedBy, createdAt: createdAt, modifiedAt: modifiedAt, id: id, integrationType: integrationType };
}
exports.newDeserializeIntegrationMapping = newDeserializeIntegrationMapping;
function newSerializeIntegrationMappings(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeIntegrationMapping(item);
        }) };
}
exports.newSerializeIntegrationMappings = newSerializeIntegrationMappings;
function newDeserializeIntegrationMappings(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeIntegrationMapping(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeIntegrationMappings = newDeserializeIntegrationMappings;
function newSerializeIntegrationMappingBoxItemSlackTypeField(val) {
    return val;
}
exports.newSerializeIntegrationMappingBoxItemSlackTypeField = newSerializeIntegrationMappingBoxItemSlackTypeField;
function newDeserializeIntegrationMappingBoxItemSlackTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"IntegrationMappingBoxItemSlackTypeField\"";
    }
    if (val == "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeIntegrationMappingBoxItemSlackTypeField = newDeserializeIntegrationMappingBoxItemSlackTypeField;
function newSerializeIntegrationMappingBoxItemSlack(val) {
    return { ["type"]: newSerializeIntegrationMappingBoxItemSlackTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeIntegrationMappingBoxItemSlack = newSerializeIntegrationMappingBoxItemSlack;
function newDeserializeIntegrationMappingBoxItemSlack(val) {
    const type = newDeserializeIntegrationMappingBoxItemSlackTypeField(val.type);
    const id = val.id;
    return { type: type, id: id };
}
exports.newDeserializeIntegrationMappingBoxItemSlack = newDeserializeIntegrationMappingBoxItemSlack;
function newSerializeTimelineSkillCardTypeField(val) {
    return val;
}
exports.newSerializeTimelineSkillCardTypeField = newSerializeTimelineSkillCardTypeField;
function newDeserializeTimelineSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TimelineSkillCardTypeField\"";
    }
    if (val == "skill_card") {
        return "skill_card";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTimelineSkillCardTypeField = newDeserializeTimelineSkillCardTypeField;
function newSerializeTimelineSkillCardSkillCardTypeField(val) {
    return val;
}
exports.newSerializeTimelineSkillCardSkillCardTypeField = newSerializeTimelineSkillCardSkillCardTypeField;
function newDeserializeTimelineSkillCardSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TimelineSkillCardSkillCardTypeField\"";
    }
    if (val == "timeline") {
        return "timeline";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTimelineSkillCardSkillCardTypeField = newDeserializeTimelineSkillCardSkillCardTypeField;
function newSerializeTimelineSkillCardSkillCardTitleField(val) {
    return { ["code"]: val.code, ["message"]: val.message };
}
exports.newSerializeTimelineSkillCardSkillCardTitleField = newSerializeTimelineSkillCardSkillCardTitleField;
function newDeserializeTimelineSkillCardSkillCardTitleField(val) {
    const code = (0, json_js_1.isJson)(val.code, "string") ? val.code : void 0;
    const message = val.message;
    return { code: code, message: message };
}
exports.newDeserializeTimelineSkillCardSkillCardTitleField = newDeserializeTimelineSkillCardSkillCardTitleField;
function newSerializeTimelineSkillCardSkillFieldTypeField(val) {
    return val;
}
exports.newSerializeTimelineSkillCardSkillFieldTypeField = newSerializeTimelineSkillCardSkillFieldTypeField;
function newDeserializeTimelineSkillCardSkillFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TimelineSkillCardSkillFieldTypeField\"";
    }
    if (val == "service") {
        return "service";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTimelineSkillCardSkillFieldTypeField = newDeserializeTimelineSkillCardSkillFieldTypeField;
function newSerializeTimelineSkillCardSkillField(val) {
    return { ["type"]: newSerializeTimelineSkillCardSkillFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeTimelineSkillCardSkillField = newSerializeTimelineSkillCardSkillField;
function newDeserializeTimelineSkillCardSkillField(val) {
    const type = newDeserializeTimelineSkillCardSkillFieldTypeField(val.type);
    const id = val.id;
    return { type: type, id: id };
}
exports.newDeserializeTimelineSkillCardSkillField = newDeserializeTimelineSkillCardSkillField;
function newSerializeTimelineSkillCardInvocationFieldTypeField(val) {
    return val;
}
exports.newSerializeTimelineSkillCardInvocationFieldTypeField = newSerializeTimelineSkillCardInvocationFieldTypeField;
function newDeserializeTimelineSkillCardInvocationFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TimelineSkillCardInvocationFieldTypeField\"";
    }
    if (val == "skill_invocation") {
        return "skill_invocation";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTimelineSkillCardInvocationFieldTypeField = newDeserializeTimelineSkillCardInvocationFieldTypeField;
function newSerializeTimelineSkillCardInvocationField(val) {
    return { ["type"]: newSerializeTimelineSkillCardInvocationFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeTimelineSkillCardInvocationField = newSerializeTimelineSkillCardInvocationField;
function newDeserializeTimelineSkillCardInvocationField(val) {
    const type = newDeserializeTimelineSkillCardInvocationFieldTypeField(val.type);
    const id = val.id;
    return { type: type, id: id };
}
exports.newDeserializeTimelineSkillCardInvocationField = newDeserializeTimelineSkillCardInvocationField;
function newSerializeTimelineSkillCardEntriesFieldAppearsField(val) {
    return { ["start"]: val.start, ["end"]: val.end };
}
exports.newSerializeTimelineSkillCardEntriesFieldAppearsField = newSerializeTimelineSkillCardEntriesFieldAppearsField;
function newDeserializeTimelineSkillCardEntriesFieldAppearsField(val) {
    const start = (0, json_js_1.isJson)(val.start, "number") ? val.start : void 0;
    const end = (0, json_js_1.isJson)(val.end, "number") ? val.end : void 0;
    return { start: start, end: end };
}
exports.newDeserializeTimelineSkillCardEntriesFieldAppearsField = newDeserializeTimelineSkillCardEntriesFieldAppearsField;
function newSerializeTimelineSkillCardEntriesField(val) {
    return { ["text"]: val.text, ["appears"]: val.appears == void 0 ? void 0 : val.appears.map(function (item) {
            return newSerializeTimelineSkillCardEntriesFieldAppearsField(item);
        }), ["image_url"]: val.imageUrl };
}
exports.newSerializeTimelineSkillCardEntriesField = newSerializeTimelineSkillCardEntriesField;
function newDeserializeTimelineSkillCardEntriesField(val) {
    const text = (0, json_js_1.isJson)(val.text, "string") ? val.text : void 0;
    const appears = (0, json_js_1.isJson)(val.appears, "array") ? val.appears.map(function (itm) {
        return newDeserializeTimelineSkillCardEntriesFieldAppearsField(itm);
    }) : void 0;
    const imageUrl = (0, json_js_1.isJson)(val.image_url, "string") ? val.image_url : void 0;
    return { text: text, appears: appears, imageUrl: imageUrl };
}
exports.newDeserializeTimelineSkillCardEntriesField = newDeserializeTimelineSkillCardEntriesField;
function newSerializeTimelineSkillCard(val) {
    return { ["created_at"]: val.createdAt, ["type"]: newSerializeTimelineSkillCardTypeField(val.type), ["skill_card_type"]: newSerializeTimelineSkillCardSkillCardTypeField(val.skillCardType), ["skill_card_title"]: val.skillCardTitle == void 0 ? void 0 : newSerializeTimelineSkillCardSkillCardTitleField(val.skillCardTitle), ["skill"]: newSerializeTimelineSkillCardSkillField(val.skill), ["invocation"]: newSerializeTimelineSkillCardInvocationField(val.invocation), ["duration"]: val.duration, ["entries"]: val.entries.map(function (item) {
            return newSerializeTimelineSkillCardEntriesField(item);
        }) };
}
exports.newSerializeTimelineSkillCard = newSerializeTimelineSkillCard;
function newDeserializeTimelineSkillCard(val) {
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const type = newDeserializeTimelineSkillCardTypeField(val.type);
    const skillCardType = newDeserializeTimelineSkillCardSkillCardTypeField(val.skill_card_type);
    const skillCardTitle = val.skill_card_title == void 0 ? void 0 : newDeserializeTimelineSkillCardSkillCardTitleField(val.skill_card_title);
    const skill = newDeserializeTimelineSkillCardSkillField(val.skill);
    const invocation = newDeserializeTimelineSkillCardInvocationField(val.invocation);
    const duration = (0, json_js_1.isJson)(val.duration, "number") ? val.duration : void 0;
    const entries = val.entries.map(function (itm) {
        return newDeserializeTimelineSkillCardEntriesField(itm);
    });
    return { createdAt: createdAt, type: type, skillCardType: skillCardType, skillCardTitle: skillCardTitle, skill: skill, invocation: invocation, duration: duration, entries: entries };
}
exports.newDeserializeTimelineSkillCard = newDeserializeTimelineSkillCard;
function newSerializeTranscriptSkillCardTypeField(val) {
    return val;
}
exports.newSerializeTranscriptSkillCardTypeField = newSerializeTranscriptSkillCardTypeField;
function newDeserializeTranscriptSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TranscriptSkillCardTypeField\"";
    }
    if (val == "skill_card") {
        return "skill_card";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTranscriptSkillCardTypeField = newDeserializeTranscriptSkillCardTypeField;
function newSerializeTranscriptSkillCardSkillCardTypeField(val) {
    return val;
}
exports.newSerializeTranscriptSkillCardSkillCardTypeField = newSerializeTranscriptSkillCardSkillCardTypeField;
function newDeserializeTranscriptSkillCardSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TranscriptSkillCardSkillCardTypeField\"";
    }
    if (val == "transcript") {
        return "transcript";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTranscriptSkillCardSkillCardTypeField = newDeserializeTranscriptSkillCardSkillCardTypeField;
function newSerializeTranscriptSkillCardSkillCardTitleField(val) {
    return { ["code"]: val.code, ["message"]: val.message };
}
exports.newSerializeTranscriptSkillCardSkillCardTitleField = newSerializeTranscriptSkillCardSkillCardTitleField;
function newDeserializeTranscriptSkillCardSkillCardTitleField(val) {
    const code = (0, json_js_1.isJson)(val.code, "string") ? val.code : void 0;
    const message = val.message;
    return { code: code, message: message };
}
exports.newDeserializeTranscriptSkillCardSkillCardTitleField = newDeserializeTranscriptSkillCardSkillCardTitleField;
function newSerializeTranscriptSkillCardSkillFieldTypeField(val) {
    return val;
}
exports.newSerializeTranscriptSkillCardSkillFieldTypeField = newSerializeTranscriptSkillCardSkillFieldTypeField;
function newDeserializeTranscriptSkillCardSkillFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TranscriptSkillCardSkillFieldTypeField\"";
    }
    if (val == "service") {
        return "service";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTranscriptSkillCardSkillFieldTypeField = newDeserializeTranscriptSkillCardSkillFieldTypeField;
function newSerializeTranscriptSkillCardSkillField(val) {
    return { ["type"]: newSerializeTranscriptSkillCardSkillFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeTranscriptSkillCardSkillField = newSerializeTranscriptSkillCardSkillField;
function newDeserializeTranscriptSkillCardSkillField(val) {
    const type = newDeserializeTranscriptSkillCardSkillFieldTypeField(val.type);
    const id = val.id;
    return { type: type, id: id };
}
exports.newDeserializeTranscriptSkillCardSkillField = newDeserializeTranscriptSkillCardSkillField;
function newSerializeTranscriptSkillCardInvocationFieldTypeField(val) {
    return val;
}
exports.newSerializeTranscriptSkillCardInvocationFieldTypeField = newSerializeTranscriptSkillCardInvocationFieldTypeField;
function newDeserializeTranscriptSkillCardInvocationFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TranscriptSkillCardInvocationFieldTypeField\"";
    }
    if (val == "skill_invocation") {
        return "skill_invocation";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTranscriptSkillCardInvocationFieldTypeField = newDeserializeTranscriptSkillCardInvocationFieldTypeField;
function newSerializeTranscriptSkillCardInvocationField(val) {
    return { ["type"]: newSerializeTranscriptSkillCardInvocationFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeTranscriptSkillCardInvocationField = newSerializeTranscriptSkillCardInvocationField;
function newDeserializeTranscriptSkillCardInvocationField(val) {
    const type = newDeserializeTranscriptSkillCardInvocationFieldTypeField(val.type);
    const id = val.id;
    return { type: type, id: id };
}
exports.newDeserializeTranscriptSkillCardInvocationField = newDeserializeTranscriptSkillCardInvocationField;
function newSerializeTranscriptSkillCardEntriesFieldAppearsField(val) {
    return { ["start"]: val.start };
}
exports.newSerializeTranscriptSkillCardEntriesFieldAppearsField = newSerializeTranscriptSkillCardEntriesFieldAppearsField;
function newDeserializeTranscriptSkillCardEntriesFieldAppearsField(val) {
    const start = (0, json_js_1.isJson)(val.start, "number") ? val.start : void 0;
    return { start: start };
}
exports.newDeserializeTranscriptSkillCardEntriesFieldAppearsField = newDeserializeTranscriptSkillCardEntriesFieldAppearsField;
function newSerializeTranscriptSkillCardEntriesField(val) {
    return { ["text"]: val.text, ["appears"]: val.appears == void 0 ? void 0 : val.appears.map(function (item) {
            return newSerializeTranscriptSkillCardEntriesFieldAppearsField(item);
        }) };
}
exports.newSerializeTranscriptSkillCardEntriesField = newSerializeTranscriptSkillCardEntriesField;
function newDeserializeTranscriptSkillCardEntriesField(val) {
    const text = (0, json_js_1.isJson)(val.text, "string") ? val.text : void 0;
    const appears = (0, json_js_1.isJson)(val.appears, "array") ? val.appears.map(function (itm) {
        return newDeserializeTranscriptSkillCardEntriesFieldAppearsField(itm);
    }) : void 0;
    return { text: text, appears: appears };
}
exports.newDeserializeTranscriptSkillCardEntriesField = newDeserializeTranscriptSkillCardEntriesField;
function newSerializeTranscriptSkillCard(val) {
    return { ["created_at"]: val.createdAt, ["type"]: newSerializeTranscriptSkillCardTypeField(val.type), ["skill_card_type"]: newSerializeTranscriptSkillCardSkillCardTypeField(val.skillCardType), ["skill_card_title"]: val.skillCardTitle == void 0 ? void 0 : newSerializeTranscriptSkillCardSkillCardTitleField(val.skillCardTitle), ["skill"]: newSerializeTranscriptSkillCardSkillField(val.skill), ["invocation"]: newSerializeTranscriptSkillCardInvocationField(val.invocation), ["duration"]: val.duration, ["entries"]: val.entries.map(function (item) {
            return newSerializeTranscriptSkillCardEntriesField(item);
        }) };
}
exports.newSerializeTranscriptSkillCard = newSerializeTranscriptSkillCard;
function newDeserializeTranscriptSkillCard(val) {
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const type = newDeserializeTranscriptSkillCardTypeField(val.type);
    const skillCardType = newDeserializeTranscriptSkillCardSkillCardTypeField(val.skill_card_type);
    const skillCardTitle = val.skill_card_title == void 0 ? void 0 : newDeserializeTranscriptSkillCardSkillCardTitleField(val.skill_card_title);
    const skill = newDeserializeTranscriptSkillCardSkillField(val.skill);
    const invocation = newDeserializeTranscriptSkillCardInvocationField(val.invocation);
    const duration = (0, json_js_1.isJson)(val.duration, "number") ? val.duration : void 0;
    const entries = val.entries.map(function (itm) {
        return newDeserializeTranscriptSkillCardEntriesField(itm);
    });
    return { createdAt: createdAt, type: type, skillCardType: skillCardType, skillCardTitle: skillCardTitle, skill: skill, invocation: invocation, duration: duration, entries: entries };
}
exports.newDeserializeTranscriptSkillCard = newDeserializeTranscriptSkillCard;
function newSerializeStatusSkillCardTypeField(val) {
    return val;
}
exports.newSerializeStatusSkillCardTypeField = newSerializeStatusSkillCardTypeField;
function newDeserializeStatusSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StatusSkillCardTypeField\"";
    }
    if (val == "skill_card") {
        return "skill_card";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeStatusSkillCardTypeField = newDeserializeStatusSkillCardTypeField;
function newSerializeStatusSkillCardSkillCardTypeField(val) {
    return val;
}
exports.newSerializeStatusSkillCardSkillCardTypeField = newSerializeStatusSkillCardSkillCardTypeField;
function newDeserializeStatusSkillCardSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StatusSkillCardSkillCardTypeField\"";
    }
    if (val == "status") {
        return "status";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeStatusSkillCardSkillCardTypeField = newDeserializeStatusSkillCardSkillCardTypeField;
function newSerializeStatusSkillCardSkillCardTitleField(val) {
    return { ["code"]: val.code, ["message"]: val.message };
}
exports.newSerializeStatusSkillCardSkillCardTitleField = newSerializeStatusSkillCardSkillCardTitleField;
function newDeserializeStatusSkillCardSkillCardTitleField(val) {
    const code = (0, json_js_1.isJson)(val.code, "string") ? val.code : void 0;
    const message = val.message;
    return { code: code, message: message };
}
exports.newDeserializeStatusSkillCardSkillCardTitleField = newDeserializeStatusSkillCardSkillCardTitleField;
function newSerializeStatusSkillCardStatusFieldCodeField(val) {
    return val;
}
exports.newSerializeStatusSkillCardStatusFieldCodeField = newSerializeStatusSkillCardStatusFieldCodeField;
function newDeserializeStatusSkillCardStatusFieldCodeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StatusSkillCardStatusFieldCodeField\"";
    }
    if (val == "invoked") {
        return "invoked";
    }
    if (val == "processing") {
        return "processing";
    }
    if (val == "success") {
        return "success";
    }
    if (val == "transient_failure") {
        return "transient_failure";
    }
    if (val == "permanent_failure") {
        return "permanent_failure";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeStatusSkillCardStatusFieldCodeField = newDeserializeStatusSkillCardStatusFieldCodeField;
function newSerializeStatusSkillCardStatusField(val) {
    return { ["code"]: newSerializeStatusSkillCardStatusFieldCodeField(val.code), ["message"]: val.message };
}
exports.newSerializeStatusSkillCardStatusField = newSerializeStatusSkillCardStatusField;
function newDeserializeStatusSkillCardStatusField(val) {
    const code = newDeserializeStatusSkillCardStatusFieldCodeField(val.code);
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    return { code: code, message: message };
}
exports.newDeserializeStatusSkillCardStatusField = newDeserializeStatusSkillCardStatusField;
function newSerializeStatusSkillCardSkillFieldTypeField(val) {
    return val;
}
exports.newSerializeStatusSkillCardSkillFieldTypeField = newSerializeStatusSkillCardSkillFieldTypeField;
function newDeserializeStatusSkillCardSkillFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StatusSkillCardSkillFieldTypeField\"";
    }
    if (val == "service") {
        return "service";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeStatusSkillCardSkillFieldTypeField = newDeserializeStatusSkillCardSkillFieldTypeField;
function newSerializeStatusSkillCardSkillField(val) {
    return { ["type"]: newSerializeStatusSkillCardSkillFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeStatusSkillCardSkillField = newSerializeStatusSkillCardSkillField;
function newDeserializeStatusSkillCardSkillField(val) {
    const type = newDeserializeStatusSkillCardSkillFieldTypeField(val.type);
    const id = val.id;
    return { type: type, id: id };
}
exports.newDeserializeStatusSkillCardSkillField = newDeserializeStatusSkillCardSkillField;
function newSerializeStatusSkillCardInvocationFieldTypeField(val) {
    return val;
}
exports.newSerializeStatusSkillCardInvocationFieldTypeField = newSerializeStatusSkillCardInvocationFieldTypeField;
function newDeserializeStatusSkillCardInvocationFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StatusSkillCardInvocationFieldTypeField\"";
    }
    if (val == "skill_invocation") {
        return "skill_invocation";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeStatusSkillCardInvocationFieldTypeField = newDeserializeStatusSkillCardInvocationFieldTypeField;
function newSerializeStatusSkillCardInvocationField(val) {
    return { ["type"]: newSerializeStatusSkillCardInvocationFieldTypeField(val.type), ["id"]: val.id };
}
exports.newSerializeStatusSkillCardInvocationField = newSerializeStatusSkillCardInvocationField;
function newDeserializeStatusSkillCardInvocationField(val) {
    const type = newDeserializeStatusSkillCardInvocationFieldTypeField(val.type);
    const id = val.id;
    return { type: type, id: id };
}
exports.newDeserializeStatusSkillCardInvocationField = newDeserializeStatusSkillCardInvocationField;
function newSerializeStatusSkillCard(val) {
    return { ["created_at"]: val.createdAt, ["type"]: newSerializeStatusSkillCardTypeField(val.type), ["skill_card_type"]: newSerializeStatusSkillCardSkillCardTypeField(val.skillCardType), ["skill_card_title"]: val.skillCardTitle == void 0 ? void 0 : newSerializeStatusSkillCardSkillCardTitleField(val.skillCardTitle), ["status"]: newSerializeStatusSkillCardStatusField(val.status), ["skill"]: newSerializeStatusSkillCardSkillField(val.skill), ["invocation"]: newSerializeStatusSkillCardInvocationField(val.invocation) };
}
exports.newSerializeStatusSkillCard = newSerializeStatusSkillCard;
function newDeserializeStatusSkillCard(val) {
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const type = newDeserializeStatusSkillCardTypeField(val.type);
    const skillCardType = newDeserializeStatusSkillCardSkillCardTypeField(val.skill_card_type);
    const skillCardTitle = val.skill_card_title == void 0 ? void 0 : newDeserializeStatusSkillCardSkillCardTitleField(val.skill_card_title);
    const status = newDeserializeStatusSkillCardStatusField(val.status);
    const skill = newDeserializeStatusSkillCardSkillField(val.skill);
    const invocation = newDeserializeStatusSkillCardInvocationField(val.invocation);
    return { createdAt: createdAt, type: type, skillCardType: skillCardType, skillCardTitle: skillCardTitle, status: status, skill: skill, invocation: invocation };
}
exports.newDeserializeStatusSkillCard = newDeserializeStatusSkillCard;
function newSerializeKeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard(val) {
    throw "Can't serialize KeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard";
}
exports.newSerializeKeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard = newSerializeKeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard;
function newDeserializeKeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard(val) {
    throw "Can't deserialize KeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard";
}
exports.newDeserializeKeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard = newDeserializeKeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard;
function newSerializeSkillCardsMetadata(val) {
    return { ["$canEdit"]: val.canEdit, ["$id"]: val.id, ["$parent"]: val.parent, ["$scope"]: val.scope, ["$template"]: val.template, ["$type"]: val.type, ["$typeVersion"]: val.typeVersion, ["$version"]: val.version, ["cards"]: val.cards == void 0 ? void 0 : val.cards.map(function (item) {
            return newSerializeKeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard(item);
        }) };
}
exports.newSerializeSkillCardsMetadata = newSerializeSkillCardsMetadata;
function newDeserializeSkillCardsMetadata(val) {
    const canEdit = (0, json_js_1.isJson)(val.$canEdit, "boolean") ? val.$canEdit : void 0;
    const id = (0, json_js_1.isJson)(val.$id, "string") ? val.$id : void 0;
    const parent = (0, json_js_1.isJson)(val.$parent, "string") ? val.$parent : void 0;
    const scope = (0, json_js_1.isJson)(val.$scope, "string") ? val.$scope : void 0;
    const template = (0, json_js_1.isJson)(val.$template, "string") ? val.$template : void 0;
    const type = (0, json_js_1.isJson)(val.$type, "string") ? val.$type : void 0;
    const typeVersion = (0, json_js_1.isJson)(val.$typeVersion, "number") ? val.$typeVersion : void 0;
    const version = (0, json_js_1.isJson)(val.$version, "number") ? val.$version : void 0;
    const cards = (0, json_js_1.isJson)(val.cards, "array") ? val.cards.map(function (itm) {
        return newDeserializeKeywordSkillCardOrStatusSkillCardOrTimelineSkillCardOrTranscriptSkillCard(itm);
    }) : void 0;
    return { canEdit: canEdit, id: id, parent: parent, scope: scope, template: template, type: type, typeVersion: typeVersion, version: version, cards: cards };
}
exports.newDeserializeSkillCardsMetadata = newDeserializeSkillCardsMetadata;
function newSerializeSignRequestCreateSignerRoleField(val) {
    return val;
}
exports.newSerializeSignRequestCreateSignerRoleField = newSerializeSignRequestCreateSignerRoleField;
function newDeserializeSignRequestCreateSignerRoleField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestCreateSignerRoleField\"";
    }
    if (val == "signer") {
        return "signer";
    }
    if (val == "approver") {
        return "approver";
    }
    if (val == "final_copy_reader") {
        return "final_copy_reader";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSignRequestCreateSignerRoleField = newDeserializeSignRequestCreateSignerRoleField;
function newSerializeSignRequestCreateSigner(val) {
    return { ["email"]: val.email, ["role"]: val.role == void 0 ? void 0 : newSerializeSignRequestCreateSignerRoleField(val.role), ["is_in_person"]: val.isInPerson, ["order"]: val.order, ["embed_url_external_user_id"]: val.embedUrlExternalUserId, ["redirect_url"]: val.redirectUrl, ["declined_redirect_url"]: val.declinedRedirectUrl, ["login_required"]: val.loginRequired, ["verification_phone_number"]: val.verificationPhoneNumber, ["password"]: val.password };
}
exports.newSerializeSignRequestCreateSigner = newSerializeSignRequestCreateSigner;
function newDeserializeSignRequestCreateSigner(val) {
    const email = val.email;
    const role = val.role == void 0 ? void 0 : newDeserializeSignRequestCreateSignerRoleField(val.role);
    const isInPerson = (0, json_js_1.isJson)(val.is_in_person, "boolean") ? val.is_in_person : void 0;
    const order = (0, json_js_1.isJson)(val.order, "number") ? val.order : void 0;
    const embedUrlExternalUserId = (0, json_js_1.isJson)(val.embed_url_external_user_id, "string") ? val.embed_url_external_user_id : void 0;
    const redirectUrl = (0, json_js_1.isJson)(val.redirect_url, "string") ? val.redirect_url : void 0;
    const declinedRedirectUrl = (0, json_js_1.isJson)(val.declined_redirect_url, "string") ? val.declined_redirect_url : void 0;
    const loginRequired = (0, json_js_1.isJson)(val.login_required, "boolean") ? val.login_required : void 0;
    const verificationPhoneNumber = (0, json_js_1.isJson)(val.verification_phone_number, "string") ? val.verification_phone_number : void 0;
    const password = (0, json_js_1.isJson)(val.password, "string") ? val.password : void 0;
    return { email: email, role: role, isInPerson: isInPerson, order: order, embedUrlExternalUserId: embedUrlExternalUserId, redirectUrl: redirectUrl, declinedRedirectUrl: declinedRedirectUrl, loginRequired: loginRequired, verificationPhoneNumber: verificationPhoneNumber, password: password };
}
exports.newDeserializeSignRequestCreateSigner = newDeserializeSignRequestCreateSigner;
function newSerializeSignRequestPrefillTag(val) {
    return { ["document_tag_id"]: val.documentTagId, ["text_value"]: val.textValue, ["checkbox_value"]: val.checkboxValue, ["date_value"]: val.dateValue };
}
exports.newSerializeSignRequestPrefillTag = newSerializeSignRequestPrefillTag;
function newDeserializeSignRequestPrefillTag(val) {
    const documentTagId = (0, json_js_1.isJson)(val.document_tag_id, "string") ? val.document_tag_id : void 0;
    const textValue = (0, json_js_1.isJson)(val.text_value, "string") ? val.text_value : void 0;
    const checkboxValue = (0, json_js_1.isJson)(val.checkbox_value, "boolean") ? val.checkbox_value : void 0;
    const dateValue = (0, json_js_1.isJson)(val.date_value, "string") ? val.date_value : void 0;
    return { documentTagId: documentTagId, textValue: textValue, checkboxValue: checkboxValue, dateValue: dateValue };
}
exports.newDeserializeSignRequestPrefillTag = newDeserializeSignRequestPrefillTag;
function newSerializeSignRequestSignerInputTypeField(val) {
    return val;
}
exports.newSerializeSignRequestSignerInputTypeField = newSerializeSignRequestSignerInputTypeField;
function newDeserializeSignRequestSignerInputTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestSignerInputTypeField\"";
    }
    if (val == "signature") {
        return "signature";
    }
    if (val == "date") {
        return "date";
    }
    if (val == "text") {
        return "text";
    }
    if (val == "checkbox") {
        return "checkbox";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSignRequestSignerInputTypeField = newDeserializeSignRequestSignerInputTypeField;
function newSerializeSignRequestSignerInputContentTypeField(val) {
    return val;
}
exports.newSerializeSignRequestSignerInputContentTypeField = newSerializeSignRequestSignerInputContentTypeField;
function newDeserializeSignRequestSignerInputContentTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestSignerInputContentTypeField\"";
    }
    if (val == "initial") {
        return "initial";
    }
    if (val == "stamp") {
        return "stamp";
    }
    if (val == "signature") {
        return "signature";
    }
    if (val == "company") {
        return "company";
    }
    if (val == "title") {
        return "title";
    }
    if (val == "email") {
        return "email";
    }
    if (val == "full_name") {
        return "full_name";
    }
    if (val == "first_name") {
        return "first_name";
    }
    if (val == "last_name") {
        return "last_name";
    }
    if (val == "text") {
        return "text";
    }
    if (val == "date") {
        return "date";
    }
    if (val == "checkbox") {
        return "checkbox";
    }
    if (val == "attachment") {
        return "attachment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSignRequestSignerInputContentTypeField = newDeserializeSignRequestSignerInputContentTypeField;
function newSerializeSignRequestSignerInput(val) {
    const base = newSerializeSignRequestPrefillTag(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"SignRequestSignerInput\"";
    }
    return Object.assign(Object.assign({}, base), { ["type"]: val.type == void 0 ? void 0 : newSerializeSignRequestSignerInputTypeField(val.type), ["content_type"]: val.contentType == void 0 ? void 0 : newSerializeSignRequestSignerInputContentTypeField(val.contentType), ["page_index"]: val.pageIndex });
}
exports.newSerializeSignRequestSignerInput = newSerializeSignRequestSignerInput;
function newDeserializeSignRequestSignerInput(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeSignRequestSignerInputTypeField(val.type);
    const contentType = val.content_type == void 0 ? void 0 : newDeserializeSignRequestSignerInputContentTypeField(val.content_type);
    const pageIndex = val.page_index;
    const documentTagId = (0, json_js_1.isJson)(val.document_tag_id, "string") ? val.document_tag_id : void 0;
    const textValue = (0, json_js_1.isJson)(val.text_value, "string") ? val.text_value : void 0;
    const checkboxValue = (0, json_js_1.isJson)(val.checkbox_value, "boolean") ? val.checkbox_value : void 0;
    const dateValue = (0, json_js_1.isJson)(val.date_value, "string") ? val.date_value : void 0;
    return { type: type, contentType: contentType, pageIndex: pageIndex, documentTagId: documentTagId, textValue: textValue, checkboxValue: checkboxValue, dateValue: dateValue };
}
exports.newDeserializeSignRequestSignerInput = newDeserializeSignRequestSignerInput;
function newSerializeSignRequestSignerSignerDecisionFieldTypeField(val) {
    return val;
}
exports.newSerializeSignRequestSignerSignerDecisionFieldTypeField = newSerializeSignRequestSignerSignerDecisionFieldTypeField;
function newDeserializeSignRequestSignerSignerDecisionFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestSignerSignerDecisionFieldTypeField\"";
    }
    if (val == "signed") {
        return "signed";
    }
    if (val == "declined") {
        return "declined";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSignRequestSignerSignerDecisionFieldTypeField = newDeserializeSignRequestSignerSignerDecisionFieldTypeField;
function newSerializeSignRequestSignerSignerDecisionField(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeSignRequestSignerSignerDecisionFieldTypeField(val.type), ["finalized_at"]: val.finalizedAt };
}
exports.newSerializeSignRequestSignerSignerDecisionField = newSerializeSignRequestSignerSignerDecisionField;
function newDeserializeSignRequestSignerSignerDecisionField(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeSignRequestSignerSignerDecisionFieldTypeField(val.type);
    const finalizedAt = (0, json_js_1.isJson)(val.finalized_at, "string") ? val.finalized_at : void 0;
    return { type: type, finalizedAt: finalizedAt };
}
exports.newDeserializeSignRequestSignerSignerDecisionField = newDeserializeSignRequestSignerSignerDecisionField;
function newSerializeSignRequestSigner(val) {
    const base = newSerializeSignRequestCreateSigner(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"SignRequestSigner\"";
    }
    return Object.assign(Object.assign({}, base), { ["has_viewed_document"]: val.hasViewedDocument, ["signer_decision"]: val.signerDecision == void 0 ? void 0 : newSerializeSignRequestSignerSignerDecisionField(val.signerDecision), ["inputs"]: val.inputs == void 0 ? void 0 : val.inputs.map(function (item) {
            return newSerializeSignRequestSignerInput(item);
        }), ["embed_url"]: val.embedUrl });
}
exports.newSerializeSignRequestSigner = newSerializeSignRequestSigner;
function newDeserializeSignRequestSigner(val) {
    const hasViewedDocument = (0, json_js_1.isJson)(val.has_viewed_document, "boolean") ? val.has_viewed_document : void 0;
    const signerDecision = val.signer_decision == void 0 ? void 0 : newDeserializeSignRequestSignerSignerDecisionField(val.signer_decision);
    const inputs = (0, json_js_1.isJson)(val.inputs, "array") ? val.inputs.map(function (itm) {
        return newDeserializeSignRequestSignerInput(itm);
    }) : void 0;
    const embedUrl = (0, json_js_1.isJson)(val.embed_url, "string") ? val.embed_url : void 0;
    const email = val.email;
    const role = val.role == void 0 ? void 0 : newDeserializeSignRequestCreateSignerRoleField(val.role);
    const isInPerson = (0, json_js_1.isJson)(val.is_in_person, "boolean") ? val.is_in_person : void 0;
    const order = (0, json_js_1.isJson)(val.order, "number") ? val.order : void 0;
    const embedUrlExternalUserId = (0, json_js_1.isJson)(val.embed_url_external_user_id, "string") ? val.embed_url_external_user_id : void 0;
    const redirectUrl = (0, json_js_1.isJson)(val.redirect_url, "string") ? val.redirect_url : void 0;
    const declinedRedirectUrl = (0, json_js_1.isJson)(val.declined_redirect_url, "string") ? val.declined_redirect_url : void 0;
    const loginRequired = (0, json_js_1.isJson)(val.login_required, "boolean") ? val.login_required : void 0;
    const verificationPhoneNumber = (0, json_js_1.isJson)(val.verification_phone_number, "string") ? val.verification_phone_number : void 0;
    const password = (0, json_js_1.isJson)(val.password, "string") ? val.password : void 0;
    return { hasViewedDocument: hasViewedDocument, signerDecision: signerDecision, inputs: inputs, embedUrl: embedUrl, email: email, role: role, isInPerson: isInPerson, order: order, embedUrlExternalUserId: embedUrlExternalUserId, redirectUrl: redirectUrl, declinedRedirectUrl: declinedRedirectUrl, loginRequired: loginRequired, verificationPhoneNumber: verificationPhoneNumber, password: password };
}
exports.newDeserializeSignRequestSigner = newDeserializeSignRequestSigner;
function newSerializeSignRequestBase(val) {
    return { ["is_document_preparation_needed"]: val.isDocumentPreparationNeeded, ["redirect_url"]: val.redirectUrl, ["declined_redirect_url"]: val.declinedRedirectUrl, ["are_text_signatures_enabled"]: val.areTextSignaturesEnabled, ["email_subject"]: val.emailSubject, ["email_message"]: val.emailMessage, ["are_reminders_enabled"]: val.areRemindersEnabled, ["parent_folder"]: newSerializeFolderMini(val.parentFolder), ["name"]: val.name, ["prefill_tags"]: val.prefillTags == void 0 ? void 0 : val.prefillTags.map(function (item) {
            return newSerializeSignRequestPrefillTag(item);
        }), ["days_valid"]: val.daysValid, ["external_id"]: val.externalId, ["is_phone_verification_required_to_view"]: val.isPhoneVerificationRequiredToView, ["template_id"]: val.templateId };
}
exports.newSerializeSignRequestBase = newSerializeSignRequestBase;
function newDeserializeSignRequestBase(val) {
    const isDocumentPreparationNeeded = (0, json_js_1.isJson)(val.is_document_preparation_needed, "boolean") ? val.is_document_preparation_needed : void 0;
    const redirectUrl = (0, json_js_1.isJson)(val.redirect_url, "string") ? val.redirect_url : void 0;
    const declinedRedirectUrl = (0, json_js_1.isJson)(val.declined_redirect_url, "string") ? val.declined_redirect_url : void 0;
    const areTextSignaturesEnabled = (0, json_js_1.isJson)(val.are_text_signatures_enabled, "boolean") ? val.are_text_signatures_enabled : void 0;
    const emailSubject = (0, json_js_1.isJson)(val.email_subject, "string") ? val.email_subject : void 0;
    const emailMessage = (0, json_js_1.isJson)(val.email_message, "string") ? val.email_message : void 0;
    const areRemindersEnabled = (0, json_js_1.isJson)(val.are_reminders_enabled, "boolean") ? val.are_reminders_enabled : void 0;
    const parentFolder = newDeserializeFolderMini(val.parent_folder);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const prefillTags = (0, json_js_1.isJson)(val.prefill_tags, "array") ? val.prefill_tags.map(function (itm) {
        return newDeserializeSignRequestPrefillTag(itm);
    }) : void 0;
    const daysValid = (0, json_js_1.isJson)(val.days_valid, "number") ? val.days_valid : void 0;
    const externalId = (0, json_js_1.isJson)(val.external_id, "string") ? val.external_id : void 0;
    const isPhoneVerificationRequiredToView = (0, json_js_1.isJson)(val.is_phone_verification_required_to_view, "boolean") ? val.is_phone_verification_required_to_view : void 0;
    const templateId = (0, json_js_1.isJson)(val.template_id, "string") ? val.template_id : void 0;
    return { isDocumentPreparationNeeded: isDocumentPreparationNeeded, redirectUrl: redirectUrl, declinedRedirectUrl: declinedRedirectUrl, areTextSignaturesEnabled: areTextSignaturesEnabled, emailSubject: emailSubject, emailMessage: emailMessage, areRemindersEnabled: areRemindersEnabled, parentFolder: parentFolder, name: name, prefillTags: prefillTags, daysValid: daysValid, externalId: externalId, isPhoneVerificationRequiredToView: isPhoneVerificationRequiredToView, templateId: templateId };
}
exports.newDeserializeSignRequestBase = newDeserializeSignRequestBase;
function newSerializeSignRequestTypeField(val) {
    return val;
}
exports.newSerializeSignRequestTypeField = newSerializeSignRequestTypeField;
function newDeserializeSignRequestTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestTypeField\"";
    }
    if (val == "sign-request") {
        return "sign-request";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSignRequestTypeField = newDeserializeSignRequestTypeField;
function newSerializeSignRequestStatusField(val) {
    return val;
}
exports.newSerializeSignRequestStatusField = newSerializeSignRequestStatusField;
function newDeserializeSignRequestStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestStatusField\"";
    }
    if (val == "converting") {
        return "converting";
    }
    if (val == "created") {
        return "created";
    }
    if (val == "sent") {
        return "sent";
    }
    if (val == "viewed") {
        return "viewed";
    }
    if (val == "signed") {
        return "signed";
    }
    if (val == "cancelled") {
        return "cancelled";
    }
    if (val == "declined") {
        return "declined";
    }
    if (val == "error_converting") {
        return "error_converting";
    }
    if (val == "error_sending") {
        return "error_sending";
    }
    if (val == "expired") {
        return "expired";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSignRequestStatusField = newDeserializeSignRequestStatusField;
function newSerializeSignRequestSignFilesField(val) {
    return { ["files"]: val.files == void 0 ? void 0 : val.files.map(function (item) {
            return newSerializeFileMini(item);
        }), ["is_ready_for_download"]: val.isReadyForDownload };
}
exports.newSerializeSignRequestSignFilesField = newSerializeSignRequestSignFilesField;
function newDeserializeSignRequestSignFilesField(val) {
    const files = (0, json_js_1.isJson)(val.files, "array") ? val.files.map(function (itm) {
        return newDeserializeFileMini(itm);
    }) : void 0;
    const isReadyForDownload = (0, json_js_1.isJson)(val.is_ready_for_download, "boolean") ? val.is_ready_for_download : void 0;
    return { files: files, isReadyForDownload: isReadyForDownload };
}
exports.newDeserializeSignRequestSignFilesField = newDeserializeSignRequestSignFilesField;
function newSerializeSignRequest(val) {
    const base = newSerializeSignRequestBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"SignRequest\"";
    }
    return Object.assign(Object.assign({}, base), { ["type"]: val.type == void 0 ? void 0 : newSerializeSignRequestTypeField(val.type), ["source_files"]: val.sourceFiles == void 0 ? void 0 : val.sourceFiles.map(function (item) {
            return newSerializeFileBase(item);
        }), ["signers"]: val.signers == void 0 ? void 0 : val.signers.map(function (item) {
            return newSerializeSignRequestSigner(item);
        }), ["signature_color"]: val.signatureColor, ["id"]: val.id, ["prepare_url"]: val.prepareUrl, ["signing_log"]: val.signingLog == void 0 ? void 0 : newSerializeFileMini(val.signingLog), ["status"]: val.status == void 0 ? void 0 : newSerializeSignRequestStatusField(val.status), ["sign_files"]: val.signFiles == void 0 ? void 0 : newSerializeSignRequestSignFilesField(val.signFiles), ["auto_expire_at"]: val.autoExpireAt });
}
exports.newSerializeSignRequest = newSerializeSignRequest;
function newDeserializeSignRequest(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeSignRequestTypeField(val.type);
    const sourceFiles = (0, json_js_1.isJson)(val.source_files, "array") ? val.source_files.map(function (itm) {
        return newDeserializeFileBase(itm);
    }) : void 0;
    const signers = (0, json_js_1.isJson)(val.signers, "array") ? val.signers.map(function (itm) {
        return newDeserializeSignRequestSigner(itm);
    }) : void 0;
    const signatureColor = (0, json_js_1.isJson)(val.signature_color, "string") ? val.signature_color : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const prepareUrl = (0, json_js_1.isJson)(val.prepare_url, "string") ? val.prepare_url : void 0;
    const signingLog = val.signing_log == void 0 ? void 0 : newDeserializeFileMini(val.signing_log);
    const status = val.status == void 0 ? void 0 : newDeserializeSignRequestStatusField(val.status);
    const signFiles = val.sign_files == void 0 ? void 0 : newDeserializeSignRequestSignFilesField(val.sign_files);
    const autoExpireAt = (0, json_js_1.isJson)(val.auto_expire_at, "string") ? val.auto_expire_at : void 0;
    const isDocumentPreparationNeeded = (0, json_js_1.isJson)(val.is_document_preparation_needed, "boolean") ? val.is_document_preparation_needed : void 0;
    const redirectUrl = (0, json_js_1.isJson)(val.redirect_url, "string") ? val.redirect_url : void 0;
    const declinedRedirectUrl = (0, json_js_1.isJson)(val.declined_redirect_url, "string") ? val.declined_redirect_url : void 0;
    const areTextSignaturesEnabled = (0, json_js_1.isJson)(val.are_text_signatures_enabled, "boolean") ? val.are_text_signatures_enabled : void 0;
    const emailSubject = (0, json_js_1.isJson)(val.email_subject, "string") ? val.email_subject : void 0;
    const emailMessage = (0, json_js_1.isJson)(val.email_message, "string") ? val.email_message : void 0;
    const areRemindersEnabled = (0, json_js_1.isJson)(val.are_reminders_enabled, "boolean") ? val.are_reminders_enabled : void 0;
    const parentFolder = newDeserializeFolderMini(val.parent_folder);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const prefillTags = (0, json_js_1.isJson)(val.prefill_tags, "array") ? val.prefill_tags.map(function (itm) {
        return newDeserializeSignRequestPrefillTag(itm);
    }) : void 0;
    const daysValid = (0, json_js_1.isJson)(val.days_valid, "number") ? val.days_valid : void 0;
    const externalId = (0, json_js_1.isJson)(val.external_id, "string") ? val.external_id : void 0;
    const isPhoneVerificationRequiredToView = (0, json_js_1.isJson)(val.is_phone_verification_required_to_view, "boolean") ? val.is_phone_verification_required_to_view : void 0;
    const templateId = (0, json_js_1.isJson)(val.template_id, "string") ? val.template_id : void 0;
    return { type: type, sourceFiles: sourceFiles, signers: signers, signatureColor: signatureColor, id: id, prepareUrl: prepareUrl, signingLog: signingLog, status: status, signFiles: signFiles, autoExpireAt: autoExpireAt, isDocumentPreparationNeeded: isDocumentPreparationNeeded, redirectUrl: redirectUrl, declinedRedirectUrl: declinedRedirectUrl, areTextSignaturesEnabled: areTextSignaturesEnabled, emailSubject: emailSubject, emailMessage: emailMessage, areRemindersEnabled: areRemindersEnabled, parentFolder: parentFolder, name: name, prefillTags: prefillTags, daysValid: daysValid, externalId: externalId, isPhoneVerificationRequiredToView: isPhoneVerificationRequiredToView, templateId: templateId };
}
exports.newDeserializeSignRequest = newDeserializeSignRequest;
function newSerializeSignRequests(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries == void 0 ? void 0 : val.entries.map(function (item) {
            return newSerializeSignRequest(item);
        }) };
}
exports.newSerializeSignRequests = newSerializeSignRequests;
function newDeserializeSignRequests(val) {
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return newDeserializeSignRequest(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.newDeserializeSignRequests = newDeserializeSignRequests;
function newSerializeSignRequestCreateRequest(val) {
    const base = newSerializeSignRequestBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"SignRequestCreateRequest\"";
    }
    return Object.assign(Object.assign({}, base), { ["source_files"]: val.sourceFiles == void 0 ? void 0 : val.sourceFiles.map(function (item) {
            return newSerializeFileBase(item);
        }), ["signers"]: val.signers.map(function (item) {
            return newSerializeSignRequestCreateSigner(item);
        }) });
}
exports.newSerializeSignRequestCreateRequest = newSerializeSignRequestCreateRequest;
function newDeserializeSignRequestCreateRequest(val) {
    const sourceFiles = (0, json_js_1.isJson)(val.source_files, "array") ? val.source_files.map(function (itm) {
        return newDeserializeFileBase(itm);
    }) : void 0;
    const signers = val.signers.map(function (itm) {
        return newDeserializeSignRequestCreateSigner(itm);
    });
    const isDocumentPreparationNeeded = (0, json_js_1.isJson)(val.is_document_preparation_needed, "boolean") ? val.is_document_preparation_needed : void 0;
    const redirectUrl = (0, json_js_1.isJson)(val.redirect_url, "string") ? val.redirect_url : void 0;
    const declinedRedirectUrl = (0, json_js_1.isJson)(val.declined_redirect_url, "string") ? val.declined_redirect_url : void 0;
    const areTextSignaturesEnabled = (0, json_js_1.isJson)(val.are_text_signatures_enabled, "boolean") ? val.are_text_signatures_enabled : void 0;
    const emailSubject = (0, json_js_1.isJson)(val.email_subject, "string") ? val.email_subject : void 0;
    const emailMessage = (0, json_js_1.isJson)(val.email_message, "string") ? val.email_message : void 0;
    const areRemindersEnabled = (0, json_js_1.isJson)(val.are_reminders_enabled, "boolean") ? val.are_reminders_enabled : void 0;
    const parentFolder = newDeserializeFolderMini(val.parent_folder);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const prefillTags = (0, json_js_1.isJson)(val.prefill_tags, "array") ? val.prefill_tags.map(function (itm) {
        return newDeserializeSignRequestPrefillTag(itm);
    }) : void 0;
    const daysValid = (0, json_js_1.isJson)(val.days_valid, "number") ? val.days_valid : void 0;
    const externalId = (0, json_js_1.isJson)(val.external_id, "string") ? val.external_id : void 0;
    const isPhoneVerificationRequiredToView = (0, json_js_1.isJson)(val.is_phone_verification_required_to_view, "boolean") ? val.is_phone_verification_required_to_view : void 0;
    const templateId = (0, json_js_1.isJson)(val.template_id, "string") ? val.template_id : void 0;
    return { sourceFiles: sourceFiles, signers: signers, isDocumentPreparationNeeded: isDocumentPreparationNeeded, redirectUrl: redirectUrl, declinedRedirectUrl: declinedRedirectUrl, areTextSignaturesEnabled: areTextSignaturesEnabled, emailSubject: emailSubject, emailMessage: emailMessage, areRemindersEnabled: areRemindersEnabled, parentFolder: parentFolder, name: name, prefillTags: prefillTags, daysValid: daysValid, externalId: externalId, isPhoneVerificationRequiredToView: isPhoneVerificationRequiredToView, templateId: templateId };
}
exports.newDeserializeSignRequestCreateRequest = newDeserializeSignRequestCreateRequest;
function newSerializeTemplateSignerInputTypeField(val) {
    return val;
}
exports.newSerializeTemplateSignerInputTypeField = newSerializeTemplateSignerInputTypeField;
function newDeserializeTemplateSignerInputTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TemplateSignerInputTypeField\"";
    }
    if (val == "signature") {
        return "signature";
    }
    if (val == "date") {
        return "date";
    }
    if (val == "text") {
        return "text";
    }
    if (val == "checkbox") {
        return "checkbox";
    }
    if (val == "radio") {
        return "radio";
    }
    if (val == "dropdown") {
        return "dropdown";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTemplateSignerInputTypeField = newDeserializeTemplateSignerInputTypeField;
function newSerializeTemplateSignerInputContentTypeField(val) {
    return val;
}
exports.newSerializeTemplateSignerInputContentTypeField = newSerializeTemplateSignerInputContentTypeField;
function newDeserializeTemplateSignerInputContentTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TemplateSignerInputContentTypeField\"";
    }
    if (val == "signature") {
        return "signature";
    }
    if (val == "initial") {
        return "initial";
    }
    if (val == "stamp") {
        return "stamp";
    }
    if (val == "date") {
        return "date";
    }
    if (val == "checkbox") {
        return "checkbox";
    }
    if (val == "text") {
        return "text";
    }
    if (val == "full_name") {
        return "full_name";
    }
    if (val == "first_name") {
        return "first_name";
    }
    if (val == "last_name") {
        return "last_name";
    }
    if (val == "company") {
        return "company";
    }
    if (val == "title") {
        return "title";
    }
    if (val == "email") {
        return "email";
    }
    if (val == "attachment") {
        return "attachment";
    }
    if (val == "radio") {
        return "radio";
    }
    if (val == "dropdown") {
        return "dropdown";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTemplateSignerInputContentTypeField = newDeserializeTemplateSignerInputContentTypeField;
function newSerializeTemplateSignerInputCoordinatesField(val) {
    return { ["x"]: val.x, ["y"]: val.y };
}
exports.newSerializeTemplateSignerInputCoordinatesField = newSerializeTemplateSignerInputCoordinatesField;
function newDeserializeTemplateSignerInputCoordinatesField(val) {
    const x = (0, json_js_1.isJson)(val.x, "number") ? val.x : void 0;
    const y = (0, json_js_1.isJson)(val.y, "number") ? val.y : void 0;
    return { x: x, y: y };
}
exports.newDeserializeTemplateSignerInputCoordinatesField = newDeserializeTemplateSignerInputCoordinatesField;
function newSerializeTemplateSignerInputDimensionsField(val) {
    return { ["width"]: val.width, ["height"]: val.height };
}
exports.newSerializeTemplateSignerInputDimensionsField = newSerializeTemplateSignerInputDimensionsField;
function newDeserializeTemplateSignerInputDimensionsField(val) {
    const width = (0, json_js_1.isJson)(val.width, "number") ? val.width : void 0;
    const height = (0, json_js_1.isJson)(val.height, "number") ? val.height : void 0;
    return { width: width, height: height };
}
exports.newDeserializeTemplateSignerInputDimensionsField = newDeserializeTemplateSignerInputDimensionsField;
function newSerializeTemplateSignerInput(val) {
    const base = newSerializeSignRequestPrefillTag(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"TemplateSignerInput\"";
    }
    return Object.assign(Object.assign({}, base), { ["type"]: val.type == void 0 ? void 0 : newSerializeTemplateSignerInputTypeField(val.type), ["content_type"]: val.contentType == void 0 ? void 0 : newSerializeTemplateSignerInputContentTypeField(val.contentType), ["is_required"]: val.isRequired, ["page_index"]: val.pageIndex, ["document_id"]: val.documentId, ["dropdown_choices"]: val.dropdownChoices == void 0 ? void 0 : val.dropdownChoices.map(function (item) {
            return void 0;
        }), ["group_id"]: val.groupId, ["coordinates"]: val.coordinates == void 0 ? void 0 : newSerializeTemplateSignerInputCoordinatesField(val.coordinates), ["dimensions"]: val.dimensions == void 0 ? void 0 : newSerializeTemplateSignerInputDimensionsField(val.dimensions) });
}
exports.newSerializeTemplateSignerInput = newSerializeTemplateSignerInput;
function newDeserializeTemplateSignerInput(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeTemplateSignerInputTypeField(val.type);
    const contentType = val.content_type == void 0 ? void 0 : newDeserializeTemplateSignerInputContentTypeField(val.content_type);
    const isRequired = (0, json_js_1.isJson)(val.is_required, "boolean") ? val.is_required : void 0;
    const pageIndex = val.page_index;
    const documentId = (0, json_js_1.isJson)(val.document_id, "string") ? val.document_id : void 0;
    const dropdownChoices = (0, json_js_1.isJson)(val.dropdown_choices, "array") ? val.dropdown_choices.map(function (itm) {
        return void 0;
    }) : void 0;
    const groupId = (0, json_js_1.isJson)(val.group_id, "string") ? val.group_id : void 0;
    const coordinates = val.coordinates == void 0 ? void 0 : newDeserializeTemplateSignerInputCoordinatesField(val.coordinates);
    const dimensions = val.dimensions == void 0 ? void 0 : newDeserializeTemplateSignerInputDimensionsField(val.dimensions);
    const documentTagId = (0, json_js_1.isJson)(val.document_tag_id, "string") ? val.document_tag_id : void 0;
    const textValue = (0, json_js_1.isJson)(val.text_value, "string") ? val.text_value : void 0;
    const checkboxValue = (0, json_js_1.isJson)(val.checkbox_value, "boolean") ? val.checkbox_value : void 0;
    const dateValue = (0, json_js_1.isJson)(val.date_value, "string") ? val.date_value : void 0;
    return { type: type, contentType: contentType, isRequired: isRequired, pageIndex: pageIndex, documentId: documentId, dropdownChoices: dropdownChoices, groupId: groupId, coordinates: coordinates, dimensions: dimensions, documentTagId: documentTagId, textValue: textValue, checkboxValue: checkboxValue, dateValue: dateValue };
}
exports.newDeserializeTemplateSignerInput = newDeserializeTemplateSignerInput;
function newSerializeTemplateSignerRoleField(val) {
    return val;
}
exports.newSerializeTemplateSignerRoleField = newSerializeTemplateSignerRoleField;
function newDeserializeTemplateSignerRoleField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TemplateSignerRoleField\"";
    }
    if (val == "signer") {
        return "signer";
    }
    if (val == "approver") {
        return "approver";
    }
    if (val == "final_copy_reader") {
        return "final_copy_reader";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTemplateSignerRoleField = newDeserializeTemplateSignerRoleField;
function newSerializeTemplateSigner(val) {
    return { ["inputs"]: val.inputs == void 0 ? void 0 : val.inputs.map(function (item) {
            return newSerializeTemplateSignerInput(item);
        }), ["email"]: val.email, ["role"]: val.role == void 0 ? void 0 : newSerializeTemplateSignerRoleField(val.role), ["is_in_person"]: val.isInPerson, ["order"]: val.order };
}
exports.newSerializeTemplateSigner = newSerializeTemplateSigner;
function newDeserializeTemplateSigner(val) {
    const inputs = (0, json_js_1.isJson)(val.inputs, "array") ? val.inputs.map(function (itm) {
        return newDeserializeTemplateSignerInput(itm);
    }) : void 0;
    const email = (0, json_js_1.isJson)(val.email, "string") ? val.email : void 0;
    const role = val.role == void 0 ? void 0 : newDeserializeTemplateSignerRoleField(val.role);
    const isInPerson = (0, json_js_1.isJson)(val.is_in_person, "boolean") ? val.is_in_person : void 0;
    const order = (0, json_js_1.isJson)(val.order, "number") ? val.order : void 0;
    return { inputs: inputs, email: email, role: role, isInPerson: isInPerson, order: order };
}
exports.newDeserializeTemplateSigner = newDeserializeTemplateSigner;
function newSerializeSignTemplateAdditionalInfoFieldNonEditableField(val) {
    return val;
}
exports.newSerializeSignTemplateAdditionalInfoFieldNonEditableField = newSerializeSignTemplateAdditionalInfoFieldNonEditableField;
function newDeserializeSignTemplateAdditionalInfoFieldNonEditableField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignTemplateAdditionalInfoFieldNonEditableField\"";
    }
    if (val == "email_subject") {
        return "email_subject";
    }
    if (val == "email_message") {
        return "email_message";
    }
    if (val == "name") {
        return "name";
    }
    if (val == "days_valid") {
        return "days_valid";
    }
    if (val == "signers") {
        return "signers";
    }
    if (val == "source_files") {
        return "source_files";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSignTemplateAdditionalInfoFieldNonEditableField = newDeserializeSignTemplateAdditionalInfoFieldNonEditableField;
function newSerializeSignTemplateAdditionalInfoFieldRequiredFieldSignersField(val) {
    return val;
}
exports.newSerializeSignTemplateAdditionalInfoFieldRequiredFieldSignersField = newSerializeSignTemplateAdditionalInfoFieldRequiredFieldSignersField;
function newDeserializeSignTemplateAdditionalInfoFieldRequiredFieldSignersField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignTemplateAdditionalInfoFieldRequiredFieldSignersField\"";
    }
    if (val == "email") {
        return "email";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeSignTemplateAdditionalInfoFieldRequiredFieldSignersField = newDeserializeSignTemplateAdditionalInfoFieldRequiredFieldSignersField;
function newSerializeSignTemplateAdditionalInfoFieldRequiredField(val) {
    return { ["signers"]: val.signers == void 0 ? void 0 : val.signers.map(function (item) {
            return void 0;
        }) };
}
exports.newSerializeSignTemplateAdditionalInfoFieldRequiredField = newSerializeSignTemplateAdditionalInfoFieldRequiredField;
function newDeserializeSignTemplateAdditionalInfoFieldRequiredField(val) {
    const signers = (0, json_js_1.isJson)(val.signers, "array") ? val.signers.map(function (itm) {
        return void 0;
    }) : void 0;
    return { signers: signers };
}
exports.newDeserializeSignTemplateAdditionalInfoFieldRequiredField = newDeserializeSignTemplateAdditionalInfoFieldRequiredField;
function newSerializeSignTemplateAdditionalInfoField(val) {
    return { ["non_editable"]: val.nonEditable == void 0 ? void 0 : val.nonEditable.map(function (item) {
            return newSerializeSignTemplateAdditionalInfoFieldNonEditableField(item);
        }), ["required"]: val.required == void 0 ? void 0 : newSerializeSignTemplateAdditionalInfoFieldRequiredField(val.required) };
}
exports.newSerializeSignTemplateAdditionalInfoField = newSerializeSignTemplateAdditionalInfoField;
function newDeserializeSignTemplateAdditionalInfoField(val) {
    const nonEditable = (0, json_js_1.isJson)(val.non_editable, "array") ? val.non_editable.map(function (itm) {
        return newDeserializeSignTemplateAdditionalInfoFieldNonEditableField(itm);
    }) : void 0;
    const required = val.required == void 0 ? void 0 : newDeserializeSignTemplateAdditionalInfoFieldRequiredField(val.required);
    return { nonEditable: nonEditable, required: required };
}
exports.newDeserializeSignTemplateAdditionalInfoField = newDeserializeSignTemplateAdditionalInfoField;
function newSerializeSignTemplateReadySignLinkField(val) {
    return { ["url"]: val.url, ["name"]: val.name, ["instructions"]: val.instructions, ["folder_id"]: val.folderId, ["is_notification_disabled"]: val.isNotificationDisabled, ["is_active"]: val.isActive };
}
exports.newSerializeSignTemplateReadySignLinkField = newSerializeSignTemplateReadySignLinkField;
function newDeserializeSignTemplateReadySignLinkField(val) {
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const instructions = (0, json_js_1.isJson)(val.instructions, "string") ? val.instructions : void 0;
    const folderId = (0, json_js_1.isJson)(val.folder_id, "string") ? val.folder_id : void 0;
    const isNotificationDisabled = (0, json_js_1.isJson)(val.is_notification_disabled, "boolean") ? val.is_notification_disabled : void 0;
    const isActive = (0, json_js_1.isJson)(val.is_active, "boolean") ? val.is_active : void 0;
    return { url: url, name: name, instructions: instructions, folderId: folderId, isNotificationDisabled: isNotificationDisabled, isActive: isActive };
}
exports.newDeserializeSignTemplateReadySignLinkField = newDeserializeSignTemplateReadySignLinkField;
function newSerializeSignTemplateCustomBrandingField(val) {
    return { ["company_name"]: val.companyName, ["logo_uri"]: val.logoUri, ["branding_color"]: val.brandingColor, ["email_footer_text"]: val.emailFooterText };
}
exports.newSerializeSignTemplateCustomBrandingField = newSerializeSignTemplateCustomBrandingField;
function newDeserializeSignTemplateCustomBrandingField(val) {
    const companyName = (0, json_js_1.isJson)(val.company_name, "string") ? val.company_name : void 0;
    const logoUri = (0, json_js_1.isJson)(val.logo_uri, "string") ? val.logo_uri : void 0;
    const brandingColor = (0, json_js_1.isJson)(val.branding_color, "string") ? val.branding_color : void 0;
    const emailFooterText = (0, json_js_1.isJson)(val.email_footer_text, "string") ? val.email_footer_text : void 0;
    return { companyName: companyName, logoUri: logoUri, brandingColor: brandingColor, emailFooterText: emailFooterText };
}
exports.newDeserializeSignTemplateCustomBrandingField = newDeserializeSignTemplateCustomBrandingField;
function newSerializeSignTemplate(val) {
    return { ["id"]: val.id, ["name"]: val.name, ["email_subject"]: val.emailSubject, ["email_message"]: val.emailMessage, ["days_valid"]: val.daysValid, ["parent_folder"]: val.parentFolder == void 0 ? void 0 : newSerializeFolderMini(val.parentFolder), ["source_files"]: val.sourceFiles == void 0 ? void 0 : val.sourceFiles.map(function (item) {
            return newSerializeFileMini(item);
        }), ["are_fields_locked"]: val.areFieldsLocked, ["are_options_locked"]: val.areOptionsLocked, ["are_recipients_locked"]: val.areRecipientsLocked, ["are_email_settings_locked"]: val.areEmailSettingsLocked, ["are_files_locked"]: val.areFilesLocked, ["signers"]: val.signers == void 0 ? void 0 : val.signers.map(function (item) {
            return newSerializeTemplateSigner(item);
        }), ["additional_info"]: val.additionalInfo == void 0 ? void 0 : newSerializeSignTemplateAdditionalInfoField(val.additionalInfo), ["ready_sign_link"]: val.readySignLink == void 0 ? void 0 : newSerializeSignTemplateReadySignLinkField(val.readySignLink), ["custom_branding"]: val.customBranding == void 0 ? void 0 : newSerializeSignTemplateCustomBrandingField(val.customBranding) };
}
exports.newSerializeSignTemplate = newSerializeSignTemplate;
function newDeserializeSignTemplate(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const emailSubject = (0, json_js_1.isJson)(val.email_subject, "string") ? val.email_subject : void 0;
    const emailMessage = (0, json_js_1.isJson)(val.email_message, "string") ? val.email_message : void 0;
    const daysValid = (0, json_js_1.isJson)(val.days_valid, "number") ? val.days_valid : void 0;
    const parentFolder = val.parent_folder == void 0 ? void 0 : newDeserializeFolderMini(val.parent_folder);
    const sourceFiles = (0, json_js_1.isJson)(val.source_files, "array") ? val.source_files.map(function (itm) {
        return newDeserializeFileMini(itm);
    }) : void 0;
    const areFieldsLocked = (0, json_js_1.isJson)(val.are_fields_locked, "boolean") ? val.are_fields_locked : void 0;
    const areOptionsLocked = (0, json_js_1.isJson)(val.are_options_locked, "boolean") ? val.are_options_locked : void 0;
    const areRecipientsLocked = (0, json_js_1.isJson)(val.are_recipients_locked, "boolean") ? val.are_recipients_locked : void 0;
    const areEmailSettingsLocked = (0, json_js_1.isJson)(val.are_email_settings_locked, "boolean") ? val.are_email_settings_locked : void 0;
    const areFilesLocked = (0, json_js_1.isJson)(val.are_files_locked, "boolean") ? val.are_files_locked : void 0;
    const signers = (0, json_js_1.isJson)(val.signers, "array") ? val.signers.map(function (itm) {
        return newDeserializeTemplateSigner(itm);
    }) : void 0;
    const additionalInfo = val.additional_info == void 0 ? void 0 : newDeserializeSignTemplateAdditionalInfoField(val.additional_info);
    const readySignLink = val.ready_sign_link == void 0 ? void 0 : newDeserializeSignTemplateReadySignLinkField(val.ready_sign_link);
    const customBranding = val.custom_branding == void 0 ? void 0 : newDeserializeSignTemplateCustomBrandingField(val.custom_branding);
    return { id: id, name: name, emailSubject: emailSubject, emailMessage: emailMessage, daysValid: daysValid, parentFolder: parentFolder, sourceFiles: sourceFiles, areFieldsLocked: areFieldsLocked, areOptionsLocked: areOptionsLocked, areRecipientsLocked: areRecipientsLocked, areEmailSettingsLocked: areEmailSettingsLocked, areFilesLocked: areFilesLocked, signers: signers, additionalInfo: additionalInfo, readySignLink: readySignLink, customBranding: customBranding };
}
exports.newDeserializeSignTemplate = newDeserializeSignTemplate;
function newSerializeShieldInformationBarrierReportDetailsDetailsField(val) {
    return { ["folder_id"]: val.folderId };
}
exports.newSerializeShieldInformationBarrierReportDetailsDetailsField = newSerializeShieldInformationBarrierReportDetailsDetailsField;
function newDeserializeShieldInformationBarrierReportDetailsDetailsField(val) {
    const folderId = (0, json_js_1.isJson)(val.folder_id, "string") ? val.folder_id : void 0;
    return { folderId: folderId };
}
exports.newDeserializeShieldInformationBarrierReportDetailsDetailsField = newDeserializeShieldInformationBarrierReportDetailsDetailsField;
function newSerializeShieldInformationBarrierReportDetails(val) {
    return { ["details"]: val.details == void 0 ? void 0 : newSerializeShieldInformationBarrierReportDetailsDetailsField(val.details) };
}
exports.newSerializeShieldInformationBarrierReportDetails = newSerializeShieldInformationBarrierReportDetails;
function newDeserializeShieldInformationBarrierReportDetails(val) {
    const details = val.details == void 0 ? void 0 : newDeserializeShieldInformationBarrierReportDetailsDetailsField(val.details);
    return { details: details };
}
exports.newDeserializeShieldInformationBarrierReportDetails = newDeserializeShieldInformationBarrierReportDetails;
function newSerializeTrackingCodeTypeField(val) {
    return val;
}
exports.newSerializeTrackingCodeTypeField = newSerializeTrackingCodeTypeField;
function newDeserializeTrackingCodeTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrackingCodeTypeField\"";
    }
    if (val == "tracking_code") {
        return "tracking_code";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeTrackingCodeTypeField = newDeserializeTrackingCodeTypeField;
function newSerializeTrackingCode(val) {
    return { ["type"]: val.type == void 0 ? void 0 : newSerializeTrackingCodeTypeField(val.type), ["name"]: val.name, ["value"]: val.value };
}
exports.newSerializeTrackingCode = newSerializeTrackingCode;
function newDeserializeTrackingCode(val) {
    const type = val.type == void 0 ? void 0 : newDeserializeTrackingCodeTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const value = (0, json_js_1.isJson)(val.value, "string") ? val.value : void 0;
    return { type: type, name: name, value: value };
}
exports.newDeserializeTrackingCode = newDeserializeTrackingCode;
function newSerializeUserFullRoleField(val) {
    return val;
}
exports.newSerializeUserFullRoleField = newSerializeUserFullRoleField;
function newDeserializeUserFullRoleField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UserFullRoleField\"";
    }
    if (val == "admin") {
        return "admin";
    }
    if (val == "coadmin") {
        return "coadmin";
    }
    if (val == "user") {
        return "user";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeUserFullRoleField = newDeserializeUserFullRoleField;
function newSerializeUserFullEnterpriseFieldTypeField(val) {
    return val;
}
exports.newSerializeUserFullEnterpriseFieldTypeField = newSerializeUserFullEnterpriseFieldTypeField;
function newDeserializeUserFullEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UserFullEnterpriseFieldTypeField\"";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeUserFullEnterpriseFieldTypeField = newDeserializeUserFullEnterpriseFieldTypeField;
function newSerializeUserFullEnterpriseField(val) {
    return { ["id"]: val.id, ["type"]: val.type == void 0 ? void 0 : newSerializeUserFullEnterpriseFieldTypeField(val.type), ["name"]: val.name };
}
exports.newSerializeUserFullEnterpriseField = newSerializeUserFullEnterpriseField;
function newDeserializeUserFullEnterpriseField(val) {
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type == void 0 ? void 0 : newDeserializeUserFullEnterpriseFieldTypeField(val.type);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.newDeserializeUserFullEnterpriseField = newDeserializeUserFullEnterpriseField;
function newSerializeUserFull(val) {
    const base = newSerializeUser(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"UserFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["role"]: val.role == void 0 ? void 0 : newSerializeUserFullRoleField(val.role), ["tracking_codes"]: val.trackingCodes == void 0 ? void 0 : val.trackingCodes.map(function (item) {
            return newSerializeTrackingCode(item);
        }), ["can_see_managed_users"]: val.canSeeManagedUsers, ["is_sync_enabled"]: val.isSyncEnabled, ["is_external_collab_restricted"]: val.isExternalCollabRestricted, ["is_exempt_from_device_limits"]: val.isExemptFromDeviceLimits, ["is_exempt_from_login_verification"]: val.isExemptFromLoginVerification, ["enterprise"]: val.enterprise == void 0 ? void 0 : newSerializeUserFullEnterpriseField(val.enterprise), ["my_tags"]: val.myTags == void 0 ? void 0 : val.myTags.map(function (item) {
            return void 0;
        }), ["hostname"]: val.hostname, ["is_platform_access_only"]: val.isPlatformAccessOnly, ["external_app_user_id"]: val.externalAppUserId });
}
exports.newSerializeUserFull = newSerializeUserFull;
function newDeserializeUserFull(val) {
    const role = val.role == void 0 ? void 0 : newDeserializeUserFullRoleField(val.role);
    const trackingCodes = (0, json_js_1.isJson)(val.tracking_codes, "array") ? val.tracking_codes.map(function (itm) {
        return newDeserializeTrackingCode(itm);
    }) : void 0;
    const canSeeManagedUsers = (0, json_js_1.isJson)(val.can_see_managed_users, "boolean") ? val.can_see_managed_users : void 0;
    const isSyncEnabled = (0, json_js_1.isJson)(val.is_sync_enabled, "boolean") ? val.is_sync_enabled : void 0;
    const isExternalCollabRestricted = (0, json_js_1.isJson)(val.is_external_collab_restricted, "boolean") ? val.is_external_collab_restricted : void 0;
    const isExemptFromDeviceLimits = (0, json_js_1.isJson)(val.is_exempt_from_device_limits, "boolean") ? val.is_exempt_from_device_limits : void 0;
    const isExemptFromLoginVerification = (0, json_js_1.isJson)(val.is_exempt_from_login_verification, "boolean") ? val.is_exempt_from_login_verification : void 0;
    const enterprise = val.enterprise == void 0 ? void 0 : newDeserializeUserFullEnterpriseField(val.enterprise);
    const myTags = (0, json_js_1.isJson)(val.my_tags, "array") ? val.my_tags.map(function (itm) {
        return void 0;
    }) : void 0;
    const hostname = (0, json_js_1.isJson)(val.hostname, "string") ? val.hostname : void 0;
    const isPlatformAccessOnly = (0, json_js_1.isJson)(val.is_platform_access_only, "boolean") ? val.is_platform_access_only : void 0;
    const externalAppUserId = (0, json_js_1.isJson)(val.external_app_user_id, "string") ? val.external_app_user_id : void 0;
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const language = (0, json_js_1.isJson)(val.language, "string") ? val.language : void 0;
    const timezone = (0, json_js_1.isJson)(val.timezone, "string") ? val.timezone : void 0;
    const spaceAmount = (0, json_js_1.isJson)(val.space_amount, "number") ? val.space_amount : void 0;
    const spaceUsed = (0, json_js_1.isJson)(val.space_used, "number") ? val.space_used : void 0;
    const maxUploadSize = (0, json_js_1.isJson)(val.max_upload_size, "number") ? val.max_upload_size : void 0;
    const status = val.status == void 0 ? void 0 : newDeserializeUserStatusField(val.status);
    const jobTitle = (0, json_js_1.isJson)(val.job_title, "string") ? val.job_title : void 0;
    const phone = (0, json_js_1.isJson)(val.phone, "string") ? val.phone : void 0;
    const address = (0, json_js_1.isJson)(val.address, "string") ? val.address : void 0;
    const avatarUrl = (0, json_js_1.isJson)(val.avatar_url, "string") ? val.avatar_url : void 0;
    const notificationEmail = val.notification_email == void 0 ? void 0 : newDeserializeUserNotificationEmailField(val.notification_email);
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const login = (0, json_js_1.isJson)(val.login, "string") ? val.login : void 0;
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = newDeserializeUserBaseTypeField(val.type);
    return { role: role, trackingCodes: trackingCodes, canSeeManagedUsers: canSeeManagedUsers, isSyncEnabled: isSyncEnabled, isExternalCollabRestricted: isExternalCollabRestricted, isExemptFromDeviceLimits: isExemptFromDeviceLimits, isExemptFromLoginVerification: isExemptFromLoginVerification, enterprise: enterprise, myTags: myTags, hostname: hostname, isPlatformAccessOnly: isPlatformAccessOnly, externalAppUserId: externalAppUserId, createdAt: createdAt, modifiedAt: modifiedAt, language: language, timezone: timezone, spaceAmount: spaceAmount, spaceUsed: spaceUsed, maxUploadSize: maxUploadSize, status: status, jobTitle: jobTitle, phone: phone, address: address, avatarUrl: avatarUrl, notificationEmail: notificationEmail, name: name, login: login, id: id, type: type };
}
exports.newDeserializeUserFull = newDeserializeUserFull;
function newSerializeMetadataFilterScopeField(val) {
    return val;
}
exports.newSerializeMetadataFilterScopeField = newSerializeMetadataFilterScopeField;
function newDeserializeMetadataFilterScopeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataFilterScopeField\"";
    }
    if (val == "global") {
        return "global";
    }
    if (val == "enterprise") {
        return "enterprise";
    }
    if (val == "enterprise_{enterprise_id}") {
        return "enterprise_{enterprise_id}";
    }
    throw "".concat("Invalid value: ", val);
}
exports.newDeserializeMetadataFilterScopeField = newDeserializeMetadataFilterScopeField;
function newSerializeMetadataFilterFiltersField(val) {
    return {};
}
exports.newSerializeMetadataFilterFiltersField = newSerializeMetadataFilterFiltersField;
function newDeserializeMetadataFilterFiltersField(val) {
    return {};
}
exports.newDeserializeMetadataFilterFiltersField = newDeserializeMetadataFilterFiltersField;
function newSerializeMetadataFilter(val) {
    return { ["scope"]: val.scope == void 0 ? void 0 : newSerializeMetadataFilterScopeField(val.scope), ["templateKey"]: val.templateKey, ["filters"]: val.filters == void 0 ? void 0 : newSerializeMetadataFilterFiltersField(val.filters) };
}
exports.newSerializeMetadataFilter = newSerializeMetadataFilter;
function newDeserializeMetadataFilter(val) {
    const scope = val.scope == void 0 ? void 0 : newDeserializeMetadataFilterScopeField(val.scope);
    const templateKey = (0, json_js_1.isJson)(val.templateKey, "string") ? val.templateKey : void 0;
    const filters = val.filters == void 0 ? void 0 : newDeserializeMetadataFilterFiltersField(val.filters);
    return { scope: scope, templateKey: templateKey, filters: filters };
}
exports.newDeserializeMetadataFilter = newDeserializeMetadataFilter;
function newSerializeMetadataFieldFilterString(val) {
    return {};
}
exports.newSerializeMetadataFieldFilterString = newSerializeMetadataFieldFilterString;
function newDeserializeMetadataFieldFilterString(val) {
    return {};
}
exports.newDeserializeMetadataFieldFilterString = newDeserializeMetadataFieldFilterString;
function newSerializeMetadataFieldFilterFloat(val) {
    return {};
}
exports.newSerializeMetadataFieldFilterFloat = newSerializeMetadataFieldFilterFloat;
function newDeserializeMetadataFieldFilterFloat(val) {
    return {};
}
exports.newDeserializeMetadataFieldFilterFloat = newDeserializeMetadataFieldFilterFloat;
function newSerializeMetadataFieldFilterMultiSelect(val) {
    return {};
}
exports.newSerializeMetadataFieldFilterMultiSelect = newSerializeMetadataFieldFilterMultiSelect;
function newDeserializeMetadataFieldFilterMultiSelect(val) {
    return {};
}
exports.newDeserializeMetadataFieldFilterMultiSelect = newDeserializeMetadataFieldFilterMultiSelect;
function newSerializeMetadataFieldFilterFloatRange(val) {
    return {};
}
exports.newSerializeMetadataFieldFilterFloatRange = newSerializeMetadataFieldFilterFloatRange;
function newDeserializeMetadataFieldFilterFloatRange(val) {
    return {};
}
exports.newDeserializeMetadataFieldFilterFloatRange = newDeserializeMetadataFieldFilterFloatRange;
function newSerializeMetadataFieldFilterDateRange(val) {
    return {};
}
exports.newSerializeMetadataFieldFilterDateRange = newSerializeMetadataFieldFilterDateRange;
function newDeserializeMetadataFieldFilterDateRange(val) {
    return {};
}
exports.newDeserializeMetadataFieldFilterDateRange = newDeserializeMetadataFieldFilterDateRange;
//# sourceMappingURL=schemas.generated.js.map